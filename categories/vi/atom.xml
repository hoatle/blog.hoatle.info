<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vi | blog.hoatle.info]]></title>
  <link href="http://blog.hoatle.info/categories/vi/atom.xml" rel="self"/>
  <link href="http://blog.hoatle.info/"/>
  <updated>2013-12-26T10:22:52+00:00</updated>
  <id>http://blog.hoatle.info/</id>
  <author>
    <name><![CDATA[hoatle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dùng "decorator" để đo thời gian thực thi của bất kỳ hàm nào trong Python]]></title>
    <link href="http://blog.hoatle.info/2013/12/25/dung-decorator-de-do-thoi-gian-thuc-thi-cua-bat-ky-ham-nao-trong-python/"/>
    <updated>2013-12-25T20:09:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/25/dung-decorator-de-do-thoi-gian-thuc-thi-cua-bat-ky-ham-nao-trong-python</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2013/12/python-logo-master.png" title="Python Logo" ></p>

<p>Python có cú pháp cho &ldquo;decorator&rdquo; rất linh hoạt, nó được sử dụng khá rộng rãi.
Bài viết này tôi giới thiệu cách sử dụng &ldquo;decorator&rdquo; cho một ví dụ khá hay:
dùng &ldquo;decorator&rdquo; để đo đếm thời gian thực thi của bất kỳ hàm nào.</p>

<!-- more -->


<h2>&ldquo;decorator&rdquo; là gì?</h2>

<p>Bạn đừng nhầm lẫn &ldquo;decorator&rdquo; trong Python với &ldquo;decorator design pattern&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>
vì nó còn làm được nhiều hơn thế, nó nghiêng về &ldquo;AOP (Aspect Oriented
Programming)&rdquo;<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> hơn.</p>

<p>Để tìm hiểu nhiều hơn về &ldquo;decorator&rdquo; trong Python, bạn có thể xem các bài viết
trong phần đọc thêm bên dưới.</p>

<h2>Yêu Cầu</h2>

<p>Đo thời gian thực thi của hàm sau (theo mili-giây):</p>

<p>```python
def add(x, y):</p>

<pre><code>return x + y
</code></pre>

<p>```</p>

<p>Lưu tệp tin là: &ldquo;add.py&rdquo;.</p>

<h2>Đo Thời Gian Theo Cách Đơn Giản Nhất</h2>

<p>Để đo thời gian thực thi, cách đơn giản nhất là đếm thời gian trước lúc chạy và
sau khi chạy xong hàm, rồi lấy thời gian sau trừ thời gian trước cho khoảng
thời gian thực thi.</p>

<p>Có thể viết như sau:</p>

<p>```python
import time</p>

<p>def add(x, y):</p>

<pre><code>return x + y
</code></pre>

<h1>test</h1>

<p>start_time = time.time()
add(3, 4)
end_time = time.time()
print &lsquo;total run-time: %f ms&rsquo; % ((end_time &ndash; start_time) * 1000)
```</p>

<p>Sau khi chạy <code>$ python add.py</code> có kết quả tương tự như sau:</p>

<p><code>bash
$ python add.py
total run-time: 0.007153 ms
</code></p>

<p>Đấy là cách đo đơn giản nhất mà có thể làm được với bất kỳ ngôn ngữ nào, nhưng
cách đo đếm này không hiệu quả khi cần đo đếm hàng nghìn hàm, code sẽ bị trùng
lặp nhiều (&ldquo;boiler plate&rdquo;).</p>

<h2>Đo Thời Gian Dùng &ldquo;decorator design pattern&rdquo;</h2>

<p>Trong Python, có thể làm như sau:</p>

<p>```python
import time</p>

<p>def timer(fn):</p>

<pre><code>def wrapper(*args, **kwargs):
    start_time = time.time()
    result = fn(*args, **kwargs)
    end_time = time.time()
    print 'total run-time of %r: %f ms' % (fn.__name__, (end_time - start_time) * 1000)
    return result
return wrapper
</code></pre>

<p>def add(x, y):</p>

<pre><code>return x + y
</code></pre>

<p>add = timer(add)</p>

<p>def sub(x, y):</p>

<pre><code>return x - y
</code></pre>

<p>sub = timer(sub)</p>

<h1>test</h1>

<p>add(3, 4)
sub(3, 4)
```</p>

<p>Kết quả chạy có thể như sau:</p>

<p><code>bash
$ python add.py
total run-time of 'add': 0.143051 ms
total run-time of 'sub': 3.393173 ms
</code></p>

<p>Đây là cách làm thường thấy trước khi cú pháp &ldquo;decorator&rdquo; được giới thiệu, có
thể dùng <code>timer</code> để đo đếm các hàm, ví dụ <code>add</code> và <code>sub</code> như trên.</p>

<h2>Dùng Cú Pháp Của &ldquo;decorator&rdquo;</h2>

<p>Rất đơn giản, thay vì dùng <code>add = timer(add)</code> thì dùng <code>@timer</code>:</p>

<p>```python
import time</p>

<p>def timer(fn):</p>

<pre><code>def wrapper(*args, **kwargs):
    start_time = time.time()
    result = fn(*args, **kwargs)
    end_time = time.time()
    print 'total run-time of %r: %f ms' % (fn.__name__, (end_time - start_time) * 1000)
    return result
return wrapper
</code></pre>

<p>@timer
def add(x, y):</p>

<pre><code>return x + y
</code></pre>

<p>@timer
def sub(x, y):</p>

<pre><code>return x - y
</code></pre>

<h1>test</h1>

<p>add(3, 4)
sub(3, 4)
```</p>

<p>Như vậy bằng việc dùng &ldquo;decorator&rdquo;, code Python dễ đọc hơn, lưu ý bạn có thể
thêm nhiều &ldquo;decorator&rdquo; cho 1 hàm.</p>

<h2>Ứng Dụng <code>timer</code></h2>

<p>Đo đếm thời gian liên quan đến &ldquo;performance-tuning&rdquo; và &ldquo;timeout&rdquo; &ndash; giới hạn
thời gian thực thi của hàm, nếu lâu quá thì thông báo lỗi và phải xử lý. Ví dụ
chỉ cho hàm <code>add</code> trên được thực thi trong khoảng <code>0.007 ms</code> thì làm như sau:</p>

<p>```python
import sys
import time</p>

<p>class TimeoutException(Exception):</p>

<pre><code>pass
</code></pre>

<p>def timeout(val=sys.maxsize, info=False):</p>

<pre><code>def wrapper(fn):
    def wrapper_fn(*args, **kwargs):
        start_time = time.time()
        result = fn(*args, **kwargs)
        end_time = time.time()
        run_time = (end_time - start_time) * 1000 # miliseconds
        if run_time &gt; val:
            raise TimeoutException('%r run-time: expected: %f ms, but actual: %f ms' % (fn.__name__, val, run_time))
        if info:
            print '%r run-time: %f ms' % (fn.__name__, run_time)
        return result
    return wrapper_fn
return wrapper
</code></pre>

<p>@timeout(0.007)
def add(x, y):</p>

<pre><code>return x + y
</code></pre>

<p>@timeout(info=True)
def sub(x, y):</p>

<pre><code>return x - y
</code></pre>

<h1>Test</h1>

<p>add(3, 4)</p>

<p>sub(3, 4)
```</p>

<p><code>timeout</code> nhận 2 tham số là <code>val</code> &ndash; giá trị &ldquo;timeout&rdquo; và in ra thông tin thời
gian chạy với tham số <code>info</code>.</p>

<p>Khi thời gian thực thi của <code>add</code> quá 0.007 mili-giây sẽ xảy ra
<code>TimeoutException</code> tương tự như lần chạy sau:</p>

<p>```bash
$ python add.py
Traceback (most recent call last):
  File &ldquo;add.py&rdquo;, line 35, in <module></p>

<pre><code>add(3, 4)
</code></pre>

<p>  File &ldquo;add.py&rdquo;, line 17, in wrapper_fn</p>

<pre><code>raise TimeoutException('%r run-time: expected: %f ms, but actual: %f ms' % (fn.__name__, val, run_time))
</code></pre>

<p><strong>main</strong>.TimeoutException: &lsquo;add&rsquo; run-time: expected: 0.007000 ms, but actual: 0.137091 ms
```</p>

<h2>Tổng Kết</h2>

<p>Như vậy bạn có thể quản lý và đưa giới hạn thời gian thực thi cho bất kỳ hàm
nào, điều này khá quan trọng với vấn đề &ldquo;performance&rdquo; cũng như &ldquo;security&rdquo; nhờ
cách dùng &ldquo;decorator&rdquo; rất linh hoạt trong Python. Đây chỉ là một ứng dụng nho
nhỏ của &ldquo;decorator&rdquo;, chúc bạn có thể áp dụng &ldquo;decorator&rdquo; trong nhiều bài
toán thực tế hơn.</p>

<h2>Đọc Thêm</h2>

<ul>
<li><a href="http://www.artima.com/weblogs/viewpost.jsp?thread=240808">http://www.artima.com/weblogs/viewpost.jsp?thread=240808</a></li>
<li><a href="http://www.artima.com/weblogs/viewpost.jsp?thread=240845">http://www.artima.com/weblogs/viewpost.jsp?thread=240845</a></li>
<li><a href="http://en.wikipedia.org/wiki/Python_syntax_and_semantics#Decorators">http://en.wikipedia.org/wiki/Python_syntax_and_semantics#Decorators</a></li>
</ul>


<h2>Hình Ảnh</h2>

<ul>
<li><a href="http://www.vizteams.com/blog/why-python-as-programming-language-past-present-future">http://www.vizteams.com/blog/why-python-as-programming-language-past-present-future</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://en.wikipedia.org/wiki/Decorator_pattern<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://en.wikipedia.org/wiki/Aspect-oriented_programming<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tại sao cần kiểm thử phần mềm?]]></title>
    <link href="http://blog.hoatle.info/2013/12/20/tai-sao-can-kiem-thu-phan-mem/"/>
    <updated>2013-12-20T16:22:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/20/tai-sao-can-kiem-thu-phan-mem</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2013/12/software-testing.jpg" title="Kiểm Thử Phần Mềm &ndash; Software Testing" ></p>

<p>Làm gì cũng cần kiểm tra, đánh giá thì mới biết được liệu nó có đạt được những gì được mong đợi, có
sai sót gì không. Tôi không hình dung được liệu trên thế giới này có gì không phải kiểm thử không?
Ngay cả quá trình phát triển của con người cũng trải qua hàng triệu năm được tự nhiên kiểm thử với
nhiều nhánh phát triển khác nhau. Có thể nói kiểm thử cũng có quy luật của nó, tôi gọi là &ldquo;bảo toàn
kiểm thử&rdquo;.</p>

<!-- more -->


<p>&ldquo;Bảo toàn kiểm thử&rdquo; nghĩa là thế nào? Nếu bạn nắm định luật &ldquo;bảo toàn năng lượng&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> thì bạn cứ
thay  &ldquo;năng lượng&rdquo; bằng &ldquo;kiểm thử&rdquo;.</p>

<ul>
<li><p>Bạn dùng một thiết bị, đồ vật nào đó? Nó đã được kiểm thử trước khi đến tay bạn.</p></li>
<li><p>Bạn chuẩn bị nâng cấp hệ điều hành cho chiếc điện thoại của mình? Các nhà phát triển đã kiểm thử
trước khi phân phối cho bạn. Ngay cả vậy thì bạn cũng vẫn muốn nghe ngóng những người khác sau khi
nâng cấp có bị vấn đề gì không trước khi quyết định nâng cấp nó? Những người dùng trước đó cũng thực
hiện công việc kiểm thử cho bạn.</p></li>
</ul>


<p>Còn vô số ví dụ như vậy để biết rằng kiểm thử là một phần không thể thiếu trong cuộc sống, và trong
bài viết này tôi nói cụ thể về kiểm thử trong phần mềm.</p>

<p>Khi làm kiểm thử trong phần mềm, chúng ta thường dùng các công cụ để tự động hoá quá trình kiểm thử
này. Nếu không tự động hoá được thì bạn phải kiểm thử bằng tay. Vậy kiểm thử tự động hay bằng tay,
cái nào tốt hơn?</p>

<p>Trước khi có tự động thì phải làm bằng tay, tuy nhiên khi làm bằng tay lặp lại nhiều lần thì nên
(phải) tự động hoá nó để tối ưu hoá sức lao động của máy móc và giải phóng sức lao động của con
người. Như chúng ta đã biết, máy tính làm một tác vụ nào đó lặp đi lặp lại rất chính xác và nhanh
khi được lập trình, đấy chính là điểm mạnh duy nhất của máy tính để chúng ta tận dụng nó. Nhưng để
tự động nó cần phải học cách sử dụng công cụ, cần phải nắm vững công cụ mới làm được. Còn kiểm thử
bằng tay thì chi phí thấp hơn, nhanh hơn vào giai đoạn đầu. Qua quá trình làm việc, tôi thấy được
quy luật sau:</p>

<ul>
<li><p>Kiểm thử tự động có chi phí lớn trong giai đoạn đầu nhưng sẽ giảm dần theo thời gian.</p></li>
<li><p>Kiểm thử bằng tay có chi phí thấp trong giai đoạn đầu nhưng sẽ tăng dần theo thời gian.</p></li>
</ul>


<p>Vậy nên để trả lời câu hỏi kiểm thử tự động hay bằng tay chỉ cần xem xét quy luật trên. Nếu dự án
của bạn đủ dài, đủ lớn thì cần đầu tư nhiều cho tự động hoá kiểm thử.</p>

<p>Một lý do khác cần tự động hoá kiểm thử là khi các trường hợp cần kiểm thử tăng dần theo thời gian,
nếu bạn không kiểm thử được hết thì khi phần mềm được cập nhật rất dễ gây nhiều lỗi. Đây là một bài
học đắt giá mà tôi đã phải trả khi còn làm dự án eXo Social. Trong 3 năm tham gia dự án, bắt đầu năm
thứ 2 tôi đã tập trung nhiều vào tự động hoá kiểm thử, nâng dần tỉ lệ bao quát (&ldquo;coverage&rdquo;). Sau một
thời gian dài nỗ lực thì tỉ lệ hệ thống được kiểm thử từ 2-3% được nâng lên hơn 10%, trong đó các
thành phần chủ chốt (&ldquo;core component&rdquo;) có tỉ lệ không dưới 70% (nếu tôi nhớ không nhầm), đó là cả sự
nỗ lực cố gắng không ngừng nghỉ của cả nhóm phát triển. Mặc dù vậy, tôi cũng đã mắc một sai lầm nghiêm
trọng khi để một bạn mới tham gia nhóm thay đổi nhiều code ở tầng có tỉ lệ kiểm thử thấp, sau đó phần
mềm đã có nhiễu lỗi cũ cũng như mới xảy ra. Tin tôi đi, đó là trải nghiệm không hề dễ chịu chút nào.</p>

<p>Sau bài học đó, tôi càng bị ám ảnh nhiều hơn với kiểm thử và quy trình kiểm thử. Nếu chúng ta có cơ
hội được làm việc với nhau, bạn sẽ thấy tôi có những yêu cầu rất khắt khe, có thể bạn cho là vô lý,
nhưng đó là từ những bài học, kinh nghiệm tôi đã đúc rút khi làm một dự án liên tục trong vòng hơn
3 năm với eXo Social và các dự án sau này.</p>

<p>Thật ra đến thời điểm này đầu tư cho tự động hoá kiểm thử phần mềm có chi phí không quá cao, học
công cụ cũng không khó, chỉ cần tìm hiểu một chút là bạn có thể làm được rồi. Tuy nhiên chi phí tổ
chức tự động hoá kiểm thử sao cho thật khoa học lại là cả một vấn đề lớn, nếu không có thể nó lại
đẩy thêm chi phí, gánh nặng cho phát triển phần mềm.</p>

<p>Kiểm thử có 4 cấp độ (&ldquo;testing level&rdquo;) như sau:</p>

<ul>
<li><p><code>unit testing</code>: kiểm thử từng đơn vị độc lập, riêng lẻ. Cụ thể trong phần mềm sẽ là các &ldquo;method&rdquo;
hoặc &ldquo;function&rdquo;. Bạn cần kiểm tra đầu vào và đầu ra của từng đơn vị độc lập ấy. Tôi xin nhấn mạnh
&ldquo;từng đơn vị độc lập, riêng lẻ&rdquo; thêm một lần nữa.</p></li>
<li><p><code>integration testing</code>: kiểm thử các &ldquo;module&rdquo; hay &ldquo;component&rdquo; khi chúng tương tác với nhau.</p></li>
<li><p><code>system testing</code>: kiểm thử cả một hệ thống hoàn chỉnh khi toàn bộ các &ldquo;module&rdquo; hay &ldquo;component&rdquo;
được tích hợp.</p></li>
<li><p><code>acceptance testing</code>: kiểm thử cả một hệ thống hoàn chỉnh từ A đến Z như được cài đặt cho người
dùng cuối.</p></li>
</ul>


<p>Càng ở cấp độ sau thì chi phí kiểm thử càng tốn kém hơn. Tuy nhiên, tự động hoá kiểm thử cho các cấp
độ này hoàn toàn làm được, và thực sự là tôi đang làm rồi. Càng tự động hoá được nhiều, thì về lâu
dài bạn sẽ tiết kiệm được rất nhiều chi phí. Chính vì thế mà &ldquo;automation&rdquo; là một trong những triết
lý phát triển của Teracy<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> &ndash; startup chúng tôi đang dành tâm huyết gây dựng.</p>

<p>Hôm trước bạn của tôi có hỏi trên Facebook<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>:</p>

<p><blockquote><p></p></p><p><p>Nếu như unit test đã pass hết. thì tại sao mọi ng lại cần tới acceptance test, functional (or integrate) test nhỉ?</p></p><p><p></p><footer><strong>Vinh Quốc Nguyễn <a href="https://www.facebook.com/kureikain/posts/10152118115309113">https://www.facebook.com/kureikain/posts/10152118115309113</a></strong></footer></blockquote></p>

<p>Và tôi có trả lời thế này:</p>

<p><blockquote><p></p></p><p><ul><br/><li><p>mỗi cái test 1 kiểu mà, unit test là test đơn vị method, functional test là test vài method liên quan với nhau, integration test là test ở mức các module với nhau, acceptance test là test 1 hệ thống người dùng sử dụng được rồi. Theo ý mình hiểu nôm na là thế, nên không có sự chồng chéo giữa các test level đâu.</p></li><br/><li><p>ví dụ như test lắp ráp hệ thống xe máy đi, unit test là test từng bộ phận (bánh răng, ốc vít, ống xả&hellip;), test unit (từng cái 1) thì ok, rồi lắp 1 số bộ phận làm bánh xe, động cơ xe. Mình vẫn phải test bánh xe, động cơ xe (functional) chứ kể cả unit test ok rồi. Rồi lắp bánh xe, động cơ xe, khung xe lại thành xe hoàn chỉnh thì cần test là xe nổ máy, vào số thì bánh xe phải chạy, đồng hồ phải hiển thị km/h&hellip; (integration test). Rồi sau đấy đi thử thật trên đường (acceptance test). Như vậy bước nào cũng cần. Khi viết test cần phân biệt các level của test thì tránh được sự chồng chéo.</p></li><br/></ul></p><p><br/><p></p></blockquote></p>

<p>Nhiều người (ngay cả tôi) có thể nhầm &ldquo;functional testing&rdquo; là 1 cấp độ kiểm thử (&ldquo;testing level&rdquo;),
nhưng thực ra nó là một kiểu kiểm thử (&ldquo;testing type&rdquo;). Kent Beck <sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>, tác giả của cuốn &ldquo;Extreme
Programming&rdquo;, cũng có trả lời câu hỏi phân biệt giữa &ldquo;unit testing&rdquo;, &ldquo;functional testing&rdquo; và
&ldquo;integration testing&rdquo;<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>.</p>

<p>Một số kiểu kiểm thử tôi có thể liệt kê ra ở đây:</p>

<ul>
<li><p><code>smoke testing</code></p></li>
<li><p><code>regression testing</code></p></li>
<li><p><code>functional testing</code></p></li>
<li><p><code>compatibility testing</code></p></li>
<li><p><code>acceptance testing</code></p></li>
<li><p><code>performance testing</code></p></li>
<li><p><code>security testing</code></p></li>
<li><p><code>destructive testing</code></p></li>
<li><p><code>usability testing</code></p></li>
<li><p><code>accessibility testing</code></p></li>
<li><p><code>A/B testing</code></p></li>
<li><p>&hellip;</p></li>
</ul>


<p>Để tổ chức kiểm thử thì mỗi một kiểu kiểm thử bạn cần kiểm thử ở các cấp độ khác nhau. Sự giao thoa
của các kiểu và cấp độ kiểm thử sẽ cho ta bức tranh khá hoàn chỉnh về kiểm thử phần mềm. Bạn có thể
xem thêm thông tin cụ thể hơn ở phần xem thêm ở cuối bài viết.</p>

<p>Hy vọng bài viết có thể giúp bạn hiểu thêm về kiểm thử phần mềm. Tôi sẽ viết cụ thể về các công cụ
cũng như cách tổ chức, sắp sắp tự động hoá kiểm thử phần mềm thế nào trong các bài viết sau.</p>

<p>Chúc bạn vui khi tìm hiểu về kiểm thử và kiểm thử phần mềm!</p>

<h2>Xem Thêm</h2>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Software_testing">http://en.wikipedia.org/wiki/Software_testing</a></li>
</ul>


<h2>Hình Ảnh</h2>

<ul>
<li><a href="http://sanjeevanisolutions.net/SoftwareTesting.aspx">http://sanjeevanisolutions.net/SoftwareTesting.aspx</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://vi.wikipedia.org/wiki/B%E1%BA%A3o_to%C3%A0n_n%C4%83ng_l%C6%B0%E1%BB%A3ng<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://dev.teracy.org/docs/intro.html#about-teracy<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://www.facebook.com/kureikain/posts/10152118115309113<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>http://en.wikipedia.org/wiki/Kent_Beck<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>http://www.quora.com/What-is-the-difference-between-unit-testing-functional-testing-and-integration-testing<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dịch "ta-da" hay "ta-dah" sang tiếng Việt thế nào?]]></title>
    <link href="http://blog.hoatle.info/2013/12/11/dich-ta-da-hay-ta-dah-sang-tieng-viet-the-nao/"/>
    <updated>2013-12-11T22:29:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/11/dich-ta-da-hay-ta-dah-sang-tieng-viet-the-nao</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2013/12/will_smith_ta_da.jpg" title="Will Smith&rsquo;s ta-da moment" ></p>

<p>Đợt trước xem &ldquo;Thor: The Dark World&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> có phần dịch &ldquo;ta-da&rdquo; mà tôi thấy rất thú vị, và cứ ghi nhớ
mãi, còn nói chuyện với các em về việc dịch từ này thú vị thế nào. Bẵng đi một thời gian, hôm trước
xem &ldquo;Monsters University&rdquo;<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> cũng có đoạn &ldquo;ta-da&rdquo; nhưng bạn dịch phụ đề giữ nguyên khi chuyển sang
tiếng Việt là &ldquo;ta-da&rdquo;. Việc giữ nguyên (vay mượn) này cũng không ảnh hưởng lắm nhưng nếu dịch sang
tiếng Việt thì tôi thấy sẽ hay hơn.</p>

<!-- more -->


<p>Ngay lúc đó tôi liền lục lại trí nhớ để tìm lại cách dịch thú vị đó, nhưng không thể, càng cố tìm
càng không thấy, nên tôi cần làm nhiệm vụ &ldquo;cao cả&rdquo;&ldquo; là viết về nó cho đỡ quên, về sau không lục lại
được trong đầu thì có thể lục lại từ những gì đã viết.</p>

<p>Đến ngày hôm sau tôi hỏi lại mấy cô em nhưng mọi người cũng không nhớ, mãi đến cuối ngày tôi mới có
câu trả lời từ câu buột miệng của cô em. Thật là may mắn!</p>

<p>Theo từ điển Oxford<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>:</p>

<p>```
ta-da</p>

<p>Phát âm: /təˈdɑː/</p>

<p>(hay ta-dah)</p>

<p>cảm thán</p>

<pre><code>bắt chước âm thanh một hồi kèn (thường được sử dụng để tạo ấn tượng khi giới thiệu hay tuyên bố
điều gì).
</code></pre>

<p>Nguồn gốc:</p>

<p>Từ những năm 1970: bắt chước
```</p>

<p>Từ tương đương sang tiếng Việt cũng có những đặc điểm trên, điều này lý giải vì sao cách phát âm của
hai từ rất tương đồng, tạo ra sự thú vị mà tôi thấy rất tâm đắc.</p>

<p>Và từ tiếng Việt đó chính là&hellip;&hellip;..: <strong>tèn ten</strong> :)</p>

<p>Tìm hiểu về ngôn ngữ, nhất là xử lý đa ngôn ngữ là một mảng mà tôi luôn thấy rất rất rất thú vị.</p>

<p>Bạn có thể tìm hiểu thêm về cách sử dụng của &ldquo;ta-da&rdquo; tại:
<a href="http://www.urbandictionary.com/define.php?term=tada">http://www.urbandictionary.com/define.php?term=tada</a></p>

<h2>Ảnh Minh Hoạ</h2>

<ul>
<li><a href="http://weknowmemes.com/2012/09/but-then-theres-will-smith/">http://weknowmemes.com/2012/09/but-then-theres-will-smith/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://www.imdb.com/title/tt1981115/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://www.imdb.com/title/tt1453405/<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>http://www.oxforddictionaries.com/definition/english/ta-da<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[selfie (tự sướng) - từ của năm 2013 theo từ điển Oxford]]></title>
    <link href="http://blog.hoatle.info/2013/12/10/selfie-tu-suong-tu-cua-nam-2013-theo-tu-dien-oxford/"/>
    <updated>2013-12-10T22:35:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/10/selfie-tu-suong-tu-cua-nam-2013-theo-tu-dien-oxford</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2013/12/presidential-selfie.jpg" title="Tổng thống Obama tự sướng cùng thủ tướng Anh và Đan Mạch tại lễ tưởng niệm cố tổng thống Nam Phi Nelson Mandela" ></p>

<p>Hình trên là ảnh tổng thống Obama tự sướng cùng thủ tướng Anh và Đan Mạch tại lễ tưởng niệm cố tổng
thống Nam Phi Nelson Mandela đang bị truyền thông chỉ trích gần đây. Ảnh đại diện chỉ mang mục đích
giới thiệu đến từ &ldquo;tự sướng (selfie)&rdquo; &ndash; từ của năm 2013 theo từ điển Oxford.</p>

<!-- more -->


<h2>Định Nghĩa &ldquo;selfie&rdquo;</h2>

<p><strong>1. Định nghĩa bằng tiếng Anh theo từ điển Oxford<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></strong></p>

<p><strong>selfie</strong></p>

<p>Pronunciation: /ˈsɛlfi/</p>

<p>(also <em>selfy</em>)</p>

<p> <em>noun (plural <strong>selfies</strong>)</em></p>

<p><em>informal</em></p>

<p>  a photograph that one has taken of oneself, typically one taken with a smartphone or webcam and
  uploaded to a social media website:</p>

<p>  <em>occasional selfies are acceptable, but posting a new picture of yourself every day isn’t necessary</em></p>

<p><strong>Origin:</strong></p>

<p>early 21st century: from self + -ie</p>

<p><strong>2. Dịch định nghĩa &ldquo;selfie&rdquo; sang tiếng Việt:</strong></p>

<p><strong>selfie</strong></p>

<p>Phiên âm: /ˈsɛlfi/</p>

<p>(hay <em>selfy</em>)</p>

<p> <em>danh từ (số nhiều <strong>selfies</strong>)</em></p>

<p><em>thân mật</em></p>

<p>  bức ảnh được một người tự chụp, thường được chụp bằng điện thoại hoặc webcam và được tải lên
  các trang mạng xã hội:</p>

<p>  <em>tự sướng thường xuyên thì chấp nhận được, nhưng ngày nào cũng đăng ảnh thì không cần thiết</em></p>

<p><strong>Nguồn gốc:</strong></p>

<p>Đầu thế kỷ 21: bắt nguồn từ self + -ie</p>

<h2>Nguồn Gốc Của &ldquo;selfie&rdquo;</h2>

<p>Theo thông tin của <code>Oxford English Corpus</code><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> &ndash; nghiên cứu ngôn ngữ dựa trên những bằng chứng thực
tế thì &ldquo;selfie&rdquo; đã được sử dụng từ năm 2003, nhưng có những nghiên cứu sâu hơn chỉ ra rằng nó đã
được sử dụng từ năm 2002, bắt nguồn từ một diễn đàn của Australia.</p>

<p>&ldquo;selfie&rdquo; ban đầu được dùng ở các trang mạng xã hội và chia sẻ ảnh như Flickr và MySpace nhưng đến
tận năm gần đây thì nó mới thực sự phổ biến do sự phổ biến của điện thoại thông minh giúp việc tự
chụp hình và chia sẻ ảnh dễ dàng hơn bao giờ hết.</p>

<p>Sự phổ biến tăng dần của &ldquo;selfie&rdquo; (tự sướng) tăng mạnh trong năm 2013 theo biểu đồ dưới đây:</p>

<p><img class="center" src="/images/2013/12/selfie-graph.jpg" title="biểu đồ sự phổ biến của từ selfie" ></p>

<p>(đơn vị = tần suất/ 1 tỉ từ)</p>

<h2>Các Từ Liên Quan Có Hậu Tố &ldquo;-ie&rdquo;</h2>

<p>Có rất nhiều từ liên quan có hậu tố &ldquo;-ie&rdquo; được tạo ra với nghĩa tự sướng:</p>

<ul>
<li><p><code>helfie</code>: tự sướng với tóc (<code>a picture of one’s hair</code>)</p></li>
<li><p><code>welfie</code>: tự sướng khi tập thể hình (<code>workout selfie</code>)</p></li>
<li><p><code>drelfie</code>: tự sướng khi say (<code>drunken selfie</code>)</p></li>
<li><p>&hellip;</p></li>
</ul>


<h2>Thông Tin Trực Quan (infographic) Về &ldquo;selfie&rdquo;</h2>

<p>Để hiểu hơn về &ldquo;selfie&rdquo;, từ điển Oxford còn cung cấp thông tin trực quan sau đây:</p>

<p><img class="center" src="/images/2013/12/infographic-selfie-oxford-dictionaries-word-of-the-year-2013.jpg" title="thông tin trực quan về selfie &ndash; tự sướng" ></p>

<h2>Từ Của Năm Qua Các Năm</h2>

<p>Nhân viên Oxford duy trì 2 loại từ điển là Anh-Anh và Anh-Mỹ. Do từng nước có sự phát triển vốn từ
vựng khác nhau nên có thể từ của năm cũng khác nhau, dưới đây là danh sách:</p>

<table>
  <tr>
    <th>Năm</th>
    <th>Từ của năm theo Anh-Anh</th>
    <th>Từ của năm theo Anh-Mỹ</th>
  </tr>
  <tr>
    <td>2004</td>
    <td colspan="2" align="center">chav</td>
  </tr>
  <tr>
    <td>2005</td>
    <td>sudoku</td>
    <td>podcast</td>
  </tr>
  <tr>
    <td>2006</td>
    <td>bovvered</td>
    <td>carbon-neutral</td>
  </tr>
  <tr>
    <td>2007</td>
    <td>carbon footprint</td>
    <td>locavore</td>
  </tr>
  <tr>
    <td>2008</td>
    <td>credit crunch</td>
    <td>hypermiling</td>
  </tr>
  <tr>
    <td>2009</td>
    <td>simples</td>
    <td>unfriend</td>
  </tr>
  <tr>
    <td>2010</td>
    <td>big society</td>
    <td>refudiate</td>
  </tr>
  <tr>
    <td>2011</td>
    <td colspan="2" align="center">squeezed middle</td>
  </tr>
  <tr>
    <td>2012</td>
    <td>omnishambles</td>
    <td>GIF (verb)</td>
  </tr>
</table>


<h2>Tham Khảo</h2>

<ul>
<li><a href="http://blog.oxforddictionaries.com/2013/11/word-of-the-year-2013-winner/">http://blog.oxforddictionaries.com/2013/11/word-of-the-year-2013-winner/</a></li>
<li><a href="http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/">http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/</a></li>
<li><a href="http://newsfeed.time.com/2013/11/18/and-oxfords-word-of-the-year-is">http://newsfeed.time.com/2013/11/18/and-oxfords-word-of-the-year-is</a></li>
<li><a href="http://www.oxforddictionaries.com/definition/english/selfie">http://www.oxforddictionaries.com/definition/english/selfie</a></li>
</ul>


<h2>Hình Minh Hoạ</h2>

<ul>
<li><a href="http://mashable.com/2013/12/10/obama-nelson-mandela-funeral-selfie/">http://mashable.com/2013/12/10/obama-nelson-mandela-funeral-selfie/</a></li>
<li><a href="http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/">http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://www.oxforddictionaries.com/definition/english/selfie<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://www.oxforddictionaries.com/words/about-the-oxford-english-corpus<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tổng thống Obama kêu gọi người dân Mỹ học lập trình]]></title>
    <link href="http://blog.hoatle.info/2013/12/09/tong-thong-obama-keu-goi-nguoi-dan-my-hoc-lap-trinh/"/>
    <updated>2013-12-09T20:49:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/09/tong-thong-obama-keu-goi-nguoi-dan-my-hoc-lap-trinh</id>
    <content type="html"><![CDATA[<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/6XvmhE1J9PY "></iframe></div></p>

<p>Dịch lời:</p>

<!-- more -->


<p><blockquote><p></p></p><p><p>Chào các bạn,</p></p><p><p>Tuần này tôi rất vinh dự được tham gia cùng các sinh viên, giáo viên, doanh nghiệp và tổ chức phi lợi nhuận khởi động chương trình hành động lớn mới để hỗ trợ giáo dục khoa học máy tính ở các trường học Mỹ.</p></p><p><p>Học những kỹ năng này không những quan trọng cho tương lai của các bạn mà còn cho cả tương lai đất nước chúng ta. Nếu chúng ta muốn nước Mỹ tiếp tục dẫn đầu sự phát triển, chúng ta cần những người Mỹ trẻ, như các bạn, nắm vững những công cụ và công nghệ sẽ thay đổi mọi thứ chúng ta làm. Đó là lý do tôi yêu cầu các bạn cùng tham gia.</p></p><p><p>Đừng chỉ mua một trò chơi video mới, hãy làm một cái.</p></p><p><p>Đừng chỉ tải về ứng dụng mới nhất, hãy giúp thiết kế nó.</p></p><p><p>Đừng chỉ chơi trên điện thoại, hãy lập trình nó.</p></p><p><p>Không ai sinh ra đã là nhà khoa học máy tính nhưng với một chút chăm chỉ cộng với một chút kiến thức toán và khoa học thì bất kỳ ai cũng có thể trở thành người như vậy.</p></p><p><p>Tuần này là cơ hội để bạn hãy thử cho mình cơ hội lập trình. Và đừng để bất kỳ ai nói với bạn rằng &ldquo;bạn không thể&rdquo;.</p></p><p><p>Dù bạn có là thanh niên nam hay nữ, dù bạn sống ở thành phố hay nông thôn thì máy tính sẽ trở thành một phần quan trọng rất lớn cho tương lai của các bạn. Và nếu bạn sẵn sàng làm việc và học tập chăm chỉ, tương lai đó được định hình thế nào nằm cả trong tay các bạn.</p></p><p><p>Cảm ơn các bạn.</p></p><p><p></p></blockquote></p>

<p>Xem thêm video cổ động:</p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/FC5FbmsH4fw "></iframe></div></p>

<p>Còn tương lai của nước Việt?</p>

<p>1 &ndash; Học tiếng Anh</p>

<p>2 &ndash; Học lập trình</p>

<h2>Nên Xem Thêm</h2>

<ul>
<li><a href="http://code.org/">http://code.org/</a></li>
<li><a href="https://www.youtube.com/user/CodeOrg">https://www.youtube.com/user/CodeOrg</a></li>
<li><a href="https://news.ycombinator.com/item?id=6875842">https://news.ycombinator.com/item?id=6875842</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
