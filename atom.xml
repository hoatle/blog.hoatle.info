<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blog.hoatle.info]]></title>
  <link href="http://blog.hoatle.info/atom.xml" rel="self"/>
  <link href="http://blog.hoatle.info/"/>
  <updated>2013-12-20T19:11:15+00:00</updated>
  <id>http://blog.hoatle.info/</id>
  <author>
    <name><![CDATA[hoatle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tại sao cần kiểm thử phần mềm?]]></title>
    <link href="http://blog.hoatle.info/2013/12/20/tai-sao-can-kiem-thu-phan-mem/"/>
    <updated>2013-12-20T16:22:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/20/tai-sao-can-kiem-thu-phan-mem</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/2013/12/software-testing.jpg" title="Kiểm Thử Phần Mềm - Software Testing" ></p>

<p>Làm gì cũng cần kiểm tra, đánh giá thì mới biết được liệu nó có đạt được những gì được mong đợi, có
sai sót gì không. Tôi không hình dung được liệu trên thế giới này có gì không phải kiểm thử không?
Ngay cả quá trình phát triển của con người cũng trải qua hàng triệu năm được tự nhiên kiểm thử với
nhiều nhánh phát triển khác nhau. Có thể nói kiểm thử cũng có quy luật của nó, tôi gọi là &ldquo;bảo toàn
kiểm thử&rdquo;.</p>

<!-- more -->


<p>&ldquo;Bảo toàn kiểm thử&rdquo; nghĩa là thế nào? Nếu bạn nắm định luật &ldquo;bảo toàn năng lượng&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> thì bạn cứ
thay  &ldquo;năng lượng&rdquo; bằng &ldquo;kiểm thử&rdquo;.</p>

<ul>
<li><p>Bạn dùng một thiết bị, đồ vật nào đó? Nó đã được kiểm thử trước khi đến tay bạn.</p></li>
<li><p>Bạn chuẩn bị nâng cấp hệ điều hành cho chiếc điện thoại của mình? Các nhà phát triển đã kiểm thử
trước khi phân phối cho bạn. Ngay cả vậy thì bạn cũng vẫn muốn nghe ngóng những người khác sau khi
nâng cấp có bị vấn đề gì không trước khi quyết định nâng cấp nó? Những người dùng trước đó cũng thực
hiện công việc kiểm thử cho bạn.</p></li>
</ul>


<p>Còn vô số ví dụ như vậy để biết rằng kiểm thử là một phần không thể thiếu trong cuộc sống, và trong
bài viết này tôi nói cụ thể về kiểm thử trong phần mềm.</p>

<p>Khi làm kiểm thử trong phần mềm, chúng ta thường dùng các công cụ để tự động hoá quá trình kiểm thử
này. Nếu không tự động hoá được thì bạn phải kiểm thử bằng tay. Vậy kiểm thử tự động hay bằng tay,
cái nào tốt hơn?</p>

<p>Trước khi có tự động thì phải làm bằng tay, tuy nhiên khi làm bằng tay lặp lại nhiều lần thì nên
(phải) tự động hoá nó để tối ưu hoá sức lao động của máy móc và giải phóng sức lao động của con
người. Như chúng ta đã biết, máy tính làm một tác vụ nào đó lặp đi lặp lại rất chính xác và nhanh
khi được lập trình, đấy chính là điểm mạnh duy nhất của máy tính để chúng ta tận dụng nó. Nhưng để
tự động nó cần phải học cách sử dụng công cụ, cần phải nắm vững công cụ mới làm được. Còn kiểm thử
bằng tay thì chi phí thấp hơn, nhanh hơn vào giai đoạn đầu. Qua quá trình làm việc, tôi thấy được
quy luật sau:</p>

<ul>
<li><p>Kiểm thử tự động có chi phí lớn trong giai đoạn đầu nhưng sẽ giảm dần theo thời gian.</p></li>
<li><p>Kiểm thử bằng tay có chi phí thấp trong giai đoạn đầu nhưng sẽ tăng dần theo thời gian.</p></li>
</ul>


<p>Vậy nên để trả lời câu hỏi kiểm thử tự động hay bằng tay chỉ cần xem xét quy luật trên. Nếu dự án
của bạn đủ dài, đủ lớn thì cần đầu tư nhiều cho tự động hoá kiểm thử.</p>

<p>Một lý do khác cần tự động hoá kiểm thử là khi các trường hợp cần kiểm thử tăng dần theo thời gian,
nếu bạn không kiểm thử được hết thì khi phần mềm được cập nhật rất dễ gây nhiều lỗi. Đây là một bài
học đắt giá mà tôi đã phải trả khi còn làm dự án eXo Social. Trong 3 năm tham gia dự án, bắt đầu năm
thứ 2 tôi đã tập trung nhiều vào tự động hoá kiểm thử, nâng dần tỉ lệ bao quát (&ldquo;coverage&rdquo;). Sau một
thời gian dài nỗ lực thì tỉ lệ hệ thống được kiểm thử từ 2-3% được nâng lên hơn 10%, trong đó các
thành phần chủ chốt (&ldquo;core component&rdquo;) có tỉ lệ không dưới 70% (nếu tôi nhớ không nhầm), đó là cả sự
nỗ lực cố gắng không ngừng nghỉ của cả nhóm phát triển. Mặc dù vậy, tôi cũng đã mắc một sai lầm nghiêm
trọng khi để một bạn mới tham gia nhóm thay đổi nhiều code ở tầng có tỉ lệ kiểm thử thấp, sau đó phần
mềm đã có nhiễu lỗi cũ cũng như mới xảy ra. Tin tôi đi, đó là trải nghiệm không hề dễ chịu chút nào.</p>

<p>Sau bài học đó, tôi càng bị ám ảnh nhiều hơn với kiểm thử và quy trình kiểm thử. Nếu chúng ta có cơ
hội được làm việc với nhau, bạn sẽ thấy tôi có những yêu cầu rất khắt khe, có thể bạn cho là vô lý,
nhưng đó là từ những bài học, kinh nghiệm tôi đã đúc rút khi làm một dự án liên tục trong vòng hơn
3 năm với eXo Social và các dự án sau này.</p>

<p>Thật ra đến thời điểm này đầu tư cho tự động hoá kiểm thử phần mềm có chi phí không quá cao, học
công cụ cũng không khó, chỉ cần tìm hiểu một chút là bạn có thể làm được rồi. Tuy nhiên chi phí tổ
chức tự động hoá kiểm thử sao cho thật khoa học lại là cả một vấn đề lớn, nếu không có thể nó lại
đẩy thêm chi phí, gánh nặng cho phát triển phần mềm.</p>

<p>Kiểm thử có 4 cấp độ (&ldquo;testing level&rdquo;) như sau:</p>

<ul>
<li><p><code>unit testing</code>: kiểm thử từng đơn vị độc lập, riêng lẻ. Cụ thể trong phần mềm sẽ là các &ldquo;method&rdquo;
hoặc &ldquo;function&rdquo;. Bạn cần kiểm tra đầu vào và đầu ra của từng đơn vị độc lập ấy. Tôi xin nhấn mạnh
&ldquo;từng đơn vị độc lập, riêng lẻ&rdquo; thêm một lần nữa.</p></li>
<li><p><code>integration testing</code>: kiểm thử các &ldquo;module&rdquo; hay &ldquo;component&rdquo; khi chúng tương tác với nhau.</p></li>
<li><p><code>system testing</code>: kiểm thử cả một hệ thống hoàn chỉnh khi toàn bộ các &ldquo;module&rdquo; hay &ldquo;component&rdquo;
được tích hợp.</p></li>
<li><p><code>acceptance testing</code>: kiểm thử cả một hệ thống hoàn chỉnh từ A đến Z như được cài đặt cho người
dùng cuối.</p></li>
</ul>


<p>Càng ở cấp độ sau thì chi phí kiểm thử càng tốn kém hơn. Tuy nhiên, tự động hoá kiểm thử cho các cấp
độ này hoàn toàn làm được, và thực sự là tôi đang làm rồi. Càng tự động hoá được nhiều, thì về lâu
dài bạn sẽ tiết kiệm được rất nhiều chi phí. Chính vì thế mà &ldquo;automation&rdquo; là một trong những quan
điểm phát triển của Teracy<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> &ndash; startup chúng tôi đang dành tâm huyết gây dựng.</p>

<p>Hôm trước bạn của tôi có hỏi trên Facebook<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>:</p>

<blockquote><p>Nếu như unit test đã pass hết. thì tại sao mọi ng lại cần tới acceptance test, functional (or integrate) test nhỉ?</p><footer><strong>Vinh Quốc Nguyễn</strong> <cite><a href='https://www.facebook.com/kureikain/posts/10152118115309113'>www.facebook.com/kureikain/&hellip;</a></cite></footer></blockquote>


<p>Và tôi có trả lời thế này:</p>

<blockquote><p>- mỗi cái test 1 kiểu mà, unit test là test đơn vị method, functional test là test vài method liên quan với nhau, integration test là test ở mức các module với nhau, acceptance test là test 1 hệ thống người dùng sử dụng được rồi. Theo ý mình hiểu nôm na là thế, nên không có sự chồng chéo giữa các test level đâu.</p><p>- ví dụ như test lắp ráp hệ thống xe máy đi, unit test là test từng bộ phận (bánh răng, ốc vít, ống xả&#8230;), test unit (từng cái 1) thì ok, rồi lắp 1 số bộ phận làm bánh xe, động cơ xe. Mình vẫn phải test bánh xe, động cơ xe (functional) chứ kể cả unit test ok rồi. Rồi lắp bánh xe, động cơ xe, khung xe lại thành xe hoàn chỉnh thì cần test là xe nổ máy, vào số thì bánh xe phải chạy, đồng hồ phải hiển thị km/h&#8230; (integration test). Rồi sau đấy đi thử thật trên đường (acceptance test). Như vậy bước nào cũng cần. Khi viết test cần phân biệt các level của test thì tránh được sự chồng chéo.</p></blockquote>


<p>Nhiều người (ngay cả tôi) có thể nhầm &ldquo;functional testing&rdquo; là 1 cấp độ kiểm thử (&ldquo;testing level&rdquo;),
nhưng thực ra nó là một kiểu kiểm thử (&ldquo;testing type&rdquo;). Kent Beck <sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>, tác giả của cuốn &ldquo;Extreme
Programming&rdquo;, cũng có trả lời câu hỏi phân biệt giữa &ldquo;unit testing&rdquo;, &ldquo;functional testing&rdquo; và
&ldquo;integration testing&rdquo;<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>.</p>

<p>Một số kiểu kiểm thử tôi có thể liệt kê ra ở đây:</p>

<ul>
<li><p><code>smoke testing</code></p></li>
<li><p><code>regression testing</code></p></li>
<li><p><code>functional testing</code></p></li>
<li><p><code>compatibility testing</code></p></li>
<li><p><code>acceptance testing</code></p></li>
<li><p><code>performance testing</code></p></li>
<li><p><code>security testing</code></p></li>
<li><p><code>destructive testing</code></p></li>
<li><p><code>usability testing</code></p></li>
<li><p><code>accessibility testing</code></p></li>
<li><p><code>A/B testing</code></p></li>
<li><p>&hellip;</p></li>
</ul>


<p>Để tổ chức kiểm thử thì mỗi một kiểu kiểm thử bạn cần kiểm thử ở các cấp độ khác nhau. Sự giao thoa
của các kiểu và cấp độ kiểm thử sẽ cho ta bức tranh khá hoàn chỉnh về kiểm thử phần mềm. Bạn có thể
xem thêm thông tin cụ thể hơn ở phần xem thêm ở cuối bài viết.</p>

<p>Hy vọng bài viết có thể giúp bạn hiểu thêm về kiểm thử phần mềm. Tôi sẽ viết cụ thể về các công cụ
cũng như cách tổ chức, sắp sắp tự động hoá kiểm thử phần mềm thế nào trong các bài viết sau.</p>

<p>Chúc bạn vui khi tìm hiểu về kiểm thử và kiểm thử phần mềm!</p>

<h2>Xem Thêm</h2>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Software_testing">http://en.wikipedia.org/wiki/Software_testing</a></li>
</ul>


<h2>Hình Ảnh</h2>

<ul>
<li><a href="http://sanjeevanisolutions.net/SoftwareTesting.aspx">http://sanjeevanisolutions.net/SoftwareTesting.aspx</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://vi.wikipedia.org/wiki/B%E1%BA%A3o_to%C3%A0n_n%C4%83ng_l%C6%B0%E1%BB%A3ng<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://dev.teracy.org/docs/intro.html#about-teracy<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://www.facebook.com/kureikain/posts/10152118115309113<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>http://en.wikipedia.org/wiki/Kent_Beck<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>http://www.quora.com/What-is-the-difference-between-unit-testing-functional-testing-and-integration-testing<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dịch "ta-da" hay "ta-dah" sang tiếng Việt thế nào?]]></title>
    <link href="http://blog.hoatle.info/2013/12/11/dich-ta-da-hay-ta-dah-sang-tieng-viet-the-nao/"/>
    <updated>2013-12-11T22:29:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/11/dich-ta-da-hay-ta-dah-sang-tieng-viet-the-nao</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/2013/12/will_smith_ta_da.jpg" title="Will Smith's ta-da moment" ></p>

<p>Đợt trước xem &ldquo;Thor: The Dark World&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> có phần dịch &ldquo;ta-da&rdquo; mà tôi thấy rất thú vị, và cứ ghi nhớ
mãi, còn nói chuyện với các em về việc dịch từ này thú vị thế nào. Bẵng đi một thời gian, hôm trước
xem &ldquo;Monsters University&rdquo;<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> cũng có đoạn &ldquo;ta-da&rdquo; nhưng bạn dịch phụ đề giữ nguyên khi chuyển sang
tiếng Việt là &ldquo;ta-da&rdquo;. Việc giữ nguyên (vay mượn) này cũng không ảnh hưởng lắm nhưng nếu dịch sang
tiếng Việt thì tôi thấy sẽ hay hơn.</p>

<!-- more -->


<p>Ngay lúc đó tôi liền lục lại trí nhớ để tìm lại cách dịch thú vị đó, nhưng không thể, càng cố tìm
càng không thấy, nên tôi cần làm nhiệm vụ &ldquo;cao cả&rdquo;&ldquo; là viết về nó cho đỡ quên, về sau không lục lại
được trong đầu thì có thể lục lại từ những gì đã viết.</p>

<p>Đến ngày hôm sau tôi hỏi lại mấy cô em nhưng mọi người cũng không nhớ, mãi đến cuối ngày tôi mới có
câu trả lời từ câu buột miệng của cô em. Thật là may mắn!</p>

<p>Theo từ điển Oxford<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ta-da
</span><span class='line'>
</span><span class='line'>Phát âm: /təˈdɑː/
</span><span class='line'>
</span><span class='line'>(hay ta-dah)
</span><span class='line'>
</span><span class='line'>cảm thán
</span><span class='line'>
</span><span class='line'>    bắt chước âm thanh một hồi kèn (thường được sử dụng để tạo ấn tượng khi giới thiệu hay tuyên bố
</span><span class='line'>    điều gì).
</span><span class='line'>
</span><span class='line'>Nguồn gốc:
</span><span class='line'>
</span><span class='line'>Từ những năm 1970: bắt chước</span></code></pre></td></tr></table></div></figure>


<p>Từ tương đương sang tiếng Việt cũng có những đặc điểm trên, điều này lý giải vì sao cách phát âm của
hai từ rất tương đồng, tạo ra sự thú vị mà tôi thấy rất tâm đắc.</p>

<p>Và từ tiếng Việt đó chính là&hellip;&hellip;..: <strong>tèn ten</strong> :)</p>

<p>Tìm hiểu về ngôn ngữ, nhất là xử lý đa ngôn ngữ là một mảng mà tôi luôn thấy rất rất rất thú vị.</p>

<p>Bạn có thể tìm hiểu thêm về cách sử dụng của &ldquo;ta-da&rdquo; tại:
<a href="http://www.urbandictionary.com/define.php?term=tada">http://www.urbandictionary.com/define.php?term=tada</a></p>

<h2>Ảnh Minh Hoạ</h2>

<ul>
<li><a href="http://weknowmemes.com/2012/09/but-then-theres-will-smith/">http://weknowmemes.com/2012/09/but-then-theres-will-smith/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://www.imdb.com/title/tt1981115/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://www.imdb.com/title/tt1453405/<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>http://www.oxforddictionaries.com/definition/english/ta-da<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[selfie (tự sướng) - từ của năm 2013 theo từ điển Oxford]]></title>
    <link href="http://blog.hoatle.info/2013/12/10/selfie-tu-suong-tu-cua-nam-2013-theo-tu-dien-oxford/"/>
    <updated>2013-12-10T22:35:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/10/selfie-tu-suong-tu-cua-nam-2013-theo-tu-dien-oxford</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/2013/12/presidential-selfie.jpg" title="Tổng thống Obama tự sướng cùng thủ tướng Anh và Đan Mạch tại lễ tưởng niệm cố tổng thống Nam Phi Nelson Mandela" ></p>

<p>Hình trên là ảnh tổng thống Obama tự sướng cùng thủ tướng Anh và Đan Mạch tại lễ tưởng niệm cố tổng
thống Nam Phi Nelson Mandela đang bị truyền thông chỉ trích gần đây. Ảnh đại diện chỉ mang mục đích
giới thiệu đến từ &ldquo;tự sướng (selfie)&rdquo; &ndash; từ của năm 2013 theo từ điển Oxford.</p>

<!-- more -->


<h2>Định Nghĩa &ldquo;selfie&rdquo;</h2>

<p><strong>1. Định nghĩa bằng tiếng Anh theo từ điển Oxford<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></strong></p>

<p><strong>selfie</strong></p>

<p>Pronunciation: /ˈsɛlfi/</p>

<p>(also <em>selfy</em>)</p>

<p> <em>noun (plural <strong>selfies</strong>)</em></p>

<p><em>informal</em></p>

<p>  a photograph that one has taken of oneself, typically one taken with a smartphone or webcam and
  uploaded to a social media website:</p>

<p>  <em>occasional selfies are acceptable, but posting a new picture of yourself every day isn’t necessary</em></p>

<p><strong>Origin:</strong></p>

<p>early 21st century: from self + -ie</p>

<p><strong>2. Dịch định nghĩa &ldquo;selfie&rdquo; sang tiếng Việt:</strong></p>

<p><strong>selfie</strong></p>

<p>Phiên âm: /ˈsɛlfi/</p>

<p>(hay <em>selfy</em>)</p>

<p> <em>danh từ (số nhiều <strong>selfies</strong>)</em></p>

<p><em>thân mật</em></p>

<p>  bức ảnh được một người tự chụp, thường được chụp bằng điện thoại hoặc webcam và được tải lên
  các trang mạng xã hội:</p>

<p>  <em>tự sướng thường xuyên thì chấp nhận được, nhưng ngày nào cũng đăng ảnh thì không cần thiết</em></p>

<p><strong>Nguồn gốc:</strong></p>

<p>Đầu thế kỷ 21: bắt nguồn từ self + -ie</p>

<h2>Nguồn Gốc Của &ldquo;selfie&rdquo;</h2>

<p>Theo thông tin của <code>Oxford English Corpus</code><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> &ndash; nghiên cứu ngôn ngữ dựa trên những bằng chứng thực
tế thì &ldquo;selfie&rdquo; đã được sử dụng từ năm 2003, nhưng có những nghiên cứu sâu hơn chỉ ra rằng nó đã
được sử dụng từ năm 2002, bắt nguồn từ một diễn đàn của Australia.</p>

<p>&ldquo;selfie&rdquo; ban đầu được dùng ở các trang mạng xã hội và chia sẻ ảnh như Flickr và MySpace nhưng đến
tận năm gần đây thì nó mới thực sự phổ biến do sự phổ biến của điện thoại thông minh giúp việc tự
chụp hình và chia sẻ ảnh dễ dàng hơn bao giờ hết.</p>

<p>Sự phổ biến tăng dần của &ldquo;selfie&rdquo; (tự sướng) tăng mạnh trong năm 2013 theo biểu đồ dưới đây:</p>

<p><img class="center" src="http://blog.hoatle.info/images/2013/12/selfie-graph.jpg" title="biểu đồ sự phổ biến của từ selfie" ></p>

<p>(đơn vị = tần suất/ 1 tỉ từ)</p>

<h2>Các Từ Liên Quan Có Hậu Tố &ldquo;-ie&rdquo;</h2>

<p>Có rất nhiều từ liên quan có hậu tố &ldquo;-ie&rdquo; được tạo ra với nghĩa tự sướng:</p>

<ul>
<li><p><code>helfie</code>: tự sướng với tóc (<code>a picture of one’s hair</code>)</p></li>
<li><p><code>welfie</code>: tự sướng khi tập thể hình (<code>workout selfie</code>)</p></li>
<li><p><code>drelfie</code>: tự sướng khi say (<code>drunken selfie</code>)</p></li>
<li><p>&hellip;</p></li>
</ul>


<h2>Thông Tin Trực Quan (infographic) Về &ldquo;selfie&rdquo;</h2>

<p>Để hiểu hơn về &ldquo;selfie&rdquo;, từ điển Oxford còn cung cấp thông tin trực quan sau đây:</p>

<p><img class="center" src="http://blog.hoatle.info/images/2013/12/infographic-selfie-oxford-dictionaries-word-of-the-year-2013.jpg" title="thông tin trực quan về selfie - tự sướng" ></p>

<h2>Từ Của Năm Qua Các Năm</h2>

<p>Nhân viên Oxford duy trì 2 loại từ điển là Anh-Anh và Anh-Mỹ. Do từng nước có sự phát triển vốn từ
vựng khác nhau nên có thể từ của năm cũng khác nhau, dưới đây là danh sách:</p>

<table>
  <tr>
    <th>Năm</th>
    <th>Từ của năm theo Anh-Anh</th>
    <th>Từ của năm theo Anh-Mỹ</th>
  </tr>
  <tr>
    <td>2004</td>
    <td colspan="2" align="center">chav</td>
  </tr>
  <tr>
    <td>2005</td>
    <td>sudoku</td>
    <td>podcast</td>
  </tr>
  <tr>
    <td>2006</td>
    <td>bovvered</td>
    <td>carbon-neutral</td>
  </tr>
  <tr>
    <td>2007</td>
    <td>carbon footprint</td>
    <td>locavore</td>
  </tr>
  <tr>
    <td>2008</td>
    <td>credit crunch</td>
    <td>hypermiling</td>
  </tr>
  <tr>
    <td>2009</td>
    <td>simples</td>
    <td>unfriend</td>
  </tr>
  <tr>
    <td>2010</td>
    <td>big society</td>
    <td>refudiate</td>
  </tr>
  <tr>
    <td>2011</td>
    <td colspan="2" align="center">squeezed middle</td>
  </tr>
  <tr>
    <td>2012</td>
    <td>omnishambles</td>
    <td>GIF (verb)</td>
  </tr>
</table>


<h2>Tham Khảo</h2>

<ul>
<li><a href="http://blog.oxforddictionaries.com/2013/11/word-of-the-year-2013-winner/">http://blog.oxforddictionaries.com/2013/11/word-of-the-year-2013-winner/</a></li>
<li><a href="http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/">http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/</a></li>
<li><a href="http://newsfeed.time.com/2013/11/18/and-oxfords-word-of-the-year-is">http://newsfeed.time.com/2013/11/18/and-oxfords-word-of-the-year-is</a></li>
<li><a href="http://www.oxforddictionaries.com/definition/english/selfie">http://www.oxforddictionaries.com/definition/english/selfie</a></li>
</ul>


<h2>Hình Minh Hoạ</h2>

<ul>
<li><a href="http://mashable.com/2013/12/10/obama-nelson-mandela-funeral-selfie/">http://mashable.com/2013/12/10/obama-nelson-mandela-funeral-selfie/</a></li>
<li><a href="http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/">http://blog.oxforddictionaries.com/2013/11/an-infographic-of-selfie/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://www.oxforddictionaries.com/definition/english/selfie<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://www.oxforddictionaries.com/words/about-the-oxford-english-corpus<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tổng thống Obama kêu gọi người dân Mỹ học lập trình]]></title>
    <link href="http://blog.hoatle.info/2013/12/09/tong-thong-obama-keu-goi-nguoi-dan-my-hoc-lap-trinh/"/>
    <updated>2013-12-09T20:49:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/09/tong-thong-obama-keu-goi-nguoi-dan-my-hoc-lap-trinh</id>
    <content type="html"><![CDATA[<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/6XvmhE1J9PY "></iframe></div>


<p>Dịch lời:</p>

<!-- more -->




<blockquote><p>Chào các bạn,</p><p>Tuần này tôi rất vinh dự được tham gia cùng các sinh viên, giáo viên, doanh nghiệp và tổ chức phi lợi nhuận khởi động chương trình hành động lớn mới để hỗ trợ giáo dục khoa học máy tính ở các trường học Mỹ.</p><p>Học những kỹ năng này không những quan trọng cho tương lai của các bạn mà còn cho cả tương lai đất nước chúng ta. Nếu chúng ta muốn nước Mỹ tiếp tục dẫn đầu sự phát triển, chúng ta cần những người Mỹ trẻ, như các bạn, nắm vững những công cụ và công nghệ sẽ thay đổi mọi thứ chúng ta làm. Đó là lý do tôi yêu cầu các bạn cùng tham gia.</p><p>Đừng chỉ mua một trò chơi video mới, hãy làm một cái.</p><p>Đừng chỉ tải về ứng dụng mới nhất, hãy giúp thiết kế nó.</p><p>Đừng chỉ chơi trên điện thoại, hãy lập trình nó.</p><p>Không ai sinh ra đã là nhà khoa học máy tính nhưng với một chút chăm chỉ cộng với một chút kiến thức toán và khoa học thì bất kỳ ai cũng có thể trở thành người như vậy.</p><p>Tuần này là cơ hội để bạn hãy thử cho mình cơ hội lập trình. Và đừng để bất kỳ ai nói với bạn rằng &#8220;bạn không thể&#8221;.</p><p>Dù bạn có là thanh niên nam hay nữ, dù bạn sống ở thành phố hay nông thôn thì máy tính sẽ trở thành một phần quan trọng rất lớn cho tương lai của các bạn. Và nếu bạn sẵn sàng làm việc và học tập chăm chỉ, tương lai đó được định hình thế nào nằm cả trong tay các bạn.</p><p>Cảm ơn các bạn.</p></blockquote>


<p>Xem thêm video cổ động:</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/FC5FbmsH4fw "></iframe></div>


<p>Còn tương lai của nước Việt?</p>

<p>1 &ndash; Học tiếng Anh</p>

<p>2 &ndash; Học lập trình</p>

<h2>Nên Xem Thêm</h2>

<ul>
<li><a href="http://code.org/">http://code.org/</a></li>
<li><a href="https://www.youtube.com/user/CodeOrg">https://www.youtube.com/user/CodeOrg</a></li>
<li><a href="https://news.ycombinator.com/item?id=6875842">https://news.ycombinator.com/item?id=6875842</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Điều gì làm nên hệ thống IT tốt?]]></title>
    <link href="http://blog.hoatle.info/2013/12/08/dieu-gi-lam-nen-he-thong-it-tot/"/>
    <updated>2013-12-08T23:32:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/08/dieu-gi-lam-nen-he-thong-it-tot</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/2013/12/data-protection.jpg" title="Dữ liệu và bảo vệ dữ liệu" ></p>

<p>Hệ thống IT (Information Technology) là gì? Hệ thống IT tốt cần đảm bảo điều gì?</p>

<!-- more -->


<h2>Hệ Thống IT Là Gì?</h2>

<p>Nói ngắn gọn, hệ thống IT là hệ thống lưu trữ và xử lý dữ liệu.</p>

<h2>Dữ Liệu (Data)</h2>

<p>Chính vì vậy, dữ liệu là quan trọng nhất. Hệ thống IT tốt cần phải bảo vệ dữ liệu đó.</p>

<h2>Bảo Vệ Dữ Liệu (Data Protection)</h2>

<p>Cần:</p>

<ul>
<li><p>an toàn thông tin (security)</p></li>
<li><p>sao chép dự phòng (backup) và phục hồi (recovery)</p></li>
</ul>


<h2>Tóm Lại</h2>

<p>Một hệ thống IT tốt cần lưu trữ, xử lý dữ liệu và phải đảm bảo an toàn cho dữ liệu đó.</p>

<p>Hệ thống IT tốt = dữ liệu + an toàn thông tin + sao chép dự phòng + phục hồi</p>

<p>(A robust IT system = data + security + backup + recovery)</p>

<h2>Áp Dụng Cho Teracy</h2>

<p>Ngay từ những ngày đầu triển khai hệ thống IT, Teracy lấy mục tiêu phát triển hệ thống IT tốt làm
một trong những tôn chỉ quan trọng sống còn cho các dịch vụ của mình.</p>

<p>Chi tiết: <a href="http://dev.teracy.org/docs/intro.html#about-teracy">http://dev.teracy.org/docs/intro.html#about-teracy</a></p>

<p>Tuy nhiên để triển khai hệ thống IT tốt không dễ và một ngày hai ngày là xong. Tuy đã có sự chuẩn bị
ngay từ ban đầu nhưng một sự cố đáng tiếc đã xảy ra quá sớm khiến toàn bộ dữ liệu trên một VPS của
Teracy đã biến mất hoàn toàn chỉ sau vài giờ (do sự bất cẩn khi chọn nhà cung cấp VPS không tốt và
DEVOPS không kịp trở tay sau khi có thông báo dừng dịch vụ đột ngột của nhà cung cấp). Rất may là dữ
liệu không có nhiều và đã có backup một phần nên sau 2 ngày toàn bộ dữ liệu đã được phục hồi. Những
bài học đắt giá như vậy cần phải có để Teracy biết tầm quan trọng của dữ liệu và bảo vệ dữ liệu.</p>

<h2>Nên Xem Thêm</h2>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Backup">http://en.wikipedia.org/wiki/Backup</a></li>
<li><a href="http://www.dpbestflow.org/links/39">http://www.dpbestflow.org/links/39</a></li>
<li><a href="http://www.quora.com/What-tape-technology-does-Google-use-for-backups">http://www.quora.com/What-tape-technology-does-Google-use-for-backups</a></li>
<li><a href="http://www.quora.com/Data/How-do-top-companies-like-Google-Microsoft-Facebook-backup-their-data-How-many-layers-of-backups-do-they-have">http://www.quora.com/Data/How-do-top-companies-like-Google-Microsoft-Facebook-backup-their-data-How-many-layers-of-backups-do-they-have</a></li>
<li><a href="http://www.quora.com/Facebook-1/Does-Facebook-keep-a-redundant-copy-of-their-users-data-on-backup-tapes">http://www.quora.com/Facebook-1/Does-Facebook-keep-a-redundant-copy-of-their-users-data-on-backup-tapes</a></li>
<li><a href="http://www.quora.com/Mark-Zuckerberg-1/Does-Mark-Zuckerberg-or-Facebook-employees-have-a-skeleton-key-granting-him-access-to-every-members-Facebook-profile-page-and-information">http://www.quora.com/Mark-Zuckerberg-1/Does-Mark-Zuckerberg-or-Facebook-employees-have-a-skeleton-key-granting-him-access-to-every-members-Facebook-profile-page-and-information</a></li>
</ul>


<h2>Ảnh Minh Hoạ</h2>

<ul>
<li><a href="http://signalhilldigital.com/wp-content/uploads/2012/11/privacy-e1354237310123.jpg">http://signalhilldigital.com/wp-content/uploads/2012/11/privacy-e1354237310123.jpg</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[22 quy tắc từ Pixar để tạo ra những câu chuyện phi thường]]></title>
    <link href="http://blog.hoatle.info/2013/12/05/22-quy-tac-tu-pixar-de-tao-ra-nhung-cau-chuyen-phi-thuong/"/>
    <updated>2013-12-05T20:43:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/05/22-quy-tac-tu-pixar-de-tao-ra-nhung-cau-chuyen-phi-thuong</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://i.imgur.com/0R62pAxh.jpg" title="&#34;22 quy tắc kể chuyện từ Pixar&#34;" alt="&#34;22 quy tắc kể chuyện từ Pixar&#34;"></p>

<p>Làm thế nào để kể được những câu chuyện hấp dẫn, cuốn hút người đọc, người nghe? Kể chuyện là một
hình thức giao tiếp và kỹ năng giao tiếp có thể học được. Emma Coats<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> &ndash; nghệ sỹ kịch bản và là
cựu nhân viên của hãng phim Pixar đã đưa ra 22 quy tắc được áp dụng trong quá trình làm việc. Nắm
được các quy tắc này có thể giúp tạo ra những câu chuyện hay để áp dụng cho bài blog, buổi diễn
thuyết, hay một cuốn tiểu thuyết, v.v&hellip;</p>

<!-- more -->


<p><strong>Quy tắc 1</strong></p>

<p><img class="center" src="http://i.imgur.com/FH5iTTGh.jpg" title="You admire a character for trying more than for their successes." ></p>

<blockquote><p>Bạn ngưỡng mộ nhân vật vì sự cố gắng hơn là sự thành công.</p></blockquote>


<p><strong>Quy tắc 2</strong></p>

<p><img class="center" src="http://i.imgur.com/p3QY4RFh.jpg" title="You gotta keep in mind what’s interesting to you as an audience, not what’s fun to do as a writer. They can be very different." ></p>

<blockquote><p>Bạn phải luôn tâm niệm điều gì thu hút bạn khi là khán giả chứ không phải điều gì làm bạn vui khi là người viết truyện. Hai điều này có thể rất khác biệt.</p></blockquote>


<p><strong>Quy tắc 3</strong></p>

<p><img class="center" src="http://i.imgur.com/UvVbXGzh.jpg" title="Trying for theme is important, but you won’t see what the story is actually about til you’re at the end of it. Now rewrite." ></p>

<blockquote><p>Theo chủ đề rất quan trọng, nhưng bạn sẽ không thấy được thực sự câu chuyện về cái gì cho đến khi nó kết thúc. Giờ hãy viết lại.</p></blockquote>


<p><strong>Quy tắc 4</strong></p>

<p><img class="center" src="http://i.imgur.com/X0ciEDHh.jpg" title="Once upon a time there was ___. Every day, ___. One day ___. Because of that, ___. Because of that, ___. Until finally ___." ></p>

<blockquote><p>Ngày xửa ngày xưa có một ___. Ngày ngày, ___. Một hôm ___. Vì điều đó, ___. Vì điều đó, ___. Cuối cùng ___.</p></blockquote>


<p><strong>Quy tắc 5</strong></p>

<p><img class="center" src="http://i.imgur.com/3DaFKkrh.jpg" title="Simplify. Focus. Combine characters. Hop over detours. You’ll feel like you’re losing valuable stuff but it sets you free." ></p>

<blockquote><p>Đơn giản hoá. Tập trung. Kết hợp các nhân vật. Không đi lòng vòng. Bạn sẽ cảm thấy như mình đang đánh mất thứ có giá trị nhưng điều đó lại khiến bạn được tự do.</p></blockquote>


<p><strong>Quy tắc 6</strong></p>

<p><img class="center" src="http://i.imgur.com/vWfQRLqh.jpg" title="What is your character good at, comfortable with? Throw the polar opposite at them. Challenge them. How do they deal?" ></p>

<blockquote><p>Nhân vật của bạn giỏi, thoải mái với điều gì? Hãy ném điều hoàn toàn ngược lại vào nhân vật. Thử thách nhân vật. Nhân vật sẽ xử lý thế nào?</p></blockquote>


<p><strong>Quy tắc 7</strong></p>

<p><img class="center" src="http://i.imgur.com/cFUIo38h.jpg" title="Come up with your ending before you figure out your middle. Seriously. Endings are hard, get yours working up front." ></p>

<blockquote><p>Đưa ra kết thúc trước khi bạn xử lý được phần giữa. Thực sự phần kết rất khó vì vậy hãy giải quyết nó trước.</p></blockquote>


<p><strong>Quy tắc 8</strong></p>

<p><img class="center" src="http://i.imgur.com/Wz37wm9h.jpg" title="Finish your story, let go even if it’s not perfect. In an ideal world you have both, but move on. Do better next time." ></p>

<blockquote><p>Hãy hoàn thành câu chuyện của bạn, tạm hài lòng dù nó chưa hoàn hảo. Bạn có cả hai trong điều kiện lý tưởng, nhưng bạn không thể chờ đợi mãi. Lần tới hãy làm tốt hơn.</p></blockquote>


<p><strong>Quy tắc 9</strong></p>

<p><img class="center" src="http://i.imgur.com/8uDAIrqh.jpg" title="When you’re stuck, make a list of what WOULDN’T happen next. Lots of times the material to get you unstuck will show up." ></p>

<blockquote><p>Khi bạn bí, hãy tạo danh sách những gì SẼ KHÔNG xảy ra tiếp theo. Nguyên liệu giúp bạn hết bí sẽ xuất hiện.</p></blockquote>


<p><strong>Quy tắc 10</strong></p>

<p><img class="center" src="http://i.imgur.com/p819bg0h.jpg" title="Pull apart the stories you like. What you like in them is a part of you; you’ve got to recognize it before you can use it." ></p>

<blockquote><p>Mổ xẻ những câu chuyện bạn thích. Điều làm bạn thích từ các câu chuyện đó là một phần trong con người bạn; bạn sẽ phải nhận ra nó trước khi bạn có thể sử dụng nó.</p></blockquote>


<p><strong>Quy tắc 11</strong></p>

<p><img class="center" src="http://i.imgur.com/M6Io26ah.jpg" title="Putting it on paper lets you start fixing it. If it stays in your head, a perfect idea, you’ll never share it with anyone." ></p>

<blockquote><p>Đặt ý tưởng lên giấy để bạn bắt đầu sửa nó. Nếu nó cứ mãi ở trong đầu bạn, dù là ý tưởng hoàn hảo thì bạn sẽ không bao giờ chia sẻ được nó với ai.</p></blockquote>


<p><strong>Quy tắc 12</strong></p>

<p><img class="center" src="http://i.imgur.com/UqK06Egh.jpg" title="Discount the 1st thing that comes to mind. And the 2nd, 3rd, 4th, 5th – get the obvious out of the way. Surprise yourself." ></p>

<blockquote><p>Loại bỏ điều đầu tiên xuất hiện trong đầu. Và điều thứ 2, thứ 3, thứ 4, thứ 5 - hãy loại bỏ những điều hiển nhiên ra khỏi đầu bạn. Hãy làm bạn ngạc nhiên.</p></blockquote>


<p><strong>Quy tắc 13</strong></p>

<p><img class="center" src="http://i.imgur.com/FomAmzyh.jpg" title="Give your characters opinions. Passive or malleable might seem likable to you as you write, but it’s poison to the audience." ></p>

<blockquote><p>Để nhân vật của bạn nói lên tiếng nói của mình. Có thể bạn thích tính thụ động/ sự mài dũa khi viết, nhưng đó lại là thuốc độc với khán giả.</p></blockquote>


<p><strong>Quy tắc 14</strong></p>

<p><img class="center" src="http://i.imgur.com/iDIBEE5h.jpg" title="Why must you tell THIS story? What’s the belief burning within you that your story feeds off of? That’s the heart of it." ></p>

<blockquote><p>Tại sao bạn phải kể CHÍNH câu chuyện này? Niềm tin nào đang cháy trong bạn để nuôi dưỡng câu chuyện đó? Đây chính là trái tim của câu chuyện.</p></blockquote>


<p><strong>Quy tắc 15</strong></p>

<p><img class="center" src="http://i.imgur.com/2YCppV1h.jpg" title="If you were your character, in this situation, how would you feel? Honesty lends credibility to unbelievable situations." ></p>

<blockquote><p>Nếu bạn rơi vào hoàn cảnh của nhân vật, bạn sẽ cảm thấy thế nào? Sự thành thật tạo sự tin cậy cho các tình huống khó tin.</p></blockquote>


<p><strong>Quy tắc 16</strong></p>

<p><img class="center" src="http://i.imgur.com/BR08aPmh.jpg" title="What are the stakes? Give us reason to root for the character. What happens if they don’t succeed? Stack the odds against." ></p>

<blockquote><p>Những trở ngại là gì? Cho chúng tôi lý do để khuyến khích, cổ vũ nhân vật. Điều gì xảy ra nếu nhân vật không thành công? Hãy tạo các lớp trở ngại cho nhân vật.</p></blockquote>


<p><strong>Quy tắc 17</strong></p>

<p><img class="center" src="http://i.imgur.com/w6RMHXAh.jpg" title="No work is ever wasted. If it’s not working, let go and move on - it’ll come back around to be useful later." ></p>

<blockquote><p>Không có việc nào là lãng phí cả. Nếu giờ nó không giải quyết điều gì, bỏ lại và hãy tiếp tục công việc - sẽ có lúc nó có ích.</p></blockquote>


<p><strong>Quy tắc 18</strong></p>

<p><img class="center" src="http://i.imgur.com/P0CyOcgh.jpg" title="You have to know yourself: the difference between doing your best & fussing. Story is testing, not refining." ></p>

<blockquote><p>Bạn phải hiểu rõ bản thân: sự khác biệt giữa làm tốt nhất và sự cầu toàn. Câu chuyện là phép thử, không phải tinh chỉnh.</p></blockquote>


<p><strong>Quy tắc 19</strong></p>

<p><img class="center" src="http://i.imgur.com/85cXV7Eh.jpg" title="Coincidences to get characters into trouble are great; coincidences to get them out of it are cheating." ></p>

<blockquote><p>Những ngẫu nhiên khiến nhân vật gặp rắc rối thì tuyệt; nhưng những ngẫu nhiên để đưa nhân vật ra khỏi rắc rối là lừa dối.</p></blockquote>


<p><strong>Quy tắc 20</strong></p>

<p><img class="center" src="http://i.imgur.com/Kk0Hnvoh.jpg" title="Exercise: take the building blocks of a movie you dislike. How d’you rearrange them into what you DO like?" ></p>

<blockquote><p>Luyện tập: lấy những khối xây dựng của một phim bạn không thích. Làm thế nào để sắp xếp lại các khối đó để bạn THÍCH nó?</p></blockquote>


<p><strong>Quy tắc 21</strong></p>

<p><img class="center" src="http://i.imgur.com/6ruM3G1h.jpg" title="You gotta identify with your situation or characters, can’t just write ‘cool’. What would make YOU act that way?" ></p>

<blockquote><p>Bạn phải đồng nhất với tình huống/ nhân vật của bạn, không thể chỉ cần viết cho nó &#8216;ngầu&#8217;. Điều gì khiến BẠN hành động theo cách đó?</p></blockquote>


<p><strong>Quy tắc 22</strong></p>

<p><img class="center" src="http://i.imgur.com/Yl2uz21h.jpg" title="What’s the essence of your story? Most economical telling of it? If you know that, you can build out from there." ></p>

<blockquote><p>Điều cốt lõi ở câu chuyện của bạn là gì? Cách kể chuyện hiệu quả nhất cho nó? Nếu bạn làm rõ được điều này, bạn có thể xây dựng câu chuyện từ đó.</p></blockquote>


<p>Ảnh minh hoạ:</p>

<ul>
<li><a href="http://imgur.com/a/fPLnM">http://imgur.com/a/fPLnM</a></li>
</ul>


<p>Tham khảo:</p>

<ul>
<li><a href="http://storyshots.tumblr.com/post/25032057278/22-storybasics-ive-picked-up-in-my-time-at-pixar">http://storyshots.tumblr.com/post/25032057278/22-storybasics-ive-picked-up-in-my-time-at-pixar</a></li>
<li><a href="http://www.slideshare.net/powerfulpoint/pixar-22rulestophenomenalstorytellingpowerfulpointslideshare?sf19996470=1">http://www.slideshare.net/powerfulpoint/pixar-22rulestophenomenalstorytellingpowerfulpointslideshare?sf19996470=1</a></li>
<li><a href="http://en.wikipedia.org/wiki/Pixar">http://en.wikipedia.org/wiki/Pixar</a></li>
<li><a href="http://imgur.com/a/fPLnM">http://imgur.com/a/fPLnM</a></li>
<li><a href="http://communicateskills.com/2012/10/11/22-rules-to-phenomenal-storytelling/">http://communicateskills.com/2012/10/11/22-rules-to-phenomenal-storytelling/</a></li>
<li><a href="http://katebrauning.com/2013/05/15/pixar-rule-18-no-writerly-fussing-allowed/">http://katebrauning.com/2013/05/15/pixar-rule-18-no-writerly-fussing-allowed/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>https://twitter.com/lawnrocket<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thêm đối số vào message bundle trong OpenSocial]]></title>
    <link href="http://blog.hoatle.info/2010/01/16/them-doi-so-vao-message-bundle-trong-opensocial/"/>
    <updated>2010-01-16T21:18:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/16/them-doi-so-vao-message-bundle-trong-opensocial</id>
    <content type="html"><![CDATA[<h2>Bài toán</h2>

<ul>
<li>Khi làm việc với message bundle trong OpenSocial để dùng nhiều ngôn ngữ trong ứng dụng tùy thuộc
vào ngôn ngữ người dùng
(<a href="http://wiki.opensocial.org/index.php?title=Localizing_OpenSocial_applications">localization</a>) đôi
khi bạn cần phải thêm đối số động vào chuỗi hiển thị.</li>
</ul>


<p>Ví dụ có chuỗi chào như này: Hello {user} trong đó user sẽ được thay bằng username tương ứng của
người dùng. Nhưng với OpenSocial api hiện tại thì không làm thế nào để thêm đối số vào được mà chỉ
có thể lấy được message tương ứng theo key cung cấp.</p>

<ul>
<li>Do vậy đây là cách làm của tớ: viết một thêm 1 class <code>eXo.social.Locale.getMsg(key)</code> và class này
cung cấp api cũng tương tự như với class <code>Prefs</code> để lấy <code>lang</code>, <code>country</code>, <code>msg</code> (class <code>Prefs</code> còn
cung cấp nhiều api khác nữa): prefs.getMsg(key). Class <code>eXo.social.Locale</code> cung cấp thêm phương thức
<code>eXo.social.Locale.getMsg(key, [val1, val2,...]);</code> để thêm đối số vào &ldquo;message bundle&rdquo;.</li>
</ul>


<!-- more -->


<h2>Giải pháp</h2>

<ul>
<li>Viết class <code>eXo.social.Locale</code>:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Locale.js</span>
</span><span class='line'><span class="cm"> * Utility for Locale, dynamic binding message bundle with arguments</span>
</span><span class='line'><span class="cm"> * Usage:</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getLang(); the same as prefs.getLang();</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getCountry(); the same as prefs.getCountry();</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getMsg(key); the same as prefs.getMsg(key);</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getMsg(key, args); dynamic binding argument to message bundle</span>
</span><span class='line'><span class="cm"> * @author  hoatle</span>
</span><span class='line'><span class="cm"> * @since   October 27, 2009</span>
</span><span class='line'><span class="cm"> * @copyright   eXo Platform</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//prefs object to get lang, country, message bundle</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">prefs</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * private function to lazily initialize prefs object</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">getPrefs</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">prefs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">prefs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">gadgets</span><span class="p">.</span><span class="nx">Prefs</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Class definition</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Locale</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * gets current lang</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getLang</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getLang</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * gets current country</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getCountry</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getCountry</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * alternative for prefs.getMsg(key)</span>
</span><span class='line'><span class="cm">     * uses to getMsg with provided key and substitute args</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * eg: Test for {0}, {1}</span>
</span><span class='line'><span class="cm">     * If args does not match num of {\d}, warning and try to replace by corresponding index.</span>
</span><span class='line'><span class="cm">     * {0} should be replaced by args[0], etc.,</span>
</span><span class='line'><span class="cm">     * If args not provided, functions as prefs.getMsg(key)</span>
</span><span class='line'><span class="cm">     * @param   key String</span>
</span><span class='line'><span class="cm">     * @param   opt_args Array</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">opt_args</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;key is null!&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">msg</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;Can not find resource bundle with key = &#39;</span> <span class="o">+</span> <span class="nx">key</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">opt_args</span><span class="p">)</span> <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//checks if number of {\d} in msg matches opt_args.length</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="sr">/{\d+}/g</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">regex</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="nx">opt_args</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;required &quot;</span> <span class="o">+</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="s2">&quot; args, provided: &quot;</span> <span class="o">+</span> <span class="nx">opt_args</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">//substitutes by index: {0} in msg should be replaced by opt_args[0] and so on</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">l</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">l</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\d+/g</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>            <span class="c1">//TODO should improve performance</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">strToReplace</span> <span class="o">=</span> <span class="nx">opt_args</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">strToReplace</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;matches[&#39;</span> <span class="o">+</span> <span class="nx">i</span> <span class="o">+</span> <span class="s1">&#39;]: &#39;</span> <span class="o">+</span> <span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39; but no opt_args[&#39;</span> <span class="o">+</span> <span class="nx">index</span> <span class="o">+</span> <span class="s1">&#39;]&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">msg</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">opt_args</span><span class="p">[</span><span class="nx">index</span><span class="p">]);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//Expose</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span><span class="p">.</span><span class="nx">Locale</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">;</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Trong class trên không có gì đáng nói ngoài cách dùng regular expression để thay thế chuỗi với
pattern là <code>{0}, {1}, {2}</code> và lấy các index trong <code>{}</code> để thay bằng <code>opt_args[index]</code> tương ứng.
Bạn có thể xem thêm vài viết của <a href="http://twitter.com/sanglt">@sanglt</a>:
<a href="http://www.sanglt.com/content/su-dung-regular-expression-trong-javascript">Sử dụng regular expression trong JavaScript</a>.</p>

<ul>
<li>Chú ý: Class <code>eXo.social.Locale</code> dùng debug được @cowboy viết, đây là cách debug/log tuyệt vời và
tớ rất thích. Giờ trong tất cả các dự án hay ứng dụng nào tớ cũng dùng, sau này nhìn vào console là
biết lỗi gì ở đâu ngay, chứ dùng alert thì đúng là cực hình. Các bạn cũng nên sử dụng cách debug/log
này :).</li>
</ul>


<p>Download ứng dụng ví dụ đơn giản với cách thêm đối số vào &ldquo;message bundle&rdquo; tại
<a href="http://github.com/hoatle/opensocial/downloads">http://github.com/hoatle/opensocial/downloads</a></p>

<p>Mã nguồn tớ để ở đây: <a href="http://github.com/hoatle/opensocial/tree/master/message-bundle">http://github.com/hoatle/opensocial/tree/master/message-bundle</a></p>

<p>Đây là file ứng dụng xml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;Module&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ModulePrefs</span> <span class="na">title=</span><span class="s">&quot;Arguments Binding Message Bundle&quot;</span>
</span><span class='line'>                 <span class="na">description=</span><span class="s">&quot;Simple-App for arguments binding with message bundle&quot;</span>
</span><span class='line'>                 <span class="na">author_email=</span><span class="s">&quot;hoatlevan@gmail.com&quot;</span>
</span><span class='line'>                 <span class="na">author_affiliation=</span><span class="s">&quot;eXo Platform&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">messages=</span><span class="s">&quot;locale/ALL_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span> <span class="na">messages=</span><span class="s">&quot;locale/en_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">lang=</span><span class="s">&quot;vi&quot;</span> <span class="na">messages=</span><span class="s">&quot;locale/vi_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Require</span> <span class="na">feature=</span><span class="s">&quot;opensocial-0.8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ModulePrefs&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Content</span> <span class="na">type=</span><span class="s">&quot;html&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="cp">&lt;![CDATA[</span>
</span><span class='line'><span class="cp">        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/style.css&quot; /&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/debug.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/eXo/social/Locale.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/app.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;p&gt;Resource bundle rendered by server: &lt;strong&gt;__MSG_hello_world__&lt;/strong&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="cp">        &lt;p&gt;Resource bundle rendered by JavaScript:&lt;/p&gt;</span>
</span><span class='line'><span class="cp">        &lt;div id=&quot;helloMsg&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="cp">        &lt;div id=&quot;helloMsgArgs&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="cp">    ]]&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Content&gt;</span>
</span><span class='line'><span class="nt">&lt;/Module&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Có thể thấy ở trên <code>__MSG_hello_world__</code> sẽ được thay thế bằng message bundle tương ứng với key là
&ldquo;hello_world&rdquo; (tớ để tất cả các file message bundle trong thư mục <code>locale</code>).</p>

<p>Để sử dụng class <code>eXo.social.Locale</code>, chúng ta có file app.js:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">run</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">prefs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">gadgets</span><span class="p">.</span><span class="nx">Prefs</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">helloWorld</span> <span class="o">=</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_world&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">helloWorld</span><span class="p">);</span> <span class="c1">//&quot;Hello world!&quot; if current language is English</span>
</span><span class='line'>                       <span class="c1">//&quot;Chào thế giới!&quot; if current language is Vietnamese</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//eXo.social.Locale usage</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Locale</span> <span class="o">=</span> <span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span><span class="p">.</span><span class="nx">Locale</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">helloMsgEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;helloMsg&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">helloMsgArgsEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;helloMsgArgs&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">helloMsgEl</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_world&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">helloMsgArgsEl</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_user_to_place&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;hoatle&#39;</span><span class="p">,</span> <span class="s1">&#39;Vietnam&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gadgets</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">registerOnLoadHandler</span><span class="p">(</span><span class="nx">run</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bạn có thể chạy ứng dụng này ở bất kì OpenSocial container nào. Chúc bạn code vui :D.</p>

<p>Lưu ý: Có thể sử dụng OpenSocial templates để thêm đối số vào message bundle nhưng hiện nay hầu hết
các container chưa hỗ trợ hết.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic arguments binding with OpenSocial message bundle]]></title>
    <link href="http://blog.hoatle.info/2010/01/16/dynamic-arguments-binding-with-opensocial-message-bundle/"/>
    <updated>2010-01-16T19:44:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/16/dynamic-arguments-binding-with-opensocial-message-bundle</id>
    <content type="html"><![CDATA[<h2>Problem</h2>

<ul>
<li><p>Working with OpenSocial message bundle for localization, sometimes it&rsquo;s necessary to bind dynamic
arguments to the message. For example, we have greeting message like this: <code>Hello {user}</code> in which
user will be replaced by user&rsquo;s name. But currently with OpenSocial api, we can&rsquo;t. We just can get
message bundle by the key without passing any arguments for substitution.</p></li>
<li><p>So this is my approach: using <code>eXo.social.Locale.getMsg(key)</code> the same as <code>prefs.getMsg(key)</code> and
<code>eXo.social.Locale.getMsg(key, [val1, val2,...]);</code> for dynamic arguments binding with message bundle.</p></li>
</ul>


<!-- more -->


<h2>Solution</h2>

<ul>
<li>Create <code>eXo.social.Locale class:</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Locale.js</span>
</span><span class='line'><span class="cm"> * Utility for Locale, dynamic binding message bundle with arguments</span>
</span><span class='line'><span class="cm"> * Usage:</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getLang(); the same as prefs.getLang();</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getCountry(); the same as prefs.getCountry();</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getMsg(key); the same as prefs.getMsg(key);</span>
</span><span class='line'><span class="cm"> * eXo.social.Locale.getMsg(key, args); dynamic binding argument to message bundle</span>
</span><span class='line'><span class="cm"> * @author  hoatle</span>
</span><span class='line'><span class="cm"> * @since   October 27, 2009</span>
</span><span class='line'><span class="cm"> * @copyright   eXo Platform</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//prefs object to get lang, country, message bundle</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">prefs</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * private function to lazily initialize prefs object</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">getPrefs</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">prefs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">prefs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">gadgets</span><span class="p">.</span><span class="nx">Prefs</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Class definition</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Locale</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * gets current lang</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getLang</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getLang</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * gets current country</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getCountry</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getCountry</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * alternative for prefs.getMsg(key)</span>
</span><span class='line'><span class="cm">     * uses to getMsg with provided key and substitute args</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * eg: Test for {0}, {1}</span>
</span><span class='line'><span class="cm">     * If args does not match num of {\d}, warning and try to replace by corresponding index.</span>
</span><span class='line'><span class="cm">     * {0} should be replaced by args[0], etc.,</span>
</span><span class='line'><span class="cm">     * If args not provided, functions as prefs.getMsg(key)</span>
</span><span class='line'><span class="cm">     * @param   key String</span>
</span><span class='line'><span class="cm">     * @param   opt_args Array</span>
</span><span class='line'><span class="cm">     * @static</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">opt_args</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">prefs</span> <span class="o">=</span> <span class="nx">getPrefs</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;key is null!&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">msg</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;Can not find resource bundle with key = &#39;</span> <span class="o">+</span> <span class="nx">key</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">opt_args</span><span class="p">)</span> <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//checks if number of {\d} in msg matches opt_args.length</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="sr">/{\d+}/g</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">regex</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="nx">opt_args</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;required &quot;</span> <span class="o">+</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="s2">&quot; args, provided: &quot;</span> <span class="o">+</span> <span class="nx">opt_args</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">//substitutes by index: {0} in msg should be replaced by opt_args[0] and so on</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">l</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">l</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\d+/g</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>            <span class="c1">//TODO should improve performance</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">strToReplace</span> <span class="o">=</span> <span class="nx">opt_args</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">strToReplace</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s1">&#39;matches[&#39;</span> <span class="o">+</span> <span class="nx">i</span> <span class="o">+</span> <span class="s1">&#39;]: &#39;</span> <span class="o">+</span> <span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39; but no opt_args[&#39;</span> <span class="o">+</span> <span class="nx">index</span> <span class="o">+</span> <span class="s1">&#39;]&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">msg</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">matches</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">opt_args</span><span class="p">[</span><span class="nx">index</span><span class="p">]);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//Expose</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span><span class="p">.</span><span class="nx">Locale</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">;</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note: The <code>eXo.social.Locale</code> class uses <code>debug</code>, thanks @cowboy for his excellent JavaScript
log/debug. I love it &lt;3. All my projects and apps use it, you should also use this way of debug/log
instead of alert :).</p>

<p>Download sample app for testing at <a href="http://github.com/hoatle/opensocial/downloads">http://github.com/hoatle/opensocial/downloads</a></p>

<p>Source code available at: <a href="http://github.com/hoatle/opensocial/tree/master/message-bundle">http://github.com/hoatle/opensocial/tree/master/message-bundle</a></p>

<p>The xml app file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;Module&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ModulePrefs</span> <span class="na">title=</span><span class="s">&quot;Arguments Binding Message Bundle&quot;</span>
</span><span class='line'>                 <span class="na">description=</span><span class="s">&quot;Simple-App for arguments binding with message bundle&quot;</span>
</span><span class='line'>                 <span class="na">author_email=</span><span class="s">&quot;hoatlevan@gmail.com&quot;</span>
</span><span class='line'>                 <span class="na">author_affiliation=</span><span class="s">&quot;eXo Platform&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">messages=</span><span class="s">&quot;locale/ALL_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span> <span class="na">messages=</span><span class="s">&quot;locale/en_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Locale</span> <span class="na">lang=</span><span class="s">&quot;vi&quot;</span> <span class="na">messages=</span><span class="s">&quot;locale/vi_ALL.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Require</span> <span class="na">feature=</span><span class="s">&quot;opensocial-0.8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ModulePrefs&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Content</span> <span class="na">type=</span><span class="s">&quot;html&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="cp">&lt;![CDATA[</span>
</span><span class='line'><span class="cp">        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/style.css&quot; /&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/debug.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/eXo/social/Locale.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;script type=&quot;text/javascript&quot; src=&quot;script/app.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="cp">        &lt;p&gt;Resource bundle rendered by server: &lt;strong&gt;__MSG_hello_world__&lt;/strong&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="cp">        &lt;p&gt;Resource bundle rendered by JavaScript:&lt;/p&gt;</span>
</span><span class='line'><span class="cp">        &lt;div id=&quot;helloMsg&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="cp">        &lt;div id=&quot;helloMsgArgs&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="cp">    ]]&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Content&gt;</span>
</span><span class='line'><span class="nt">&lt;/Module&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the app code above, <code>__MSG_hello_world__</code> will be substituted by server with found message bundle
with key &ldquo;hello_world&rdquo; defined in message bundles files. (in <code>/locale</code> folder).</p>

<p>To test <code>eXo.social.Locale</code> class, we have the <code>app.js</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">run</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">prefs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">gadgets</span><span class="p">.</span><span class="nx">Prefs</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">helloWorld</span> <span class="o">=</span> <span class="nx">prefs</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_world&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">helloWorld</span><span class="p">);</span> <span class="c1">//&quot;Hello world!&quot; if current language is English</span>
</span><span class='line'>                       <span class="c1">//&quot;Chào thế giới!&quot; if current language is Vietnamese</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//eXo.social.Locale usage</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Locale</span> <span class="o">=</span> <span class="nx">eXo</span><span class="p">.</span><span class="nx">social</span><span class="p">.</span><span class="nx">Locale</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">helloMsgEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;helloMsg&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">helloMsgArgsEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;helloMsgArgs&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">helloMsgEl</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_world&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">helloMsgArgsEl</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">Locale</span><span class="p">.</span><span class="nx">getMsg</span><span class="p">(</span><span class="s1">&#39;hello_user_to_place&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;hoatle&#39;</span><span class="p">,</span> <span class="s1">&#39;Vietnam&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gadgets</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">registerOnLoadHandler</span><span class="p">(</span><span class="nx">run</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can test this sample app from any OpenSocial container. Happy coding :D.</p>

<p>P/S: We can use OpenSocial template for arguments binding with message bundle but it&rsquo;s currently
not fully supported by all containers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gán nhiều hàm xử lý sự kiện vào một phần tử trong JavaScript]]></title>
    <link href="http://blog.hoatle.info/2010/01/09/gan-nhieu-ham-xu-ly-su-kien-vao-mot-phan-tu-trong-javascript/"/>
    <updated>2010-01-09T02:06:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/09/gan-nhieu-ham-xu-ly-su-kien-vao-mot-phan-tu-trong-javascript</id>
    <content type="html"><![CDATA[<p>Chiều nay đang lơ tơ mơ vì vừa ngủ trưa xong (bình thường không ngủ trưa thì thôi chứ cứ ngủ trưa
xong là lơ tơ mơ, chỉ muốn ngủ hết chiều cho sướng :d) thì có bạn hỏi trên group phpvietnam như
thế này:</p>

<p><strong>&ldquo;Em có một input có thuộc tính onclick=&#8221;doSomeFunction();&rdquo; bây giờ muốn thêm
một hàm nữa ví dụ như onclick=&ldquo;doSomeFunction(); doSomeFunction2();&rdquo;. Công
việc này có làm bằng Javascript được không ah? Em cám ơn mọi người.&ldquo;</strong></p>

<p><em>Nguồn</em>: <a href="http://groups.google.com/group/phpvietnam/browse_thread/thread/c7a8688875a320c3">http://groups.google.com/group/phpvietnam/browse_thread/thread/c7a8688875a320c3</a></p>

<!-- more -->


<p>Trả lời bạn ý xong là hết cả buồn ngủ :P, tiện thể tối về viết lại kinh nghiệm cho cái blog đỡ
tủi thân :P. Khi xử lý sự kiện trong JavaScript có 4 mô hình đăng kí sự kiện được phát triển qua
thời gian. Tớ cũng nói thêm về cách sử dụng và xử lý ngữ cảnh (context) với từ khóa <code>this</code> trong các
hàm xử lý. Trong hàm xử lý phải làm sao đạt được 2 mục đích: truyền tham số vào hàm xử lý phải là
<code>event object</code> và từ khóa <code>this</code> trong hàm xử lý sự kiện đó phải là phần tử đã được đăng kí sự kiện.</p>

<p><strong>1. Inline Event Registration Model (Mô hình cổ xưa và quen thuộc nhất)</strong></p>

<p>Từ những ngày đầu khi có JavaScript và xử lý sự kiện thì chỉ có 1 cách duy nhất để gán hàm xử lý sự
kiện cho một phần tử và hiện nay nhiều người vẫn làm theo cách này. Đây là cách cổ xưa và nguyên
thủy nhất:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething();&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Mọi người đã quá quen với cách làm như trên, đặc biệt là từ khi viết những dòng code JavaScript đầu
tiên. Viết như vậy không có gì sai cả mà nó còn tiện, nhanh, dễ hiểu và ngày xưa đến nay người ta
vẫn làm thế đấy thôi :P. Tuy nhiên, khi JavaScript phát triển hơn thì cách tiếp cận khác đi chút vì
có nhiều vấn đề nảy sinh như: làm như trên không tách biệt cấu trúc (structure &ndash; html) và hành vi
(behavior &ndash; JavaScript), làm cho code rối tinh rối mù lên, nhất là khi bạn phải lấy dữ liệu AJAX về
rồi apply template vào thì rất mệt.</p>

<p>Ta có hàm xử lý sự kiện <code>doSomething</code> như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">// arguments[0] the same as evt</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Với trường hợp này thì <code>evt</code> là <code>undefined</code> và <code>this</code> chính là <code>window object</code>. Giờ làm thế nào để
<code>evt</code> là <code>event object</code> và <code>this</code> là element thì làm theo cách sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething(event);&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Như này là đã truyền được <code>event</code> vào event handler rồi nhé. Theo tớ suy luận và thấy thì khi
element được <code>click</code> thì nó sẽ sinh ra sự kiện <code>onclick</code> như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//[Native Code]</span>
</span><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//event handler được gọi theo cách này</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">(</span><span class="nx">event</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nhớ là phải để <code>event</code> là tham số của <code>doSomething(event)</code> chứ ko được dùng tên nào khác. Nếu dùng
tên <code>evt</code> chẳng hạn thì sẽ xảy ra <code>exeption</code> do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="nx">Native</span> <span class="nx">Code</span><span class="p">]</span>
</span><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//Gọi event handler mà có đối số là evt</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">);</span> <span class="c1">//Xảy ra exception ở đây vì evt là undefined.</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Đây là native code nên nó không cho <code>evt</code> là <code>undefined (null)</code> chứ trong các hàm bình thường thì
truyền tham số là <code>undefined (null)</code> thì không vấn đề gì, ko có exception gì hết :D.</p>

<p>Chú ý: đoạn code trên được test với chrome thì ko thấy lỗi mà vẫn chạy ầm ầm chứ IE, Firefox, Opera
đều xảy ra lỗi hết. Không biết nên chê hay khen bạn chrome đây :d.</p>

<p>Vậy là đến đây lấy được <code>event object</code> rồi, từ <code>event object</code> này lấy được rất nhiều thông tin khác
nhau như tên sự kiện, vị trí con trỏ chuột.v.v&hellip; (<code>evt.type</code>; <code>evt.charCode</code>&hellip;)</p>

<p>Giờ đến việc xử lý từ khóa <code>this</code> phải là element chứ không phải là <code>window object</code> làm như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething.call(this, event)&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Khi đó trong Native Code sẽ là:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//this ở đây là element</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">event</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Trên chính là đoạn code hoàn chỉnh khi muốn lấy <code>this</code> và <code>event object</code>. Tớ nói kỹ ở đây thôi,
mấy đoạn sau sẽ không nói lại mấy cái này nữa.</p>

<p><strong>2. Traditional Event Registration Model</strong></p>

<p>Đây cũng là cách khá nhiều người làm khi bắt đầu muốn tách biệt giữa cấu trúc và hành vi trên trang
web. Trong code JavaScript sẽ đăng kí hàm xử lý sự kiện còn html thì chỉ là html mà thôi.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">id=</span><span class="s">&quot;mylink&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Sau đó trong JavaScript đợi dom load hết thì cho đoạn code sau được thực thi:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Đây là cách truyền thống được dùng cũng không phải là ít và hiện nay nó tương thích trên tất cả các
trình duyệt lớn nên ko có gì đáng ngại cả :). Trong mô hình này thì <code>event object</code> sẽ được truyền
luôn vào hàm xử lý sự kiện, còn <code>this</code> trong hàm xử lý sự kiện cũng là element luôn :D.</p>

<p>Có thể làm thế này khi trong hàm <code>doSomething</code> muốn có <code>event object</code> và <code>this</code> là phần tử sinh ra
sự kiện.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">evt</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Trong trường hợp <code>doSomething</code> nhận thêm vài tham số thì nên viết như này:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">//code implementation</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// Giống với: doSomething.apply(this, [evt, param1, param2]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Tiếp đến là mô hình thứ 3 và 4 trong xử lý sự kiện. W3C model và Microsoft (IE) model. Sau đó kết
hợp hai mô hình 3 và 4 này được giải pháp khá hoàn chỉnh và có thể sử dụng ngon lành đối với mọi
trình duyệt lớn :).</p>

<p><strong>3. W3C Event Registration Model</strong></p>

<p>Theo mô hình chuẩn của bạn W3C thì đây là cách đăng kí sự kiện cho một element, có thể đăng kí
cùng lúc nhiều hàm xử lý cho 1 element:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>eventType</code> ở đây có thể là: click, mouseover, mouseout.v.v&hellip;</p>

<p><code>listener</code> chính là hàm xử lý sự kiện được thực thi khi có sự kiện <code>eventType</code> xảy ra.</p>

<p><code>useCapture</code> bạn nên để là <code>false</code> để thống nhất với trình duyệt IE, cái này liên quan tới event
phase mà tớ sẽ nói sau vào một bài viết khác.</p>

<p>Giờ có thể sử dụng như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">id=</span><span class="s">&quot;mylink&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//javascript, chỉ chạy trên các trình duyệt Firefox, Opera, Chrome</span>
</span><span class='line'><span class="c1">// ko chạy được trên IE</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">//event object</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">//linkEl</span>
</span><span class='line'><span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rất may là <code>event object</code> lại được truyền và <code>this</code> trỏ luôn đến element nên có thể gọi
<code>doSomething</code> luôn:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Với cách này bạn có thể add bao nhiêu hàm xử lý sự kiện tùy ý, khi có 1 sự kiện xảy ra thì các hàm
xử lý sự kiện đã đăng kí sẽ được thực thi và theo W3C đưa ra thì các hàm này thực thi có thể không
theo thứ tự đăng kí và hiện tại bạn không thể gọi phương thức nào của element để kiểm tra xem sự
kiện nào đó có bao nhiêu hàm xử lý sự kiện đã được đăng kí.</p>

<p>Nhưng muốn bỏ một hàm xử lý đăng kí sự kiện thì làm thế nào? Có luôn:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cái này rất hiếm khi dùng. Khi muốn <code>remove</code> được một <code>listener</code> nào thì <code>listener</code> đó phải có tên.
Cách <code>add</code> của tớ ở trên kia dùng <code>anonymouse function</code> thì không thể <code>remove</code> được. Muốn <code>remove</code>
được thì phải làm theo cách này:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">myListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'> <span class="c1">//cho chạy một lần đầu rồi remove listener đi luôn</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Đấy là theo W3C, còn Microsoft lại làm theo cách khác.</p>

<p><strong>4. Microsoft Event Registration Model</strong></p>

<p>Bạn IE thì lại chơi kiểu khác, bạn ý không dùng <code>addEventListener</code> mà lại dùng:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">onEventType</span><span class="p">,</span> <span class="nx">handler</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ví dụ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">//Chỉ chạy trên IE</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s1">&#39;onclick&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">//event object</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">//linkEl</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>Muốn remove một handler (listener) thì dùng <code>detachEvent</code> cũng làm tương tự giống mô hình W3C ở trên:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">myListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s1">&#39;onclick&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Chú ý vì IE không có 2 event phase là <code>capture</code> và <code>bubble</code> mà chỉ có <code>bubble</code> phase nên khi sử dụng
với mô hình của W3C thì luôn dùng <code>false</code> với <code>useCapture</code> cho an toàn, nếu hiểu kỹ sự khác biệt của
2 phase này và có mục đích thì mới nên dùng <code>true</code>.</p>

<p><strong>5. Cuối cùng là cách kết hợp mô hình W3C với M$ (IE) thì ta có thể thiết kế và sử api đơn giản như sau:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Phải luôn giữ <code>event object</code> được truyền vào tham số của listener và từ khóa this trong listener
phải trỏ đến element. Code như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Cross browser add event listener method. For &#39;evt&#39; pass a string value with the leading &quot;on&quot; omitted</span>
</span><span class='line'><span class="cm"> * e.g. addEventListener(window,&#39;load&#39;,myFunctionNameWithoutParenthesis,false);</span>
</span><span class='line'><span class="cm"> * @param    obj object to attach event</span>
</span><span class='line'><span class="cm"> * @param    evt event name: click, mouseover, focus, blur...</span>
</span><span class='line'><span class="cm"> * @param    func    function name</span>
</span><span class='line'><span class="cm"> * @param    useCapture    true or false; if false =&gt; use bubbling</span>
</span><span class='line'><span class="cm"> * @static</span>
</span><span class='line'><span class="cm"> * @see        http://phrogz.net/JS/AttachEvent_js.txt</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'> <span class="kd">function</span> <span class="nx">addEventListener</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">evt</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">fnc</span> <span class="o">===</span>  <span class="kc">null</span> <span class="o">||</span> <span class="nx">useCapture</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;all params are required for addEventListener&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">useCapture</span><span class="p">)</span> <span class="nx">useCapture</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fnc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">myAttachEvent</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">[</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">myFireEvent</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span><span class="nx">evt</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//The following are for browsers like NS4 or IE5Mac which don&#39;t support either</span>
</span><span class='line'>    <span class="c1">//attachEvent or addEventListener</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">myAttachEvent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">)</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="o">=</span><span class="p">{};</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">])</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">evts</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">];</span>
</span><span class='line'>        <span class="nx">evts</span><span class="p">[</span><span class="nx">evts</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span> <span class="o">=</span> <span class="nx">fnc</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">myFireEvent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span> <span class="o">||</span> <span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span> <span class="o">||</span> <span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">])</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">evts</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">];</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">len</span><span class="o">=</span><span class="nx">evts</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">len</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">evts</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * removes event listener.</span>
</span><span class='line'><span class="cm"> * @param    obj element</span>
</span><span class='line'><span class="cm"> * @param    evt event name, &#39;click&#39;, &#39;blur&#39;. &#39;focus&#39;...</span>
</span><span class='line'><span class="cm"> * @func    function name to be removed if found</span>
</span><span class='line'><span class="cm"> * @useCapture true or false; false -&gt; bubbling event phase</span>
</span><span class='line'><span class="cm"> * @static</span>
</span><span class='line'><span class="cm"> * //TODO make sure method cross-browsered</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'> <span class="kd">function</span> <span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">)</span> <span class="p">{</span><span class="c1">//IE</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Khi đó cách sử dụng đơn giản như sau:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hy vọng tớ sẽ sớm viết thêm về event phase sau, chúc bạn code vui :D.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple event handlers for an element in JavaScript]]></title>
    <link href="http://blog.hoatle.info/2010/01/09/multiple-event-handlers-for-an-element-in-javascript/"/>
    <updated>2010-01-09T01:55:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/09/multiple-event-handlers-for-an-element-in-javascript</id>
    <content type="html"><![CDATA[<p>This afternoon I caught a question posted in phpvietnam group:</p>

<p><strong>&ldquo;I have an input element with the property onclick=&#8221;doSomeFunction();&rdquo;. Now I want to add another
function, ie onclick=&ldquo;doSomeFunction(); doSomeFunction2();&rdquo;, can I do this with JavaScript? Thanks
in advance!&ldquo; (translated)</strong></p>

<p><em>Source (in Vietnamese)</em>:
<a href="http://groups.google.com/group/phpvietnam/browse_thread/thread/c7a8688875a320c3">http://groups.google.com/group/phpvietnam/browse_thread/thread/c7a8688875a320c3</a></p>

<!-- more -->


<p>After answering his question, I just want to share my experience when working with JavaScript event
handler. I will show you 4 event registration models for the time beings of its use; the way to use
context and this keyword in function handler. My approach is that the event object will be passed
as 1st parameter to the function handler and this has to refer to the element triggering that event.</p>

<p><strong>1. Inline Event Registration Model</strong></p>

<p>From the first days of JavaScript, there is only one way of registering event handler and nowadays
this approach is still being used. Here we call the primitive approach:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething();&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>People are so familiar with this event registration model, especially from the days of writing the
first lines of JavaScript code. There is nothing wrong with this kind of model, even it&rsquo;s
convenient, fast, easy to understand and people are still using this way :P. However, when
JavaScript evolves, the event registration approach changes because some problems arise: this
approach does not separate structure (html) and behaviour (JavaScript); this makes code more
complex, not very flexible to edit html. Just imagine when creating dom on the fly and constructing
new html fragment code to insert to html document? This approach does not seem fit well in this case.</p>

<p>Now working with event object and this keyword. We have the event handler function:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">// arguments[0] the same as evt</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this case, when the link element is clicked, the <code>doSomething</code> handler function will be called
and <code>evt</code> will get <code>undefined (null)</code> value and <code>this</code> will refer to <code>window</code> object. This is not my
intention, I want the event has to be event object and this has to refer to the link element. So I
have to modify the code a little bit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething(event);&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With above code, the event object is passed to <code>doSomething</code> handler function. In my assumption,
when link element is clicked, the <code>onclick</code> event is triggered from the browser native code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//[Native Code]</span>
</span><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//event handler is called</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">(</span><span class="nx">event</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Remember that we pass <code>event</code> as parameter to <code>doSomething</code> function but not any other name. If we
pass <code>evt</code> for example, the exception occurs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="nx">Native</span> <span class="nx">Code</span><span class="p">]</span>
</span><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//call event handler and pass evt as parameter</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">);</span> <span class="c1">//exception occured because evt is undefined (null).</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because this is the browser native code, it does not allow to use <code>undefined (null)</code> value there.
However, we can pass any <code>undefined</code> or <code>null</code> parameter to any our JavaScript functions as normal,
there is no exception in this case. Note that the above code is tested with chrome and it just
works (?). No exception at all but not the case for IE, Firefox, Opera, Safari. Well, in this case
I don&rsquo;t know if google chrome is good or bad?</p>

<p>By using the event parameter passed to <code>doSomething</code> function, now we can get the event object to
get many useful properties there. For example, event type, cursor location, charCode, etc.,</p>

<p>Now we have to make sure <code>this</code> in <code>doSomething</code> function has to refer to link element, not
<code>window</code> object with the following code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">onclick=</span><span class="s">&quot;doSomething.call(this, event)&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the browser native code will trigger the <code>onclick</code> event as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">onclick</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//this is the triggred element</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">event</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above inline event registration code now works as my intention. I just explain in details in
this part only.</p>

<p><strong>2. Traditional Event Registration Model</strong></p>

<p>This is the model many developers use to separate structure and behaviour in the html document.
Html contains html only, and in JavaScript traditional event registration model will be used:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">id=</span><span class="s">&quot;mylink&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make sure after the dom is loaded, this code will execute:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This way of event registration is compatible with all major browsers. In this model, event object
is passed as the only parameter to the handler function and <code>this</code> in the handler function block
refer to linkEl.</p>

<p>Code this way to make sure <code>doSomething</code> function still has access to event object and <code>this</code> refers
to element triggering the event.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">evt</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In case the <code>doSomething</code> function has more than 1 arguments:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">doSomething</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">//code implementation</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// same as: doSomething.apply(this, [evt, param1, param2]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then we come up with 3rd and 4th event registration model: W3C model and Microsof (IE) model.
By combining these 2 models, we got the solution for event registration compatible with all major
browsers:</p>

<p><strong>3. W3C Event Registration Model</strong></p>

<p>This is the specification of W3C to register event listener (handler). By using it, we can register
as many listeners as possible.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>eventType</code>: click, mouseover, mouseout, etc.,</p>

<p><code>listener</code>: event handler function, it will be called when the element triggered eventType event.</p>

<p><code>useCapture</code>: you should always pass false to make it compatible with IE. This relates to event
phases which I will make another blog post about.</p>

<p>We can apply as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">id=</span><span class="s">&quot;mylink&quot;</span><span class="nt">&gt;</span>link<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//javascript, run only on Firefox, Opera, Chrome, Safari</span>
</span><span class='line'><span class="c1">// can not run on IE</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">//event object</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">//linkEl</span>
</span><span class='line'><span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'><span class="nx">event</span> <span class="nx">object</span> <span class="nx">is</span> <span class="nx">passed</span> <span class="nx">as</span> <span class="nx">parameter</span> <span class="nx">and</span> <span class="k">this</span> <span class="nx">refers</span> <span class="nx">to</span> <span class="nx">linkEl</span> <span class="k">in</span> <span class="nx">event</span> <span class="nx">handler</span><span class="o">:</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>By using this approach, you can add as many listeners as possible. When an eventType triggered, all
registered listeners will be executed. Note that W3C DOM specification does not require that the
first listener registered will be executed first, these listeners can be executed by random. And
till now, there is no way to check how many listeners registered in an element.</p>

<p><em>How about removing an event listener?</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>I rarely use <code>removeEventListener</code>. You can not remove an anonymous function. From the above code,
I use anonymous function as listener, as the result, I can not find the way to remove it. Assigning
it a name and the problem solved:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">myListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'> <span class="c1">//first run and then remove listener, no event triggered from now anymore</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is the W3C way and M$ follows an other way.</p>

<p><strong>4. Microsoft Event Registration Model</strong></p>

<p>IE does not use <code>addEventListener</code> but <code>attachEvent</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">onEventType</span><span class="p">,</span> <span class="nx">handler</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">//run on IE only</span>
</span><span class='line'><span class="nx">linkEl</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s1">&#39;onclick&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">//event object</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="c1">//linkEl</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wanna remove a handler (listener)? Use <code>detachEvent</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">myListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">alert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s1">&#39;onclick&#39;</span><span class="p">,</span> <span class="nx">myListener</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that IE does not have 2 event phases (capture and bubble) but bubble phase only. So when using
W3C, you should always use <code>false</code> for <code>useCapture</code> for safety purpose :d. If you fully understand
these 2 event phases, you can pass true for <code>useCapture</code> but intentionally.</p>

<p><strong>5. At last, combine these 2 models for simple and compatible api:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//api design</span>
</span><span class='line'><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">eventType</span><span class="p">,</span> <span class="nx">listener</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>My intention is that event object has to be passed as 1st parameter to listener and this has to
refer to the element in the block code. Here we come the solution:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Cross browser add event listener method. For &#39;evt&#39; pass a string value with the leading &quot;on&quot; omitted</span>
</span><span class='line'><span class="cm"> * e.g. addEventListener(window,&#39;load&#39;,myFunctionNameWithoutParenthesis,false);</span>
</span><span class='line'><span class="cm"> * @param    obj object to attach event</span>
</span><span class='line'><span class="cm"> * @param    evt event name: click, mouseover, focus, blur...</span>
</span><span class='line'><span class="cm"> * @param    func    function name</span>
</span><span class='line'><span class="cm"> * @param    useCapture    true or false; if false =&gt; use bubbling</span>
</span><span class='line'><span class="cm"> * @static</span>
</span><span class='line'><span class="cm"> * @see        http://phrogz.net/JS/AttachEvent_js.txt</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">addEventListener</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">evt</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">fnc</span> <span class="o">===</span>  <span class="kc">null</span> <span class="o">||</span> <span class="nx">useCapture</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;all params are required for addEventListener&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">useCapture</span><span class="p">)</span> <span class="nx">useCapture</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fnc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">myAttachEvent</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">[</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">myFireEvent</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span><span class="nx">evt</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//The following are for browsers like NS4 or IE5Mac which don&#39;t support either</span>
</span><span class='line'>    <span class="c1">//attachEvent or addEventListener</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">myAttachEvent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">fnc</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">)</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="o">=</span><span class="p">{};</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">])</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">evts</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">];</span>
</span><span class='line'>        <span class="nx">evts</span><span class="p">[</span><span class="nx">evts</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span> <span class="o">=</span> <span class="nx">fnc</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">myFireEvent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">obj</span> <span class="o">||</span> <span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span> <span class="o">||</span> <span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">])</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">evts</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">myEvents</span><span class="p">[</span><span class="nx">evt</span><span class="p">];</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">len</span><span class="o">=</span><span class="nx">evts</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">len</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">evts</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * removes event listener.</span>
</span><span class='line'><span class="cm"> * @param    obj element</span>
</span><span class='line'><span class="cm"> * @param    evt event name, &#39;click&#39;, &#39;blur&#39;. &#39;focus&#39;...</span>
</span><span class='line'><span class="cm"> * @func    function name to be removed if found</span>
</span><span class='line'><span class="cm"> * @static</span>
</span><span class='line'><span class="cm"> * //TODO make sure method cross-browsered</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">useCapture</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">)</span> <span class="p">{</span><span class="c1">//IE</span>
</span><span class='line'>        <span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s1">&#39;on&#39;</span><span class="o">+</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">func</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Use this api as simple as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="kd">var</span> <span class="nx">linkEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myLink&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">addEventListener</span><span class="p">(</span><span class="nx">linkEl</span><span class="p">,</span> <span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">doSomething</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">evt</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hope that you find this post interesting, I will blog about 2 event phases soon. Happy coding :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tổng kết năm 2009 và những dự định cho năm 2010]]></title>
    <link href="http://blog.hoatle.info/2009/12/31/tong-ket-nam-2009-va-nhung-du-dinh-cho-nam-2010/"/>
    <updated>2009-12-31T00:41:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/12/31/tong-ket-nam-2009-va-nhung-du-dinh-cho-nam-2010</id>
    <content type="html"><![CDATA[<p>Hic, lâu lắm rồi ko viết blog, cũng vì lười, cũng vì bận nữa. Nhưng bắt đầu từ bây giờ, lại khoái
viết lại rồi, có nhiều thứ chia sẻ hơn, dù bận gì thì bận cũng sẽ phải cố viết đều đặn hơn. 8 tháng
không động đến blog, giờ ngồi mãi mới nặn ra được vài chữ. Mà tiếng Anh thì kém hẳn, bí từ kinh
khủng mà đấy là còn chưa thi xong tốt nghiệp :SS. Trong bài viết này sẽ điểm lại một số điểm nổi
bật của năm qua mà đáng lẽ những điểm này sẽ là một bài blog cơ :(.</p>

<!-- more -->


<ul>
<li><p>Tháng 2: Giữa tháng 2 bắt đầu vào làm part-time ở eXo Platform. Đầu tiên là Document Writer, sau
đó thì tham gia eXo Social team, vào làm lơ tơ mơ, nhưng giờ cũng đỡ hơn rồi :d.</p></li>
<li><p>Tháng 4: Cùng tổ chức Barcamp Hanoi 2009 với @xoai, @forty4vn, @dac2205 và bạn của @xoai bên RMIT.
Đây là lần đầu tiên tớ tham gia tổ chức một sự kiện như thế, được gặp gỡ, giao lưu với những người
có kinh nghiệm thật là thích :d. Ở Barcamp Hanoi, tớ nói về &ldquo;OpenSocial&rdquo;. OpenSocial được sử dụng ở
hầu hết các mạng xã hội lớn (trừ facebook ko theo chuẩn này), hiện nay như tớ được biết thì ở Việt
Nam có tamtay.vn và me.zing.vn đang phát triển theo chuẩn này. Còn bên eXo Social cũng đang phát
triển sản phẩm theo chuẩn này.</p></li>
<li><p>Tháng 11: Cùng anh @tuanchip (eXo CS team leader), anh Nam (CS team), chị Thủy (phòng marketing và
truyền thông), anh Việt (trưởng phòng nhân sự) giới thiệu OpenSocial và eXo Platform ở 3 trung tâm
lập trình FPT-Aptech, mục đích là giới thiệu công nghệ, tìm kiếm nhân sự, giới thiệu công ty để
các bạn định hướng về công nghệ để sau này nếu muốn làm việc ở eXo thì nên biết và tìm hiểu những
gì là cần thiết.</p></li>
<li><p>Tháng 12:</p>

<ul>
<li><p>Lần đầu tiên vào Xì-Gòn tham dự Barcamp Saigon. Vui phết, tớ vào đấy 3 ngày, thanks anh
@jishanvn đã cho ở nhờ 3 ngày :D. Ở đấy tớ nói về &ldquo;Advanced JavaScript Techniques&rdquo;.</p></li>
<li><p>Lần thứ 2 tham gia Hanoi PHP Day, lần trước thì đến nghe thôi chứ ko nói, lần này thì nói về
&ldquo;Advanced JavaScript Techniques&rdquo;, tớ chuẩn bị chủ đề này cho cả Barcamp Saigon và Hanoi PHP Day
mà :d, tuy nhiên 2 bài nói thì không giống nhau hoàn toàn đâu ;).</p></li>
</ul>
</li>
</ul>


<p>Đấy là một số điểm nổi bật của năm 2009, sang năm mới 2010 hy vọng sẽ tham gia được nhiều sự kiện
thú vị nữa, được giao lưu anh em nhiều hơn. Sang tháng 1 hy vọng thi tốt nghiệp suôn sẻ để được tự
do bay nhảy :d.</p>

<ul>
<li><p>Đầu năm hy vọng có 1 buổi offline một số anh em IT để nhậu + chém gió (Hanoi Hacker Happy Hour).</p></li>
<li><p>Hy vọng lại có Barcamp Hanoi tiếp, eXo sẽ tài trợ tiếp luôn :d.</p></li>
<li><p>Sau khi tốt nghiệp sẽ âm thầm phát triển 1 cái gì đó :D.</p></li>
<li><p>&hellip;</p></li>
</ul>


<p>Đầu tư khá nhiều sức vào project để bảo vệ ở Hanoi Aptech (cùng @huydung) nhưng cuối cùng đuối :((,
sau đấy chưa lấy lại được tinh thần để làm tiếp :|.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[End of 2009 and what's next for 2010?]]></title>
    <link href="http://blog.hoatle.info/2009/12/31/end-of-2009-and-whats-next-for-2010/"/>
    <updated>2009-12-31T00:37:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/12/31/end-of-2009-and-whats-next-for-2010</id>
    <content type="html"><![CDATA[<p>Ok, this is the end day of the year 2009 and now from I wanna blog again :d. I have many things to
write and I will try to spend some time for it. It&rsquo;s nearly 8 months since my last blog post, so in
this post, I just wanna remind some of my remarkable time and event.</p>

<!-- more -->


<ul>
<li><p>February: Joined eXo Platform SEA and worked as document writer, then join eXo Social team as
a Java Developer.</p></li>
<li><p>April: Co-organized Barcamp Hanoi 2009 (with @xoai, @forty4vn, @dac2205, @xoai&rsquo;s friend :d). It
was my first time to organize such an event, keeping in touch with interesting persons,
having meet-ups. I talked about &ldquo;OpenSocial&rdquo; there.</p></li>
<li><p>November: 3 days talking about &ldquo;OpenSocial and eXo Platform&rdquo; with @tuanchip (eXo CS team leader),
Nam (CS team), Thuy (Marketing and Communication department), Viet (HR manager) at 3 FPT-APTECH
centers.</p></li>
<li><p>December:</p>

<ul>
<li><p>My first time to Sai Gon (Ho Chi Minh city) to attend Barcamp Saigon. Special thanks to
<a href="http://twitter.com/jishanvn">@jishanvn</a> :D. I talked about &ldquo;Advanced JavaScript techniques&rdquo; there.</p></li>
<li><p>My second time to attend Hanoi PHP Day, this time I talked about &ldquo;Advanced JavaScript
Techniques&rdquo; as I spent much time for writing javascript code these days.</p></li>
</ul>
</li>
</ul>


<p>For the year of 2010, hope that I can join many other interesting events, broaden my knowledge more
when I finish my school day at the end of next January. I&rsquo;m looking forward to a promising year,
the year of 2010 :d.</p>

<h2>Comments</h2>

<ul>
<li><a href="http://marvinlee.net/blog/">Marvin Lee</a> (2009-12-31 11:43)</li>
</ul>


<p><em>Here&rsquo;s wishing you a great 2010 ahead!</em></p>

<p><em>Happy New Year :)</em></p>

<ul>
<li>hoatle (2010-01-04 00:09)</li>
</ul>


<p><em>You, too Lee :P. Happy new year >:D&lt;</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Làm việc cho eXo Platform hay Google đây?]]></title>
    <link href="http://blog.hoatle.info/2009/04/01/lam-viec-cho-exo-platform-hay-google-day/"/>
    <updated>2009-04-01T22:35:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/04/01/lam-viec-cho-exo-platform-hay-google-day</id>
    <content type="html"><![CDATA[<p><strong>Chú ý: Đây là bài viết trêu đùa ngày Cá Tháng Tư</strong></p>

<p>Tớ đã suy nghĩ rất nhiều. Chả là bên phía Google có đề nghị tớ qua làm việc (full-time) ở Singapore
trong vòng 2 năm sau vụ ứng dụng OpenSocial của tớ (Music-Engine) đạt giải nhì trong cuộc thi viết
ứng dụng OpenSocial khu vực Đông Nam Á do Google tổ chức. Tuy nhiên, không hiểu lý do phức tạp gì
về vụ hải quan mà tớ không thể nhận được Ipod Touch như trong phần thưởng đã ghi, thay vào đó sẽ
nhận được tiền mặt :(. Shannon Madison (là người chịu trách nhiệm chính của cuộc thi) và tớ gần đây
đã bàn luận nhiều về cơ hội việc làm này. Chị ý bảo rằng một số nhân viên của Google sẽ tham gia
BarCamp Hanoi 2009 này và sẽ hé lộ cho chúng ta biết về chiến lược của Google ở Đông Nam Á nói chung
và Việt Nam nói riêng. Giờ thì tớ phải chọn: làm việc bán thời gian ở eXo Platform hay làm việc toàn
thời gian cho Google ở Singapore trong vòng 2 năm.</p>

<!-- more -->


<p>Làm việc cho Google là một cơ hội tốt và hiếm có cho tương lai của tớ. Shannon cũng có nói về kế
hoạch văn phòng đại diện của Google ở Việt Nam, so vậy nếu tớ làm việc cho Google ở Singapore xong
2 năm thì có thể trở lại Việt Nam để làm ở văn phòng đại diện của Google ở Việt Nam. Tớ biết, đây
là cơ hội rất tốt và hiếm hoi đê tớ có thể thử sức mình khi làm việc ở nước ngoài và lại là làm việc
cho Google nữa chứ, sẽ tuyệt vời lắm chứ! Tuy nhiên, nếu tớ đồng ý làm việc ở Sing, điều đó có nghĩa
là tớ phải ngừng việc học của mình ở HUT, nghĩa là tớ phải rờ xa gia đình, bạn bè và những kỷ niệm
đẹp để đến đó làm việc. Thực sự tớ chưa bao giờ ra nước ngoài cả, nếu được vậy thì còn gì bằng.</p>

<p>Tuy nhiên cũng không phải là không có khúc mắc. Tớ vừa mới làm việc ở eXo Platform được có 1 tháng
rưỡi. Mọi thứ mới chỉ là bắt đầu và thực sự thì tớ chưa đạt được điều gì ở eXo Platform cả. Tớ đã
cố gắng nhiều để được làm việc nơi đây. Chỉ sau một thời gian ngắn ngủi như vậy thôi thì tớ biết eXo
Platform chính là môi trường tốt nhất ở Hà Nội này để cho tớ học tập, làm việc và có những người bạn
tốt. Mọi người ở đây thật tốt, dường như tớ đã quen hết với mọi người rồi. Mọi người đã chia sẻ với
nhau rất nhiều, nhất là trong các vụ: tiệc tùng đám cưới, chia tay (Jeremi), karaoke. Ngoài ra thì
tớ cũng muốn tìm hiểu về eXo Platform sau đó áp dụng vào project cuối cùng ở Hanoi Aptech sau đó là
tốt nghiệp.</p>

<p>Giờ nếu tớ đồng ý sang Sing làm việc cho Google thì tớ phải từ bỏ nhiều thứ ở nơi đây. Nếu không thì
tớ vẫn làm việc ở eXo Platform bình thường. Trời ơi!!! Làm thế nào bây giờ? Giá mà làm việc ở eXo
Platform được 1 thời gian sau đó rồi mới nhận được lời đề nghị của Google có phải tốt hơn không. Tớ
phải làm sao giờ, ai có thể cho tớ lời khuyên đúng đắn không :(?</p>

<h2>Bình luận</h2>

<ul>
<li>xuân (2009-05-07 21:32):</li>
</ul>


<p><em>lucky you,</em></p>

<p><em>Vì tớ mới nộp hồ sơ vào exo, nên cũng đã search google về exo (từ đó tìm ra site cậu), download, install &amp; test software của họ.</em></p>

<p><em>sau khi phỏng vấn bên exo &amp; chờ qua hạn mà ko thấy hồi âm từ họ nên tớ đã apply vào cty khác, tuy ko pro như exo nhưng tớ cảm thấy khá là thoải mái ở cty mới này, quan trọng hơn là tớ có thể thực hiện project của tớ tại đây.</em></p>

<p><em>mà cậu chơi drupal lâu chưa vậy ?</em></p>

<ul>
<li>hoatle (2009-05-09 21:32):</li>
</ul>


<p><em>Ừh, làm ở đâu không quan trọng lắm, quan trọng là được làm hết mình, thể hiện mình ^^.</em></p>

<p><em>Chúc project của bạn thành công :).</em></p>

<p><em>Tớ dùng Drupal cũng khá lâu rồi.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working for eXo Platform or Google?]]></title>
    <link href="http://blog.hoatle.info/2009/04/01/working-for-exo-platform-or-google/"/>
    <updated>2009-04-01T22:34:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/04/01/working-for-exo-platform-or-google</id>
    <content type="html"><![CDATA[<p><strong>Note: This is an April Fool&rsquo;s Day joke</strong></p>

<p>I&rsquo;m thinking so much about this. I&rsquo;ve got an offer from Google to work in Singapore for about 2
years after my OpenSocial application took the 2nd place in OpenSocial Application contest in SE
Asia. However, I can&rsquo;t touch the Ipod Touch because of customs official issue but I coud get the
money instead :(. Shannon Madison and I have been discussing about it in recent days. She said that
someone from Google will take part in BarCamp Hanoi 2009 and will tell us about some stratergy in
South East Asia in general and in Vietnam for specific. Now I have choose: having part-time job at
eXo Platform or having full-time job from Google to work in Singapore for 2 years.</p>

<!-- more -->


<p>Working for Google is a very important opportunity for my future. Shannon said to me about the plan
of Google to have representative office in Vietnam soon, so if I aggree to worked with them in
Singapore in 2 years, and then I can come back to work in the representative office of Google in
Hanoi. Well, I know this is the only chance for me to work abroad and work for Google. How
interesting it is! However, if I agree to work in Singapore, it means that I have to discontinue my
study at HUT university; it means that I have to leave my family, my friends and all my good
memories behind to work there. I&rsquo;ve never been abroad, I love it.</p>

<p>Another point to mention, I&rsquo;ve just been working at eXo Platform for 1,5 months. Everything has just
started, I haven&rsquo;t done good job in eXo. I have tried much to work here. After a short period of
time, I know eXo Platform is the best place in Hanoi for my study, work and friendship. Everyone
here is very nice, we can easily get familar with each other. We share about many things: weeding,
karaokeing, departure parties. I want to know more about eXo Platform, to understand it and apply it
for my last project in Hanoi Aptech.</p>

<p>So if I aggree to work for Google in Singapore, I have to give up so many things here. If not, I&rsquo;m
still working in eXo Platform as is. Oh my God, how can I choose one? If only after some time
working for eXo Platform, would I get this kind of offer from Google? Could anyone show me the
right way :(?</p>

<h2>Comments</h2>

<ul>
<li>hoatle (2009-05-30 07:59):</li>
</ul>


<p><em>Ok, thank for your visiting and replying :&ndash;). Currently, I&rsquo;m rather busy with my job at eXo
Platform: being trained + learning. Hope that I will have more time to continue with my application
+ more application in the future. I&rsquo;m working with eXo Social &ndash; an enterprise social network
supporting Open Social. There are many ways to get in touch ;&ndash;).</em></p>

<ul>
<li><a href="http://gergelyorosz.com/">Gergely Orosz</a> (2009-05-29 01:36):</li>
</ul>


<p><em>First of all, congratulations for the opportinity &ndash; even though I don&rsquo;t know you, getting an offer
from Google is a rather rare thing in the IT sector.</em></p>

<p><em>However the reason I&rsquo;m writing is because recently I started developing OpenSocial as in Hungary
the biggest social networking site implemented OS support 1 month ago. I would be interested in your
award winning application. I would be happy if I could get in touch with you.</em></p>

<p><em>Cheers,</em></p>

<p><em>Gergely</em></p>

<ul>
<li>Marvin Lee (2009-04-21 10:42):</li>
</ul>


<p><em>Hi Hoat,</em></p>

<p><em>Although I only came to know about you or your site from the SE OpenSocial and Twitter, I think
you&rsquo;re a special individual and the oppurtunity to join Google Singapore, although being away from
Hanoi is a great chance for bigger things in the future.</em></p>

<p><em>Of course there are things to give up and other things to gain in different places, but joining
Google which has a lot of resources in terms of technologies and brand, can easily overcome the
worries you have in mind I guess?</em></p>

<p><em>And of course this is my personal opinion as I have never worked in Google before nor had I visited
their offices yet, hence it&rsquo;s just my own views.</em></p>

<p><em>However, I do wish you the very best in the choice you make. :&ndash;)</em></p>

<ul>
<li>your friends (2009-04-20 19:59):</li>
</ul>


<p><em>I think working for Google is a good opportunity and a big challenge for any developer. So, I
understand why you are wondering about it. But as you said, it&rsquo;s good for your future so why don&rsquo;t
you try to do?</em></p>

<p><em>Completes your studying is the best way I think but you can not negotiate with Google about start
working time, I think you can suspend your studying for 1 or 2 years as Bill Gate did. Maybe you can
not make a company as Microsoft, but no one knows whether you will create a Google Viet Nam in
future!</em></p>

<p><em>You should think more what you lost, what you get if you work for Google and for Exo Platform. As
you said, Exo is a good company in Ha Noi, but with my experiences, 1,5 months can not say anything.
And are you sure that you understand everything about the one? Is it really good place as your
feeling?</em></p>

<p><em>You are having a big opportunity! I wish you will have good decision!</em></p>

<ul>
<li>dungiis (2009-04-20 16:16):</li>
</ul>


<p><em>Hoatle, You need all your courages to work for Google. I think it&rsquo;s truly a challenge for anyone</em></p>

<ul>
<li>nothing (2009-04-16 09:34)</li>
</ul>


<p><em>I think you shoud leave eXo and going to Singapo. Because in eXo you will not study nothing.</em></p>

<ul>
<li>Koen (2009-04-09 21:03):</li>
</ul>


<p><em>Maybe you can do both and bring both companies closer together!</em></p>

<ul>
<li>your friend (2009-04-03 15:15):</li>
</ul>


<p><em>Hi Hoat</em></p>

<p><em>You are very young so there are a lot of chances is waitting and coming to you in the future.
Google is really a great opportunity, but you should have considered and choosed what is the best
practice actually. I have known that: youth always have a lot of dreams, ambitious &hellip;. and would
like to meet some new chanllenges, new chances. Beside that, you also have known exo platform
company is very good in Ha Noi where you are having the happiness time, good working eviroment,
chances for developing and becaming your carreer in here &hellip; You are the last student year in
University that means you have been farming tree and now its time to pick fruit, although the first
fruit not sweet, luscious ones but that is you have done after working, studying so hard. So, why do
not you continue to work in exo platform where you have been sowing seeds and it has been germing,
so why do not you wait to harvest. I also wondering if exo platform has good environment same your
opninon, why don&rsquo;t you try to disscuss with Officer Manager about integrated your applications for
Music to EXO Product such as eXo Social or eXo Portal and they will be able to completely help you
to develop, improve your product and in the future you can become a Product Manager EXO Social
Music&hellip; I think: that is great chance and its possible.</em></p>

<p><em>For Google, I think that this is only a &ldquo;strategy&rdquo; because there will be many changes and happened
in 2 years &hellip; Whether you can work completely in 2 years with them and then whether they have
established VPĐD in Vietnam or not? This is a completely question and strategy because of the
biggest competitor of Google is Yahoo has done to establish Yahoo Vietnam Company in Viet nam.</em></p>

<p><em>There is only my opinion. Of course the final decision is depend you. There are a lot of chances,
but its important for us how can get and find favorable environment to develop and implement
opportunities became true and success is very few. Please consider carefully and I wish the best
wish for you in the future</em></p>

<p><em>Thank a lot</em></p>

<ul>
<li>rebyn (2009-04-02 12:51):</li>
</ul>


<p><em>I bet you&rsquo;ll take the offer :D</em></p>

<p><em>Departures are indispensable events in your life, especially when you have such a great opportunity
like that. You can preserve your study at HUT by signing a form, go working for Google Singapore for
one and half a year and get back and finish what you&rsquo;ve done.</em></p>

<p><em>Singapore is not that far from Vietnam, now it takes you only 2 hrs to transfer between 2 nations.
In addition, Vietnam working-environment is absolutely not as good as foreign ones for such talent
guys like you.</em></p>

<p><em>What you have to do: Get ready, set, and go. Don&rsquo;t hesitate at such interferences like that.</em></p>

<p><em>Good luck.</em></p>

<ul>
<li>hoatle (2009-04-02 00:32):</li>
</ul>


<p><em>Well, thanks very much for your advice. I know, how can I miss such a great chance like this ;)</em></p>

<p>— Anh Hùng (2009-04-01 23:13):</p>

<p><em>Hello Hoạt,</em></p>

<p><em>Firstly, let me congratulate on your getting this great opportunity from Google. You are the only
Vietnamse &ndash; born, raised, and educated in Vietnam- I know who gets such an offer. :&ndash;)</em></p>

<p><em>As I&rsquo;ve tweeted you, the best thing you should do, IMHO, is to reserve your study results at HUT
and come to work for Google for 1 year (don&rsquo;t tell Google this though). If it fits you, then
decide.</em></p>

<p><em>For eXo Platform, while it is a great start, I think the sheer scale of Google will open you to new
horizons and possessing a good understanding of how the biggest technology firm operates will be of
huge benefits to you in the future.</em></p>

<p><em>My mentor passed Google&rsquo;s 8 rounds of interview to become its Product Manager in SEA. It was a
great opportunity but since Google is not doing anything great in Vietnam, he declined the offer a
few months ago. However, Google Singapore is nice company with nice people, and this is something
you should not miss.</em></p>

<p><em>Part of the reason he quit was because he had already had a great business in Vietnam, a great
family to take care of. You&rsquo;re different. Right? :&ndash;)</em></p>

<p><em>Anyways, good luck!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[extended deadline for Barcamp Hanoi 2009 logo design contest]]></title>
    <link href="http://blog.hoatle.info/2009/02/26/extended-deadline-for-barcamp-hanoi-2009-logo-design-contest/"/>
    <updated>2009-02-26T23:32:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/26/extended-deadline-for-barcamp-hanoi-2009-logo-design-contest</id>
    <content type="html"><![CDATA[<p>The 1st submission to Barcamp Hanoi 2009 Logo Design Contest:</p>

<p><img class="center" src="http://farm4.static.flickr.com/3541/3307608039_9a27531d47.jpg?v=0" title="The 1st submission to Barcamp Hanoi 2009 Logo Design Contest" ></p>

<p>At present we are having some logo submitted for the contest and we know that the time seems so
short for you all to complete your logo for submission.</p>

<p>After great 2nd Barcamp Hanoi organizer meetup tonight, the Logo Design Contest submission deadline
is extended to:</p>

<p><code>Saturday, March 21st, 11:59 PM (GMT+7)</code></p>

<p>So you will have more than 3 weeks from now to prepare. But don’t waste your time, start your work
right now!</p>

<p>Thanks for joining and we are looking for your great Logo for BarCamp Hanoi 2009.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lùi hạn tham dự Cuộc thi Thiết kế Logo Barcamp Hà Nội 2009]]></title>
    <link href="http://blog.hoatle.info/2009/02/26/lui-han-tham-du-cuoc-thi-thiet-ke-logo-barcamp-ha-noi-2009/"/>
    <updated>2009-02-26T23:17:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/26/lui-han-tham-du-cuoc-thi-thiet-ke-logo-barcamp-ha-noi-2009</id>
    <content type="html"><![CDATA[<p>Logo đầu tiên gửi đến cuộc thi:</p>

<p><img class="center" src="http://farm4.static.flickr.com/3541/3307608039_9a27531d47.jpg?v=0" title="Logo đầu tiên gửi đến cuộc thi" ></p>

<p>Hiện tại chúng tôi đã nhận được những logo đầu tiên gửi đến để tham dự cuộc thi và chúng tôi cũng
biết là thời gian hơi gấp rút để bạn có thể hoàn thành tác phẩm của mình đúng thời hạn.</p>

<p>Sau cuộc họp lần 2 của ban tổ chức vừa rồi, hạn nộp logo dự thi sẽ được lùi lại đến:</p>

<p><code>Thứ bảy ngày 21 tháng 3 năm 2009 , 11:59 PM (Giờ GMT+7)</code></p>

<p>Vì vậy các bạn có hơn 3 tuần kể từ bây giờ để chuẩn bị. Nhưng đừng lãng phí thời gian, hãy bắt đầu
công việc ngay từ bây giờ!</p>

<p>Chúng tôi rất cám ơn bạn đã tham gia và đang chờ đợi những Logo ưng ý nhất của bạn dành cho
BarCamp Hanoi 2009.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSDE - môi trường tuyệt vời cho các nhà phát triển ứng dụng OpenSocial]]></title>
    <link href="http://blog.hoatle.info/2009/02/22/osde-moi-truong-tuyet-voi-cho-cac-nha-phat-trien-ung-dung-opensocial/"/>
    <updated>2009-02-22T23:06:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/22/osde-moi-truong-tuyet-voi-cho-cac-nha-phat-trien-ung-dung-opensocial</id>
    <content type="html"><![CDATA[<p>Vừa chiều nay xong vào twitter search về opensocial, thấy mọi người đang rất quan tâm đến OpenSocia
weekendapps. Tự dưng thấy có cái link đến project này: OSDE &ndash; OpenSocial Development Environment và
yêu ngay tắp lự. Dự án là một module cho Eclipse để phát triển các ứng dụng OpenSocial trên môi
trường phát triển của các nhà phát triển.</p>

<p>Tớ vẫn còn nhớ cách đây hơn tháng vẫn code ứng dụng rồi test luôn trên các container thật như orkut,
hi5, myspace, friendster&hellip; nhưng rồi chẳng hiểu sao chỉ test được mỗi trên orkut :|. Khi đăng kí
trên các mạng này, để test ứng dụng của mình, bạn phải đăng kí, kết bạn [để test:)] và sau đó tiến
hành test và nhờ các friend-tester của mình test cho nhau :)).</p>

<p>Theo tớ đây là những bước nhàm chán và thực sự không phải cách pro trong phát triển ứng dụng. Bạn sẽ
test ứng dụng của mình như thế nào khi không có kết nối internet? OSDE chính là giải pháp hoàn hảo
và thực sự là module tuyệt vời cho Eclipse để phát triển các ứng dụng OpenSocial.</p>

<p>Bạn còn chờ gì nữa, project đó đây và hãy phát triển những ứng dụng OpenSocial tuyệt vời cho cộng
đồng nhé: <a href="http://www.eisbahn.jp/trac/osde/">http://www.eisbahn.jp/trac/osde/</a></p>

<p>Tuyệt vời, không thể nói gì hơn :). Thực sự có module này mình hào hứng hơn để phát triển các ứng
dụng OpenSocial. Code cho vui ý mà, hè hè ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSDE - great for OpenSocial developers]]></title>
    <link href="http://blog.hoatle.info/2009/02/22/osde-great-for-opensocial-developers/"/>
    <updated>2009-02-22T22:53:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/22/osde-great-for-opensocial-developers</id>
    <content type="html"><![CDATA[<p>This afternoon I just hit with this project: OSDE &ndash; OpenSocial Developement Environment and loved it
at first sight :). This project is awesome for OpenSocial developers to work on their own
environment. I remembered on the first days of developing app, registered all opensocial containers,
make friends [for test :)] and then test the app. Somehow boring steps and not the pro way of app
development. What if you can not have internet connnection but you still want to test you opensocial
app. OSDE &ndash; OpenSocial Developement Environment is our solution. This is a great module for
Eclipse :).</p>

<p>Click on this link and let&rsquo;s create great apps: <a href="http://www.eisbahn.jp/trac/osde/">http://www.eisbahn.jp/trac/osde/</a></p>

<p>Everything there is good enough to code, much more easier to have your app in development stage :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cuộc thi thiết kế logo cho Barcamp Hà Nội 2009]]></title>
    <link href="http://blog.hoatle.info/2009/02/21/cuoc-thi-thiet-ke-logo-cho-barcamp-ha-noi-2009/"/>
    <updated>2009-02-21T15:14:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/21/cuoc-thi-thiet-ke-logo-cho-barcamp-ha-noi-2009</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/barcamphanoismall2.png" title="Barcamp Hanoi 1 Logo" ></p>

<p>Logo hiện tại các bạn đang thấy ở phần đầu trang này là logo cũ của Barcamp Hanoi lần 1. Một vài
tháng trước, sau khi đặt logo này trên trang chủ, một số bạn đã góp ý nên thay logo cho Barcamp
Hanoi lần 2. Quan sát các Barcamp được tổ chức ở nơi khác, logo cũng được thiết kế mới cho mỗi sự
kiện hàng năm. Vì vậy những người chịu trách nhiệm tổ chức Barcamp Hanoi 2009 quyết định tổ chức một
cuộc thi thiết kế logo nhỏ. Logo thắng cuộc sẽ được sử dụng để in trên các băng rôn, T-shirt, trên
các tài liệu chính thức và sử dụng trên trang chủ. Các bạn có thể tìm hiểu thêm chi tiết về cuộc thi
ngay dưới đây:</p>

<!-- more -->


<h2>Cuộc thi thiết kế logo Barcamp Hà Nội 2009</h2>

<p>Nhằm mục đích giúp Barcamp Hanoi 2009 có một logo độc đáo và ý nghĩa.</p>

<p><strong>Phần thưởng cho người thắng cuộc</strong></p>

<ul>
<li><p>Logo thắng cuộc và tác giả sẽ được thông báo rộng rãi để cộng đồng biết đến.</p></li>
<li><p>Một T-shirt miễn phí có in logo thắng cuộc.</p></li>
</ul>


<p><strong>Hướng dẫn</strong></p>

<p>Logo nên có những đặc điểm sau:</p>

<ul>
<li><p>Thể hiện được tinh thần của Barcamp (Các bạn có thể bắt đầu bằng cách sử dụng file chuẩn logo
Barcamp ở đây)</p></li>
<li><p>Độc đáo, dễ nhận biết, có nét đặc trưng (Đây là logo của Barcamp Hanoi chứ không phải một Barcamp
chung chung)</p></li>
<li><p>Giữ được thẩm mĩ khi sử dụng dưới các hình thức khác nhau: trên web, băng rôn, T-shirt,…</p></li>
</ul>


<p><strong>Tham khảo:</strong></p>

<ul>
<li><p>File chuẩn Logo Barcamp <a href="http://barcamp.org/SpreadBarCamp">http://barcamp.org/SpreadBarCamp</a></p></li>
<li><p>Các mẫu logo ví dụ <a href="http://barcamp.org/LogoGallery">http://barcamp.org/LogoGallery</a></p></li>
<li><p>Barcamp Saigon 2008 Logo <a href="http://www.barcampsaigon.org/dokuwiki/doku.php?id=2008_org_logo">http://www.barcampsaigon.org/dokuwiki/doku.php?id=2008_org_logo</a></p></li>
<li><p>Barcamp Logos trên Google Image search <a href="http://images.google.com/images?q=Barcamp%20logo&amp;oe=utf-8&amp;rls=com.ubuntu:en-US:unofficial&amp;client=firefox-a&amp;um=1&amp;ie=UTF-8&amp;sa=N&amp;hl=en&amp;tab=wi">http://images.google.com/images?q=Barcamp%20logo&amp;oe=utf-8&amp;rls=com.ubuntu:en-US:unofficial&amp;client=firefox-a&amp;um=1&amp;ie=UTF-8&amp;sa=N&amp;hl=en&amp;tab=wi</a></p></li>
</ul>


<p><strong>Tham dự cuộc thi thế nào?</strong></p>

<ul>
<li><p>Đầu tiên hãy thiết kế một vài mẫu logo của riêng bạn. Bạn có thể đọc phần hướng dẫn ở trên để biết
thêm chi tiết.</p></li>
<li><p>Tải tác phẩm của bạn lên Flickr group <code>Barcamp Hanoi 2009 Logo Design Contest</code>.</p></li>
<li><p>Sau một tuần, các logo sẽ được đặt lên trang chủ của Barcamp Hanoi để bầu chọn công khai. Chính
các bạn quyết định logo nào sẽ được sử dụng cho Barcamp Hanoi 2009!</p></li>
<li><p>Logo thắng cuộc sẽ được sử dụng trên băng rôn, T-shirt, các tài liệu và trên web để quảng bá cho
Barcamp Hanoi 2009</p></li>
<li><p>Nếu bạn có bất cứ thắc mắc gì, có thể comment ngay vào bài viết này.</p></li>
</ul>


<p><strong>Các nguyên tắc gửi tác phẩm</strong></p>

<ul>
<li><p>Bạn có thể gửi nhiều hơn một mẫu thiết kế</p></li>
<li><p>Mẫu tải lên dưới định dạng JPG/GIF/PNG tuy nhiên bạn vẫn phải chuẩn bị phiên bản độ phân giải
cao/dạng vector để phục vụ công tác in ấn nếu như bạn thắng cuộc.</p></li>
<li><p>Khi gửi tác phẩm lên tức là bạn sẵn sàng bỏ quyền tác giả của mình với tác phẩm và đóng góp bản
thiết kế của mình cho cộng đồng.</p></li>
<li><p>Đánh dấu logo của bạn với cụm từ  “BCHN 2009 LContest” để những người chịu trách nhiệm tổ chức có
thể biết đến tác phẩm của bạn nhanh hơn.</p></li>
<li><p>Tham gia vào Flickr group Barcamp Hanoi 2009 Logo Design Contest và gửi tác phẩm của mình lên.</p></li>
<li><p>Hãy đảm bảo email đăng ký ở Flickr của bạn là email thường dùng. Điều này giúp việc liên lạc với
bạn thuận tiện hơn.</p></li>
<li><p>Đừng quên, Hạn cuối gửi logo dự thi là <strong>Thứ 7 28 tháng 2 11 giờ 59 phút tối (GMT+7)</strong>. Bạn có
<strong>một tuần</strong> để chuẩn bị, thiết kế và gửi dự thi. <strong>Hãy bắt đầu ngay bây giờ!</strong></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Barcamp Hanoi 2009 logo design contest]]></title>
    <link href="http://blog.hoatle.info/2009/02/21/barcamp-hanoi-2009-logo-design-contest/"/>
    <updated>2009-02-21T15:06:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/21/barcamp-hanoi-2009-logo-design-contest</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.hoatle.info/images/barcamphanoismall2.png" title="Barcamp Hanoi 1 Logo" ></p>

<p>The current logo you’re seeing on top of this page is the logo of Barcamp Hanoi 1. Several months
ago, right after we put it on the homepage,  some people gave us feedback that we should change the
logo. And we see that other Barcamps also change their logo for each individual event. So we think
it’s right time now to announce a tiny logo design contest for Barcamp Hanoi 2009. Then we can use
the winning logo to print banner, T-shirt, official documents and put it on the homepage. You can
read more detail about the contest below:</p>

<!-- more -->


<p><strong>Barcamp Hanoi 2009 Logo Design Contest</strong></p>

<p>Help Barcamp Hanoi create a unique and meaningful logo for the event of 2009.</p>

<p><strong>Reward for the Winner</strong></p>

<ul>
<li><p>Community-Wide recognition for designing the official Barcamp Hanoi 2009 logo featured on the
official homepage.</p></li>
<li><p>A free Barcamp Hanoi 2009 T-Shirt to show off your winning design.</p></li>
</ul>


<p><strong>Submission deadline</strong></p>

<p><code>Saturday, February 28th, 11:59 PM (GMT+7)</code></p>

<p><strong>Design Guidelines</strong></p>

<p>The logo should:</p>

<ul>
<li><p>Convey the concept of Barcamp (You can use the starting files here)</p></li>
<li><p>Be distinct, unique and easily identifiable (It’s the logo of Barcamp Hanoi, not a general Barcamp)</p></li>
<li><p>Aesthetically fit in with a broad range of site/application designs</p></li>
</ul>


<p>References:</p>

<ul>
<li><p>Starting files <a href="http://barcamp.org/SpreadBarCamp">http://barcamp.org/SpreadBarCamp</a></p></li>
<li><p>Sample logos <a href="http://barcamp.org/LogoGallery">http://barcamp.org/LogoGallery</a></p></li>
<li><p>Barcamp Saigon 2008 Logo <a href="http://www.barcampsaigon.org/dokuwiki/doku.php?id=2008_org_logo">http://www.barcampsaigon.org/dokuwiki/doku.php?id=2008_org_logo</a></p></li>
<li><p>Barcamp Logos on Google Image search <a href="http://images.google.com/images?q=Barcamp%20logo&amp;oe=utf-8&amp;rls=com.ubuntu:en-US:unofficial&amp;client=firefox-a&amp;um=1&amp;ie=UTF-8&amp;sa=N&amp;hl=en&amp;tab=wi">http://images.google.com/images?q=Barcamp%20logo&amp;oe=utf-8&amp;rls=com.ubuntu:en-US:unofficial&amp;client=firefox-a&amp;um=1&amp;ie=UTF-8&amp;sa=N&amp;hl=en&amp;tab=wi</a></p></li>
</ul>


<p><strong>How it works</strong></p>

<ul>
<li><p>First, create your Logo design. View the Design Guidelines for more details.</p></li>
<li><p>Upload your design to the contest-specific Flickr group <code>Barcamp Hanoi 2009 Logo Design Contest</code>
for review.</p></li>
<li><p>After a week, these designs will be posted online at the homepage of Barcamp Hanoi for public
voting. You determine the <strong>winner</strong>!</p></li>
<li><p>The winning Logo will be used on blog, websites, banners, documents and T-shirt to help promote
Barcamp Hanoi 2009.</p></li>
<li><p>If you have any additional questions, comment right below this post.</p></li>
</ul>


<p><strong> Submission &amp; Judging Criteria</strong></p>

<ul>
<li><p>You can submit more than one design.</p></li>
<li><p>Submissions can be made via JPG/GIF/PNG however please be prepared to provide high
resolution/vector graphic versions of your work.</p></li>
<li><p>As part of the submission, participants must be willing to give up all their rights to the
copyright and donate it to the community.</p></li>
<li><p>Tag your photo with the phrase “BCHN 2009 LContest“. This will allow us to search for and pull your
photo into a public image gallery.</p></li>
<li><p>Join the contest-specific Flickr group Barcamp Hanoi 2009 Logo Design Contest and add your image
to the image pool.</p></li>
<li><p>Make sure your Flickr account is linked to an active email address; this is the only means of
contacting the winner!</p></li>
<li><p>Don’t forget, <strong>the submission deadline is Saturday, February 28th, 11:59 PM (GMT+7)</strong>. You have a
week from now to prepare and submit your logo. <strong>Start right now!</strong></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
