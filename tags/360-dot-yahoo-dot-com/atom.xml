<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 360.yahoo.com | blog.hoatle.info]]></title>
  <link href="http://blog.hoatle.info/tags/360-dot-yahoo-dot-com/atom.xml" rel="self"/>
  <link href="http://blog.hoatle.info/"/>
  <updated>2013-12-04T22:51:07+00:00</updated>
  <id>http://blog.hoatle.info/</id>
  <author>
    <name><![CDATA[hoatle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[September 11, 2007 - Ajax Series_Giới thiệu]]></title>
    <link href="http://blog.hoatle.info/2013/12/04/september-11-2007-ajax-series-gioi-thieu/"/>
    <updated>2013-12-04T20:19:00+00:00</updated>
    <id>http://blog.hoatle.info/2013/12/04/september-11-2007-ajax-series-gioi-thieu</id>
    <content type="html"><![CDATA[<p>Sau một thời gian ngâm cứu khá lâu (nhưng chưa kĩ lắm về Ajax, tự nhiên thấy hứng viết các entry về
chủ đề này. Tất nhiên những entry này sẽ tìm hiều Ajax từ đầu đến cuối (mình dựa vào sách để viết –
dịch). Chia sẻ cho những bạn nào không thích đọc bằng tiếng Anh. Dù sao mình vẫn thích đọc bản gốc,
các bạn nên đọc bản gốc mới thú, mới hiểu và nắm chắc vấn đề. Tuy nhiên trong quá trình dịch, chỗ
nào cần giải thích mình sẽ giải thích thêm luôn cho dễ hiểu. Cuốn “Professional Ajax” mình cho là
thâu tóm hơi bị đầy đủ các kỹ thuật Ajax. Khỏi dài dòng văn tự. Chúng ta bắt đầu nhé. Cuốn sách hơi
bị dài, khi nào rảnh rỗi có hứng mình lại viết tiếp. Các bạn có thể tìm cuốn sách này đọc, còn muốn
đọc tiếng Việt thì đọc cái này cũng hơi bị ổn. Mình viết entry này vì trên một số diễn đàn thấy
nhiều bạn thích tìm đọc tiếng Việt :> (Mỗi tội hơi lâu, đang học dịch ở trường mà &ndash;> có thời gian
ngồi type một lúc cho đỡ phí!).</p>

<!-- more -->


<p><strong>GIỚI THIỆU:</strong></p>

<p>Với những kỹ năng JavaScript nâng cao, các nhà phát triển web đã tạo ra những trải nghiệm mới cho
người duyệt web trong các ứng dụng của mình. Phá vỡ kiểu mẫu cổ điển “click-and-wait”
(“nhấn-và-đợi”) đã thống trị thế giới web ngay từ buổi sơ khai, giờ đây các nhà phát triển có thể
đem những tính năng chỉ có ở các ứng dụng desktop vào trang web bằng cách sử dụng kỹ thuật Ajax.</p>

<p>Ajax là một thuật ngữ chỉ việc sử dụng các yêu cầu HTTP bất đồng bộ (asynchoronous HTTP requests)
được khởi tạo bằng JavaScript để lấy được dữ liệu từ server mà không cần tải lại trang web. Các yêu
cầu này có thể được tạo ra và thực thi bằng rất nhiều cách và sử dụng rất nhiều định dạng truyền tải
dữ liệu khác nhau để truyền tới trình duyệt cho JavaScript xử lý. Việc kết hợp lấy dữ liệu từ xa và
tương tác với DOM (Document Object Model &ndash; mô hình đối tượng tài liệu) đã tạo ra một thế hệ các ứng
dụng web mới dường như không còn tuân theo các quy tắc truyền thống về những gì có thể diễn ra trên
web. Các công ty lớn như Google, Yahoo! và Microsoft… đã tạo ra và chia sẻ nhiều nguồn tài nguyên
đặc biệt hướng tới mục tiêu tạo các ứng dụng web chạy và trông giống như các ứng dụng trên desktop.</p>

<p>Các entry về Ajax này sẽ nói đến các khía cạnh của Ajax, bao gồm các cách khác nhau bạn có thể khởi
tạo các yêu cầu HTTP tới server “behind the scene” và các định dạng dữ liệu khác nhau để truyền cho
nhau giữa trình duyệt và server. Bạn sẽ học được các kỹ thuật và kiểu mẫu Ajax khác nhau để thực thi
giao tiếp client-server trên website hay các ứng dụng web của bạn. (máy khách: gửi yêu cầu tới máy
chủ – máy chủ: đáp lại yêu cầu của máy khách. Thực ra máy chủ phải gọi là máy phục vụ mới đúng –
nhưng mà toàn gọi là máy chủ thì cứ gọi vậy đi, đỡ gây nhầm lẫn; còn máy khách thì nên gọi là máy
người dùng thì dễ hiểu hơn :)</p>

<p><strong>AI NÊN ĐỌC CÁC ENTRY NÀY?</strong></p>

<p>Các entry này dành cho tất các các bạn quan tâm tới kỹ thuật này, các bạn phát triển các ứng dụng
web, các bạn có trình độ JavaScript trung cấp muốn hiểu nhiều hơn về ngôn ngữ này, nâng cao lên
trình độ pro :D. Àh, những bạn nào quen với các công nghệ: XML, XSLT, PHP, C#, HTML, CSS, các dịch
vụ web thì đừng bỏ qua các entry này nhé. Thật ra bạn chỉ cần biết HTML, CSS, JavaScript là có thể
sử dụng đến các kỹ thuật Ajax rồi.</p>

<p><strong>CÁC VẤN ĐỀ ĐƯỢC ĐỀ CẬP ĐẾN?</strong></p>

<p>Tất nhiên không gì khác ngoài việc giới thiệu, hướng dẫn các kỹ thuật, kiểu mẫu và các trường hợp
sử dụng Ajax.</p>

<p>Series entry này bắt đầu đi tìm hiểu nguồn gốc Ajax, sự phát triển của web, và các công nghệ mới
trực tiếp dẫn tới sự phát triển của các kỹ thuật Ajax. Chúng ta sẽ bàn chi tiết hơn về các frame,
JavaScript, cookies, XML, và XMLhttp liên quan như thế nào tới Ajax.</p>

<p>Sau phần giới thiệu này, chúng ta sẽ nói đến các kỹ thuật Ajax cụ thể. Các yêu cầu “behind the
scene” được tạo ra bằng cách sử dụng các frame ẩn (hidden), các iframe động (dynamic) (chú ý frame
và iframe sẽ được nói chi tiết sau); các cách sử dụng này sẽ được so sánh và đối chiếu, giải thích
khi nào thì nên sử dụng cách nào hơn cách nào. Để bàn luận kỹ và rõ ràng hơn, chúng ta sẽ xem xét
các yêu cầu HTTP (requests) và đáp trả HTTP (responses) được diễn ra như thế nào.</p>

<p>Một khi bạn đã có kiến thức cơ bản về các loại yêu cầu khác nhau, chúng ta sẽ đi sâu khám phá các
ví dụ khi nào và bằng cách nào sử dụng Ajax trong website và ứng dụng web. Các thuận lợi cũng như
bất lợi khi sử dụng các kiểu định dạng truyền dữ liệu khác nhau như: text thường (không theo định
dạng nào), HTML, XML, và JSON. Sau đó là bàn đến các dịch vụ web và làm sao sử dụng chúng để thể
hiện được các kỹ thuật Ajax.</p>

<p>Phần cuối cùng (chả biết có làm đến đây không nữa) sẽ hướng dẫn bạn làm một ứng dụng web Ajax đầy
đủ, hoàn thiện: AjaxMail sẽ kết hợp các kỹ thuật đã nói ở trên lại với nhau. Mình cũng sẽ giới thiệu
một số thư việc Ajax được thiết kế để việc giao tiếp Ajax dễ dàng hơn.</p>

<p><strong>CÁCH PHÂN CHIA AJAX SERIES?</strong></p>

<p>Để tiện việc theo dõi, series này sẽ được chia thành 10 phần. Mỗi phần sẽ được chia nhỏ tiếp theo
lượng từ mà phân bố. Các phần theo thứ tự sẽ là:</p>

<ul>
<li><p>Phần 1: “Ajax là gì? ” – giải thích nguồn gốc Ajax và các công nghệ liên quan. Mô tả quá trình
phát triển của Ajax khi web phát triển, và ai (nếu có) có quyền sở hữu thuật ngữ và các kỹ thuật này.</p></li>
<li><p>Phần 2: “Ajax cơ bản” – giới thiệu các cách khác nhau để thực hiện giao tiếp Ajax, bao gồm kỹ
thuật frame ẩn, inframe động và XMLHttp. Các thuận lợi cũng như bất lợi đối với mỗi cách tiếp cận,
và các hướng dẫn khi nào thì kỹ thuật nào được sử dụng.</p></li>
<li><p>Phần 3: “Các kiểu mẫu Ajax” – tập trung vào các kiểu mẫu sử dụng Ajax. Có rất nhiều cách kết hợp
Ajax vào website và các ứng dụng web. Tất cả sẽ được tổ thức thành kiểu mẫu thiết kế thuận tiện
để kết hợp sử dụng Ajax thực tế.</p></li>
<li><p>Phần 4: “XML, XPath, và XSLT” – giới thiệu XML, XPath, và XSLT là các công nghệ bổ sung Ajax. Tập
trung vào cách sử dụng XML – định dạng truyền dữ liệu và XPath, XSLT để truy xuất và hiển thị thông
tin.</p></li>
<li><p>Phần 5: “Syndication với RSS/ ATom”. – sử dụng Ajax với các định dạng tập hợp dữ liệu RSS và ATom
để tạo ra tập hợp tin tức trên nền web.</p></li>
<li><p>Phần 6: “Các dịch vụ web” – Đem các dịch vụ web vào bức tranh Ajax. Các ví dụ giải thích cách gọi
các dịch vụ web từ máy khách (máy người dùng) cũng như làm sao tạo các proxy bên server để làm
việc với các hạn chế truy cập dưới chính sách bảo mật của trình duyệt.</p></li>
<li><p>Phần 7: “JSON” &ndash; Giới thiệu JSON (JavaScript Object Notation – Chú giải đối tượng JavaScript).
Nghe dịch như vậy cũng hơi khó hiểu, đây là cách biểu diễn đối tượng JavaScript theo cách khác
ngắn gọn hơn, dễ dàng sử dụng hơn. JSON có thể được sử dụng để thay thế cho các giao tiếp Ajax.
Chúng ta cũng bàn đến những thuân lợi cũng như bất lợi khi sử dụng XML và text thông thường.</p></li>
<li><p>Phần 8: “Website Widgets” – Tập hợp các kỹ thuật từ các phần trước tập trung tạo ra các Ajax
Widget có thể chèn vào website của bạn.</p></li>
<li><p>Phần 9: “AjaxMail” – Hướng dẫn bạn hoàn thành một ứng dụng web – AjaxMail. Đúng như tên gọi của
nó, đây là một hệ thống email trên nền Ajax. Tất nhiên ứng dụng này sử dụng rất nhiều kỹ thuật
Ajax khác nhau được nói đến ở các phần trước. Đến phần này chắc là mình cũng có thể làm xong một
cái ứng dụng dễ hiểu hơn, khi đó có thể mình thay bằng ứng dụng mình viết (dự định thôi!)</p></li>
<li><p>Phần 10: “Ajax Frameworks” – Nói đến 3 Ajax Framework: JPSPAN cho PHP, DWR cho Java và JSP,
Ajax.NET cho .NET framework.</p></li>
</ul>


<h2>Bình luận</h2>

<ul>
<li>vannessar (2007-9-11 11:38:00):</li>
</ul>


<p><em>Nói đến các framework cho ajax thì trên kia mới chỉ là FW cho phía server thôi :D Những framework
cho phía client hỗ trợ lập trình JS cũng rất quan trọng và đem lại những cảm giác khác biệt rõ rệt
nhất cho người sử dụng :D Đó là EXT, ầu yé, và nhiều nữa, YUI, mootools, prototype &hellip;</em></p>

<p><em>Aniwei, cuốn này có vẻ rất hay :D Nhất là việc dành nguyên 1 chương cho JSON :D</em></p>

<ul>
<li>hoatle (2007-9-11 11:49:00):</li>
</ul>


<p><em>Ừh, Những FW cho client rất quan trọng vì ứng dụng web là hướng tới người dùng cơ mà :D. Đọc xong
mấy chương đầu thấy thích là viết entry ngay, các kỹ thuật trong sách nêu ra cũng hay, dễ hiểu.
Càng về sau mới khó :&lt;</em></p>

<ul>
<li>vannessar (2007-9-11 11:49:00):</li>
</ul>


<p><em>tiếp tục dịch đi ^ ^ hay tôi cả ông dịch xen ké chương cho nhanh \:D/</em></p>

<ul>
<li>hoatle (2007-9-11 11:53:00):</li>
</ul>


<p><em>uh, vậy ông dịch chương chẵn, tôi chương lẻ nhé. Dịch vậy cho nhanh, có gì hỏi nhau cũng dễ.</em></p>

<ul>
<li>vannessar (2007-9-12 12:09:00):</li>
</ul>


<p><em>vấn đề là chương ông đã dịch mới chỉ là introduction. Giờ tôi sẽ dịch chương 1:&lsquo;What is ajax?&rsquo;,
dành cho ông chương kĩ thuật cơ bản để nghiên cứu nhá :D</em></p>

<ul>
<li>hoatle (2007-9-12 12:37:00):</li>
</ul>


<p><em>Okie, thế cũng được.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[December 23, 2007-“Tin học thực hành” =))]]></title>
    <link href="http://blog.hoatle.info/2007/12/23/december-23-2007-tin-hoc-thuc-hanh/"/>
    <updated>2007-12-23T09:12:00+00:00</updated>
    <id>http://blog.hoatle.info/2007/12/23/december-23-2007-tin-hoc-thuc-hanh</id>
    <content type="html"><![CDATA[<p>Hồi kì đầu tiên trong đời sinh viên, với những hứng khởi, vui mừng được học trong một ngôi trường
“ranh tiếng” mà lại có cái môn “tin học thực hành” mà nhớ lại vẫn muốn học lại cho vui, đúng là môn
hài nhất, được ngồi cười ông thầy vẽ những ứng dụng lên bảng để giảng bài cho sinh viên.</p>

<!-- more -->


<p>Không biết sau hai năm thì giờ các em khoá dưới mới vào còn học kiểu đó không. Học “tin học thực
hảnh” mà sinh viên 5 lớp học trên giảng đường (100 sv) chẳng những không (bao giờ) được sờ vào máy
tính để nghịch, để “thực hành” mà còn phải cố tưởng tượng ứng dụng trên bảng mà ông thầy vẽ nó giống
cái gì, thầy đang vẽ cái gì, menu nào, button nào, thanh công cụ Standard hay Formatting có gì, làm
gì và ở đâu. Tất cả chỉ là tưởng tượng, mường tượng và… tưởng tượng. Ấn tượng thế, tuy học 1 kì mỗi
buổi 1 tuần mà giờ vẫn nhớ ông thầy, gặp ông ý vẫn nhận ra ;))</p>

<p>Môn đó được chia làm 3 phần: Giới thiệu cơ bản về máy tính + Word + Exel. Phần đầu thì không có gì
phải nói cả, nhưng đến 2 phần sau ghê. Microsoft mà biết thầy vẽ ứng dụng của họ lên bảng để sinh
viên tưởng tượng chắc sẽ kiện thầy đấy, chẳng lẽ thầy dạy tin học không có nổi 1 cái Laptop, mang
máy chiếu lên minh hoạ cho sinh viên có phải tốt hơn (gấp nghìn lần) không? Thầy lười hay thầy
nghèo? Nhà trường không trang bị hay thầy thấy không cần thiết đối với sinh viên khối D??? Thắc mắc
lên khoa thì các cô bảo các em thông cảm, khoa mình còn thiếu thốn? Ừh, thiếu thốn không có máy cho
sinh viên thực hành đã đành, chẳng lẽ thầy cũng thiếu thốn 1 cái Laptop để minh hoạ cho sinh viên
thay vì bắt sinh viên phải tượng tưởng trên những đường cong xấu xí, kì quái mà thầy thì (chắc chắn)
không có hoa tay vẽ vời??</p>

<p>Nếu không đủ điều kiện thì thà không dạy còn hơn, chất lượng là thứ chúng ta cần chứ không cần số
lượng. Nghĩ lại chỉ muốn cười, cười xót xa.</p>

<h2>Bình luận</h2>

<ul>
<li>qj246 (2007-12-23 09:27:00):</li>
</ul>


<p><em>chi biet cuoi xot xa bay h phai khong. Hi vong sau nay em se thanh cong va dong gop duoc chut j cai
thien tinh trang giao duc nay nhe! ;&ndash;)</em></p>

<ul>
<li>hoatle (2007-12-23 10:42:00):</li>
</ul>


<p><em>Em chỉ biết nói những gì được thấy, những thứ muốn nói. Còn vấn đề giáo dục này phải để những nhà
giáo dục chứ, thân em tài hèn sức không khoẻ thì biết làm được gì. Còn chuyện sau này không biết
được thế nào ;)). Hôm nọ gặp một cô giáo cũ, cô đã sống với nghề hơn chục năm và bảo: &ldquo;Hơn chục năm
trong nghề, quả thật Giáo dục VN vẫn vậy, vẫn dậm chân tại chỗ mà thôi&rdquo;&hellip;</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[December 21, 2007-Lại được tự do rồi :))]]></title>
    <link href="http://blog.hoatle.info/2007/12/21/december-21-2007-lai-duoc-tu-do-roi/"/>
    <updated>2007-12-21T11:56:00+00:00</updated>
    <id>http://blog.hoatle.info/2007/12/21/december-21-2007-lai-duoc-tu-do-roi</id>
    <content type="html"><![CDATA[<p>Gần tháng rồi thoát khỏi “chốn bụi trần”, xa rời “thế sự” tớ lên núi tu tỉnh, tầm sư học đạo. Trong
gần tháng “gian + khổ” này, học thì cũng (không) được nhiều, chơi thì cũng không ít. Điều đặc biệt
nhất là tớ đã phát hiện ra dòng năng lượng tiềm ẩn của mình – nguồn năng lượng mà lâu lắm rồi mới
cảm nhận lại được, lần này còn mạnh mẽ hơn hồi trước. Quả là đã 2 năm kể từ ngày bước chân vào
“học đại” tớ chỉ lơ tơ ngơ, không có hứng thú tu chí tu thân jì cả, học hành qua loa cho qua. Thế mà
trong lần lên núi này, tự nhiên thấy mình vẫn còn jỏi fết, cũng không đến nỗi nào đâu nhỉ. Thật ra
là cả kì (tất nhiên là) không học jì cả, truớc kì thi đã xác định kiểu jì cũng thi lại 2, 3 môn là
ít. Thế mà trước kì thi mấy hôm, đặc biệt trong kì thi, trước sự “xúi giục”, “lôi kéo” của đồng môn,
sáng sáng, chiều chiều, đều đều lên núi (D4 &ndash; FOFL) học đạo. Trời ạ, dậy sớm vào buổi sáng là khó
lắm ý (bình thường ngủ tới 10h dậy là sớm), thế mà trong lúc nước sôi lửa bỏng 7h – 7 rưỡi đã dậy
rồi. Ghê thật, mình phục mình quá. Buổi chiều 2 rưỡi &ndash; 3h nghỉ trưa xong lại tiếp tục. Ngay điểm
chăm chỉ này đã là một cuộc cách mạng rồi.</p>

<!-- more -->


<p>Còn về phần thi ư, tất nhiên là (phải) qua hết rồi. Về điểm “chác” không cao (lắm) nhưng cái được
nhất là dòng năng lượng “tiềm ẩn” kia đã được đánh thức và nhất định sẽ có tác dụng nào đó trong kì
tới. Môn học cả kì, chỉ cần học thi 2-3 hôm cũng tự tin đi thi lắm rồi. Thanx Diệp, Thư, H. Giang
nhá, những buổi đi học và cả những buổi đi chơi nữa, cảm ơn những buổi đi chơi nhiều hơn :)).</p>

<p>Àh, thi CNXH tớ có dòm qua 1 tí “reference” và bị phát hiện nhưng không sao, ghê nhất mấy môn này.
Triết học tớ đã phải học lại, thi lại còn suýt trượt cơ. Lần đó cũng không đến nỗi nào, làm xong sớm
ra sớm nhất fòng, thở phào nhẹ nhõm thế là qua. Vậy mà lần đó tiện qua trường, vào xem điểm không
biết mình được 7 hay 8 đây, nhìn chình ình con 3 to đùng đỏ loẹt to tướng ghi đè lên con 5 khiêm
nhường. Đau, chán, không thể tin được, mất mấy tuần shocked, vậy là lại fải học lại lần 3 ư, lại
phải mất 120k nữa sao??? Không, thà tớ hi sinh tất cả chứ không chịu mất 120k, không chịu làm trò
chơi (cho người ta) như thế. Kết quả là tớ đã định bỏ học rồi đấy :|. Rồi một lần tình cờ xem điểm
trên trang dtdh.hut.edu.vn nhìn thấy con 5 vẫn được giữ. Thật khó hiểu, chẳng lẽ (giả vờ) cho tớ con
3 để thi lại lần 2 thu thêm 5k?? Nhưng do điều kiện không cho phép tớ không “được” tham gia, vậy là
người ta thấy thương tình nên lại cho 5??</p>

<p>Trở lại “chốn bụi trần”, thấy nhiều chuyện (hơi bị) nghiêm trọng xảy ra. Thứ nhất là chuyện lãnh thổ
đất đai vừa rồi, thêm vài chuyện lặt vặt khác nữa mới biết hệ thống thông tin của ta nếu không có
Internet chắc là dân mù tịt hết, chả biết jì cả. Những chuyện nghiêm trọng tày đình liên quan tới
chủ quyền lãnh thổ, trong thời đại này mà người dân cũng không được “đày tớ” cho biết, phải chăng
dân là chủ đâu cần biết tới mấy chuyện “lặt vặt” như vậy, cứ để “tớ” lo là xong :|.</p>

<p>Được dạy dỗ tinh thần yêu nước, truyền thống đánh giặc ngoại xâm, bao chiến công lẫy lừng từ thời
cha ông. Đến khi chính người được dạy dỗ được thể hiện lòng yêu nước thì bị vùi dập là sao? Có tin
đồn là người ta sắp đưa môn “chống tham nhũng, lạm fát” vào hệ thống giáo dục hay sao ấy?? Rồi đến
khi người được dạy dỗ thể hiện tinh thần ấy lại tiếp tục bị vùi dập? Lịch sử là môn học khách quan,
tại sao mỗi thời kì tuỳ quan hệ mà sách lịch sử đã được cải biên, lược bỏ, sửa chữ, sửa từ? Tại sao
chúng ta học lịch sử khi mà nó không còn là lịch sử? Học lịch sử để quan tâm lịch sử, hiện tại không
phải là lịch sử? Tất cả chỉ là những câu hỏi hỗn độn, lung tung, mơ hồ. Tại sao nhỉ, ờ tại sao???
Sao lại có chuyện đó được nhỉ? Sao người ta lại làm thế nhỉ? Chỉ biết hỏi và thở dài, mong một ngày…
hừ…</p>

<p>Gần tháng trời bị dồn nén, chất chứa quá, thi xong thấy nhẹ nhõm, lại trở về cái hồi thức đêm, hồi
vít blog, hồi gộp 2 bữa sáng trưa làm 1. Không, gộp jì chứ jờ tớ đã dậy sớm fết để ăn sáng rồi, có
thể ăn sáng xong rồi ngủ tiếp =)). Vui và cố gắng!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[November 15, 2007 - Túi bụi mà chả gì ra hồn]]></title>
    <link href="http://blog.hoatle.info/2007/11/15/november-15-2007-tui-bui-ma-cha-gi-ra-hon/"/>
    <updated>2007-11-15T11:50:00+00:00</updated>
    <id>http://blog.hoatle.info/2007/11/15/november-15-2007-tui-bui-ma-cha-gi-ra-hon</id>
    <content type="html"><![CDATA[<p>Thời gian này (cả sắp tới nữa) bắt đầu bận túi bụi. Ở trường sắp thi. Dở hơi cái mọi kì trước các
môn thi cách nhau cũng fải 1 tuần, đến kì này nhiều môn khoai lại cách nhau có 2 &ndash; 3 hôm. Kiểu này
chắc chết mất.</p>

<!-- more -->


<p>Ở Aptech đang học C#, chỉ thi lý thuyết nên có fần lơ là :P. Hình như tuần sau cũng thi roài, tuần
sau nữa ở trường cũng thi. Đang có project hoành tráng fết, đang bù đầu, loạn cả lên. Thời gian thì
gấp, jờ lại bắt đầu dậy sớm đi ôn bài mới kinh chứ.</p>

<p>Ở lớp mấy đứa rủ nhau mang sách vở buổi sáng tới ôn bài. Đến đến luyện dịch, ôn bài cũng ghê. Được
mấy buổi rồi, jờ cố gắng đi còn ôn được ít nào chứ ở nhà chắc chả chịu ôn. Thi xong kì này mới dồn
toàn lực vào project được. Jờ đầu cứ ong lên, quay cuồng, quay cuồng.</p>

<p>Cố gắng không thi lại mấy môn ngoài khoa chứ thi lại cũng chết, thi lại môn ở khoa thì các cô còn
thương tình 1 chút, chứ sang khoa khác thi mấy cái môn đó thì không sống nổi. Đã có kinh nghiệm học
lại, thi lại môn Triết (phù, may mà thi lại được 5), thi lại Phong cách học. Còn nợ mấy môn nữa chưa
trả. Chắc ở khoa jờ mình là “chúa chổm” roài.</p>

<p>Trong thời gian sắp tới, cố gắng dậy sớm nháy máy bọn nó, ôn được ít nào thi cho xong. Thời gian ngủ
bị rút ngắn trầm trọng. Trước hay ngủ từ 2-3h tới 10-11h, ăn gộp bữa sáng + trưa rồi đi học. Jờ fải
dậy 6 rưỡi mà jờ ngủ vẫn thế. Cố, sau đợt này lại xơ xác đây.</p>

<p>Loạn trong social network, quá nhiều, quá nhiều, quá nhanh, quá nhanh, mình quá lạc hậu. Nếu so sánh
thì mình còn đang thời kì siêu đồ đá. Đúng là công nghệ, bắt kịp công nghệ cũng không fải chuyện đơn
giản. Thật ngưỡng mộ, thật tuyệt vời. Có quá nhiều thứ fải tìm hiểu, fải làm. Được làm việc, được
bận rộn, được bay nhảy cũng vui.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[November 08, 2007 - Phần 1_Ajax là gì? (2)]]></title>
    <link href="http://blog.hoatle.info/2007/11/08/november-08-2007-phan-1-ajax-la-gi-2/"/>
    <updated>2007-11-08T03:14:00+00:00</updated>
    <id>http://blog.hoatle.info/2007/11/08/november-08-2007-phan-1-ajax-la-gi-2</id>
    <content type="html"><![CDATA[<p>[Xin ghi rõ nguồn <a href="http://360.yahoo.com/wild_tiger8607">Hoat Le’s blog</a> khi muốn đăng lại các bài
viết trong <strong>Ajax Series</strong>]</p>

<p>Cần thời gian cho nhiều việc khác, chuyện gì đã qua sẽ qua không nói lại nữa. Chúng ta tiếp tục với
Ajax Series, lâu rồi chưa sờ đến nó, lại tiếp tục cùng mọi người “ngâm cứu” nào. Lần này sẽ là giọng
như viết sách, không thích kiểu “informal” nữa vì hơi “bát nháo” :(. Đêm nay chỉ type thôi.</p>

<!-- more -->


<p>Ở Entry trước chúng ta đã tìm hiểu một số thông tin cơ bản về Ajax, sự ra đời của Ajax. Tiếp tục
trong phần này sẽ giúp các bạn tìm hiểu sâu hơn nữa về Ajax – thuật ngữ rất “hot” từ năm 2005.</p>

<p><strong>1.3 Sự phát triển của Web</strong></p>

<p>Năm 1990, khi Tim Berners-Lee lần đầu tiên đưa bản dự thảo cho thế giới Web (World Wide Web) thì ý
tưởng của ông khá giản đơn: tạo ra một mạng thông tin được kết nối với nhau sử dụng siêu văn bản
(hypertext) và bộ định danh tài nguyên thống nhất (Uniform Resource Identifiers &ndash; URIs). Khả năng
liên kết các loại tài liệu khác nhau từ khắp nơi trên thế giới đã tạo ra tiềm năng rất lớn cho những
người đang tìm kiếm học bổng vì mọi người có thể dễ dàng truy xuất các tài liệu tham khảo gần như
ngay tức khắc. Hơn nữa, phiên bản đầu tiên của ngôn ngữ đánh dấu siêu văn bản (HyperText Markup
Language &ndash; HTML) có rất ít tính năng, chỉ để định dạng và liên kết các tài liệu, đó là một nền không
phải để xây dựng phần mềm giàu tính tương tác mà chỉ là nơi chia sẻ các loại tài liệu minh hoạ và
văn bản đã thống trị thế giới in ấn. Web đã phát triển từ những trang web tĩnh như vậy.</p>

<p>Khi Web phát triển, các nhà kinh doanh sớm nhận ra khả năng tiềm ẩn đưa thông tin về các sản phẩm và
dịch vụ của mình tới đông đảo mọi người trên mạng. Thế hệ tiếp theo của Web đã có nhiều khả năng
định dạng và hiển thị thông tin hơn vì HTML cũng đã phát triển để đáp ứng nhu cầu phù hợp với những
kì vọng của những người sử dụng biết đến kiểu truyền thông mới này. Nhưng một công ty nhỏ &ndash; Netscape
– ngay sau đó đã nhanh chóng đẩy tốc độ phát triển của Web nhanh hơn rất nhiều.</p>

<p>Note: Bắt đầu từ năm 1994 Netscape bắt đầu cuộc chiến giữa các trình duyệt (browser wars) khi đưa ra
hàng loạt các thẻ HTML mở rộng như hiển thị màu chữ, hiện ảnh.. trong trình duyệt của mình mà trong
các trình duyệt khác sẽ báo lỗi hoặc ra kết quả hiện thị không như mong muốn, hoặc không hiện gì cả.
Nhưng mọi người thích những mở rộng này và đều muốn sử dụng trình duyệt của Netscape để duyệt web.
Đến năm 1996, trình duyệt của Netscape đã trở thành chương trình máy tính phổ biến nhất thế giới. Có
thể nói đây là thời kì hoàng kim nhất của Netscape cho đến khi Microsoft cũng phát triển, cuốn hút
người dùng bằng cách thêm những phần mở rộng không phải là chuẩn vào trình duyệt của mình mà trình
duyệt khác không hiển thị hoặc báo lỗi. Bắt đầu từ đây cuộc chiến giữa 2 ông trùm trình duyệt bắt
đầu, nảy sinh rất nhiều vấn đề không tương thích cho các nhà phát triển. Đến những năm 2000,
Internet Explorer đã khẳng định vị trí số 1 của mình, trở thành trình duyệt phổ biến nhất đi cùng
hệ điều hành Windows. Đến năm 2004, trình duyệt mã nguồn mở Mozilla Firefox chính thức ra phiên bản
1.0. Đến năm 2005 sản phẩm mã nguồn mở từ bộ Mozilla Suite của Netscape đã được bình chọn là sản
phẩm số 1. Mozilla Firefox hoàn toàn miễn phí và ngày càng được ưa chuộng bởi các nhà phát triển,
người dùng. Và hiện nay Mozilla Firefox đã trở thành trình duyệt số 1 được sử dụng nhiều nhất trên
thế giới.</p>

<p><strong>1.4 JavaScript</strong></p>

<p>Netscape Navigator là trình duyệt web chủ đạo thành công trước nhất và cũng là trình duyệt đầu tiên
đẩy nhanh các công nghệ web. Tuy nhiên, Netscape thường bị chỉ trích bởi các tổ chức tiêu chuẩn vì
đã tiến hành áp dụng những công nghệ mới và các mở rộng cho các công nghệ hiện hành trước khi các
chuẩn được ban hành (rất giống Microsoft cũng bị chỉ trích vì đã không theo các chuẩn khi phát triển
Internet Explorer). Một trong những công nghệ được Netscape phát triển là JavaScript.</p>

<p>Đầu tiên được đặt tên là LiveScript, JavaScript đã được Brendan Eich của Netscape tạo ra và có trong
trình duyệt phiên bản 2.0 (1995). Đây là lần đầu tiên các nhà phát triển có thể tác động tới trang
web để tương tác với người dùng. Thay vì phải bắt server phải thực hiện nhiệm vụ đơn giản như kiểm
tra tính hợp lệ của dữ liệu, chúng ta có thể làm cho trình duyệt có thể kiểm tra tính hợp lệ của dữ
liệu ngay mà không cần gửi tới server. Khả năng này rất quan trọng tại thời điểm đó khi hầu hết
người dùng Internet sử dụng modem 28.8 Kbps, nếu gửi yêu cầu tới <em>server</em> thì sẽ trở thành game đợi
chờ (Có lúc người ta nói vui với nhau: WWW – World Wide Wait). Giảm thiểu số lần người dùng phải đợi
<em>response</em> từ <em>server</em> chính là bước lớn đầu tiên tiến tới cách tiếp cận Ajax.</p>

<p><strong>1.5 Frames (Khung)</strong></p>

<p>Phiên bản đầu tiên của HTML có mục đích tạo ra các tài liệu đứng độc lập một mình và đến tận HTML
4.0 <em>frame</em> mới được chính thức giới thiệu. Ý tưởng hiển thị một trang web từ một số tài liệu được
gộp lại là một ý tưởng cấp tiến đầy tranh luận đã được Netscape chọn để đưa vào tính năng cho trình
duyệt trước khi hoàn thành HTML 4.0. Netscape Navigator 2.0 là trình duyệt đầu tiên hỗ trợ các
<em>frame</em> và cả JavaScript. Đây là một bước tiến quan trọng trong sự phát triển của Ajax.</p>

<p>Vào cuối những năm 1990 khi cuộc chiến giữa các trình duyệt (browser wars) giữa Microsoft và
Netscape nổ ra thì cả JavaScript và frame đều được chính thức hoá. Khi ngày càng có nhiều tính năng
được hỗ trợ bởi 2 trình duyệt, các nhà phát triển sáng tạo bắt đầu thử nghiệm sử dụng cả 2 tính năng
này của trình duyệt. Do một frame đại diện cho một <em>request</em> hoàn toàn độc lập tới <em>server</em> nên khả
năng kiểm soát một <em>frame</em> và nội dung của nó bằng JavaScript đã mở cánh cửa cho một số khả năng lí
thú.</p>

<p>Trong bài viết tới sẽ đề cập tới một số kỹ thuật cơ bản sử dụng <em>frame</em> để gửi yêu cầu tới <em>server</em>
mà không cần <em>load</em> lại trang.</p>
]]></content>
  </entry>
  
</feed>
