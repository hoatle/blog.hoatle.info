<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: OpenSocial | blog.hoatle.info]]></title>
  <link href="http://blog.hoatle.info/tags/opensocial/atom.xml" rel="self"/>
  <link href="http://blog.hoatle.info/"/>
  <updated>2014-01-16T19:39:04+00:00</updated>
  <id>http://blog.hoatle.info/</id>
  <author>
    <name><![CDATA[hoatle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thêm đối số vào message bundle trong OpenSocial]]></title>
    <link href="http://blog.hoatle.info/2010/01/16/them-doi-so-vao-message-bundle-trong-opensocial/"/>
    <updated>2010-01-16T21:18:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/16/them-doi-so-vao-message-bundle-trong-opensocial</id>
    <content type="html"><![CDATA[<h2>Bài toán</h2>

<ul>
<li>Khi làm việc với message bundle trong OpenSocial để dùng nhiều ngôn ngữ trong ứng dụng tùy thuộc
vào ngôn ngữ người dùng
(<a href="http://wiki.opensocial.org/index.php?title=Localizing_OpenSocial_applications">localization</a>) đôi
khi bạn cần phải thêm đối số động vào chuỗi hiển thị.</li>
</ul>


<p>Ví dụ có chuỗi chào như này: Hello {user} trong đó user sẽ được thay bằng username tương ứng của
người dùng. Nhưng với OpenSocial api hiện tại thì không làm thế nào để thêm đối số vào được mà chỉ
có thể lấy được message tương ứng theo key cung cấp.</p>

<ul>
<li>Do vậy đây là cách làm của tớ: viết một thêm 1 class <code>eXo.social.Locale.getMsg(key)</code> và class này
cung cấp api cũng tương tự như với class <code>Prefs</code> để lấy <code>lang</code>, <code>country</code>, <code>msg</code> (class <code>Prefs</code> còn
cung cấp nhiều api khác nữa): prefs.getMsg(key). Class <code>eXo.social.Locale</code> cung cấp thêm phương thức
<code>eXo.social.Locale.getMsg(key, [val1, val2,...]);</code> để thêm đối số vào &ldquo;message bundle&rdquo;.</li>
</ul>


<!-- more -->


<h2>Giải pháp</h2>

<ul>
<li>Viết class <code>eXo.social.Locale</code>:</li>
</ul>


<p>```javascript
/<em>*
 * Locale.js
 * Utility for Locale, dynamic binding message bundle with arguments
 * Usage:
 * eXo.social.Locale.getLang(); the same as prefs.getLang();
 * eXo.social.Locale.getCountry(); the same as prefs.getCountry();
 * eXo.social.Locale.getMsg(key); the same as prefs.getMsg(key);
 * eXo.social.Locale.getMsg(key, args); dynamic binding argument to message bundle
 * @author  hoatle
 * @since   October 27, 2009
 * @copyright   eXo Platform
 </em>/</p>

<p>(function() {</p>

<pre><code>//prefs object to get lang, country, message bundle
var prefs;

/**
 * private function to lazily initialize prefs object
 */
function getPrefs() {
    if (!prefs) {
        prefs = new gadgets.Prefs();
    }
    return prefs;
}
/**
 * Class definition
 */
var Locale = function() {

}
/**
 * gets current lang
 * @static
 */
Locale.getLang = function() {
    prefs = getPrefs();
    return prefs.getLang();
}
/**
 * gets current country
 * @static
 */
Locale.getCountry = function() {
    prefs = getPrefs();
    return prefs.getCountry();
}
/**
 * alternative for prefs.getMsg(key)
 * uses to getMsg with provided key and substitute args
 *
 * eg: Test for {0}, {1}
 * If args does not match num of {\d}, warning and try to replace by corresponding index.
 * {0} should be replaced by args[0], etc.,
 * If args not provided, functions as prefs.getMsg(key)
 * @param   key String
 * @param   opt_args Array
 * @static
 */
Locale.getMsg = function(key, opt_args) {
    prefs = getPrefs();
    if (!key) {
        debug.warn('key is null!');
        return '';
    }
    var msg = prefs.getMsg(key);
    if (msg === '') {
        debug.warn('Can not find resource bundle with key = ' + key);
        return msg;
    }
    if (!opt_args) return msg;

    //checks if number of {\d} in msg matches opt_args.length
    var regex = /{\d+}/g;
    var matches = msg.match(regex);
    if (matches.length !== opt_args.length) {
        debug.warn("required " + matches.length + " args, provided: " + opt_args.length);
    }
    //substitutes by index: {0} in msg should be replaced by opt_args[0] and so on
    for (var i = 0, l = matches.length; i &lt; l; i++) {
        var index = matches[i].match(/\d+/g)[0];
        //TODO should improve performance
        var strToReplace = opt_args[index];
        if (!strToReplace) {
            debug.warn('matches[' + i + ']: ' + matches[i] + ' but no opt_args[' + index + ']');
        } else {
            msg = msg.replace(matches[i], opt_args[index]);
        }
    }
    return msg;
}
//Expose
window.eXo = window.eXo || {};
window.eXo.social = window.eXo.social || {};
window.eXo.social.Locale = Locale;
</code></pre>

<p>})();
```</p>

<p>Trong class trên không có gì đáng nói ngoài cách dùng regular expression để thay thế chuỗi với
pattern là <code>{0}, {1}, {2}</code> và lấy các index trong <code>{}</code> để thay bằng <code>opt_args[index]</code> tương ứng.
Bạn có thể xem thêm vài viết của <a href="http://twitter.com/sanglt">@sanglt</a>:
<a href="http://www.sanglt.com/content/su-dung-regular-expression-trong-javascript">Sử dụng regular expression trong JavaScript</a>.</p>

<ul>
<li>Chú ý: Class <code>eXo.social.Locale</code> dùng debug được @cowboy viết, đây là cách debug/log tuyệt vời và
tớ rất thích. Giờ trong tất cả các dự án hay ứng dụng nào tớ cũng dùng, sau này nhìn vào console là
biết lỗi gì ở đâu ngay, chứ dùng alert thì đúng là cực hình. Các bạn cũng nên sử dụng cách debug/log
này :).</li>
</ul>


<p>Download ứng dụng ví dụ đơn giản với cách thêm đối số vào &ldquo;message bundle&rdquo; tại
<a href="http://github.com/hoatle/opensocial/downloads">http://github.com/hoatle/opensocial/downloads</a></p>

<p>Mã nguồn tớ để ở đây: <a href="http://github.com/hoatle/opensocial/tree/master/message-bundle">http://github.com/hoatle/opensocial/tree/master/message-bundle</a></p>

<p>Đây là file ứng dụng xml:</p>

<p>```xml
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?>
<Module></p>

<pre><code>&lt;ModulePrefs title="Arguments Binding Message Bundle"
             description="Simple-App for arguments binding with message bundle"
             author_email="hoatlevan@gmail.com"
             author_affiliation="eXo Platform"&gt;
    &lt;Locale messages="locale/ALL_ALL.xml" /&gt;
    &lt;Locale lang="en" messages="locale/en_ALL.xml" /&gt;
    &lt;Locale lang="vi" messages="locale/vi_ALL.xml" /&gt;
    &lt;Require feature="opensocial-0.8" /&gt;
&lt;/ModulePrefs&gt;
&lt;Content type="html"&gt;
&lt;![CDATA[
    &lt;link rel="stylesheet" type="text/css" href="style/style.css" /&gt;
    &lt;script type="text/javascript" src="script/debug.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="script/eXo/social/Locale.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="script/app.js"&gt;&lt;/script&gt;
    &lt;p&gt;Resource bundle rendered by server: &lt;strong&gt;__MSG_hello_world__&lt;/strong&gt;&lt;/p&gt;
    &lt;p&gt;Resource bundle rendered by JavaScript:&lt;/p&gt;
    &lt;div id="helloMsg"&gt;&lt;/div&gt;
    &lt;div id="helloMsgArgs"&gt;&lt;/div&gt;
]]&gt;
&lt;/Content&gt;
</code></pre>

<p></Module>
```</p>

<p>Có thể thấy ở trên <code>__MSG_hello_world__</code> sẽ được thay thế bằng message bundle tương ứng với key là
&ldquo;hello_world&rdquo; (tớ để tất cả các file message bundle trong thư mục <code>locale</code>).</p>

<p>Để sử dụng class <code>eXo.social.Locale</code>, chúng ta có file app.js:</p>

<p>```javascript
function run() {</p>

<pre><code>var prefs = new gadgets.Prefs(),
    helloWorld = prefs.getMsg('hello_world');
alert(helloWorld); //"Hello world!" if current language is English
                   //"Chào thế giới!" if current language is Vietnamese

//eXo.social.Locale usage
var Locale = eXo.social.Locale;
var helloMsgEl = document.getElementById('helloMsg'),
    helloMsgArgsEl = document.getElementById('helloMsgArgs');

helloMsgEl.innerHTML = Locale.getMsg('hello_world');
helloMsgArgsEl.innerHTML = Locale.getMsg('hello_user_to_place', ['hoatle', 'Vietnam']);
</code></pre>

<p>}</p>

<p>gadgets.util.registerOnLoadHandler(run);
```</p>

<p>Bạn có thể chạy ứng dụng này ở bất kì OpenSocial container nào. Chúc bạn code vui :D.</p>

<p>Lưu ý: Có thể sử dụng OpenSocial templates để thêm đối số vào message bundle nhưng hiện nay hầu hết
các container chưa hỗ trợ hết.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic arguments binding with OpenSocial message bundle]]></title>
    <link href="http://blog.hoatle.info/2010/01/16/dynamic-arguments-binding-with-opensocial-message-bundle/"/>
    <updated>2010-01-16T19:44:00+00:00</updated>
    <id>http://blog.hoatle.info/2010/01/16/dynamic-arguments-binding-with-opensocial-message-bundle</id>
    <content type="html"><![CDATA[<h2>Problem</h2>

<ul>
<li><p>Working with OpenSocial message bundle for localization, sometimes it&rsquo;s necessary to bind dynamic
arguments to the message. For example, we have greeting message like this: <code>Hello {user}</code> in which
user will be replaced by user&rsquo;s name. But currently with OpenSocial api, we can&rsquo;t. We just can get
message bundle by the key without passing any arguments for substitution.</p></li>
<li><p>So this is my approach: using <code>eXo.social.Locale.getMsg(key)</code> the same as <code>prefs.getMsg(key)</code> and
<code>eXo.social.Locale.getMsg(key, [val1, val2,...]);</code> for dynamic arguments binding with message bundle.</p></li>
</ul>


<!-- more -->


<h2>Solution</h2>

<ul>
<li>Create <code>eXo.social.Locale class:</code></li>
</ul>


<p>```javascript
/<em>*
 * Locale.js
 * Utility for Locale, dynamic binding message bundle with arguments
 * Usage:
 * eXo.social.Locale.getLang(); the same as prefs.getLang();
 * eXo.social.Locale.getCountry(); the same as prefs.getCountry();
 * eXo.social.Locale.getMsg(key); the same as prefs.getMsg(key);
 * eXo.social.Locale.getMsg(key, args); dynamic binding argument to message bundle
 * @author  hoatle
 * @since   October 27, 2009
 * @copyright   eXo Platform
 </em>/</p>

<p>(function() {</p>

<pre><code>//prefs object to get lang, country, message bundle
var prefs;

/**
 * private function to lazily initialize prefs object
 */
function getPrefs() {
    if (!prefs) {
        prefs = new gadgets.Prefs();
    }
    return prefs;
}
/**
 * Class definition
 */
var Locale = function() {

}
/**
 * gets current lang
 * @static
 */
Locale.getLang = function() {
    prefs = getPrefs();
    return prefs.getLang();
}
/**
 * gets current country
 * @static
 */
Locale.getCountry = function() {
    prefs = getPrefs();
    return prefs.getCountry();
}
/**
 * alternative for prefs.getMsg(key)
 * uses to getMsg with provided key and substitute args
 *
 * eg: Test for {0}, {1}
 * If args does not match num of {\d}, warning and try to replace by corresponding index.
 * {0} should be replaced by args[0], etc.,
 * If args not provided, functions as prefs.getMsg(key)
 * @param   key String
 * @param   opt_args Array
 * @static
 */
Locale.getMsg = function(key, opt_args) {
    prefs = getPrefs();
    if (!key) {
        debug.warn('key is null!');
        return '';
    }
    var msg = prefs.getMsg(key);
    if (msg === '') {
        debug.warn('Can not find resource bundle with key = ' + key);
        return msg;
    }
    if (!opt_args) return msg;

    //checks if number of {\d} in msg matches opt_args.length
    var regex = /{\d+}/g;
    var matches = msg.match(regex);
    if (matches.length !== opt_args.length) {
        debug.warn("required " + matches.length + " args, provided: " + opt_args.length);
    }
    //substitutes by index: {0} in msg should be replaced by opt_args[0] and so on
    for (var i = 0, l = matches.length; i &lt; l; i++) {
        var index = matches[i].match(/\d+/g)[0];
        //TODO should improve performance
        var strToReplace = opt_args[index];
        if (!strToReplace) {
            debug.warn('matches[' + i + ']: ' + matches[i] + ' but no opt_args[' + index + ']');
        } else {
            msg = msg.replace(matches[i], opt_args[index]);
        }
    }
    return msg;
}
//Expose
window.eXo = window.eXo || {};
window.eXo.social = window.eXo.social || {};
window.eXo.social.Locale = Locale;
</code></pre>

<p>})();
```</p>

<p>Note: The <code>eXo.social.Locale</code> class uses <code>debug</code>, thanks @cowboy for his excellent JavaScript
log/debug. I love it &lt;3. All my projects and apps use it, you should also use this way of debug/log
instead of alert :).</p>

<p>Download sample app for testing at <a href="http://github.com/hoatle/opensocial/downloads">http://github.com/hoatle/opensocial/downloads</a></p>

<p>Source code available at: <a href="http://github.com/hoatle/opensocial/tree/master/message-bundle">http://github.com/hoatle/opensocial/tree/master/message-bundle</a></p>

<p>The xml app file:</p>

<p>```xml
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?>
<Module></p>

<pre><code>&lt;ModulePrefs title="Arguments Binding Message Bundle"
             description="Simple-App for arguments binding with message bundle"
             author_email="hoatlevan@gmail.com"
             author_affiliation="eXo Platform"&gt;
    &lt;Locale messages="locale/ALL_ALL.xml" /&gt;
    &lt;Locale lang="en" messages="locale/en_ALL.xml" /&gt;
    &lt;Locale lang="vi" messages="locale/vi_ALL.xml" /&gt;
    &lt;Require feature="opensocial-0.8" /&gt;
&lt;/ModulePrefs&gt;
&lt;Content type="html"&gt;
&lt;![CDATA[
    &lt;link rel="stylesheet" type="text/css" href="style/style.css" /&gt;
    &lt;script type="text/javascript" src="script/debug.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="script/eXo/social/Locale.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="script/app.js"&gt;&lt;/script&gt;
    &lt;p&gt;Resource bundle rendered by server: &lt;strong&gt;__MSG_hello_world__&lt;/strong&gt;&lt;/p&gt;
    &lt;p&gt;Resource bundle rendered by JavaScript:&lt;/p&gt;
    &lt;div id="helloMsg"&gt;&lt;/div&gt;
    &lt;div id="helloMsgArgs"&gt;&lt;/div&gt;
]]&gt;
&lt;/Content&gt;
</code></pre>

<p></Module>
```</p>

<p>In the app code above, <code>__MSG_hello_world__</code> will be substituted by server with found message bundle
with key &ldquo;hello_world&rdquo; defined in message bundles files. (in <code>/locale</code> folder).</p>

<p>To test <code>eXo.social.Locale</code> class, we have the <code>app.js</code>:</p>

<p>```javascript
function run() {</p>

<pre><code>var prefs = new gadgets.Prefs(),
    helloWorld = prefs.getMsg('hello_world');
alert(helloWorld); //"Hello world!" if current language is English
                   //"Chào thế giới!" if current language is Vietnamese

//eXo.social.Locale usage
var Locale = eXo.social.Locale;
var helloMsgEl = document.getElementById('helloMsg'),
    helloMsgArgsEl = document.getElementById('helloMsgArgs');

helloMsgEl.innerHTML = Locale.getMsg('hello_world');
helloMsgArgsEl.innerHTML = Locale.getMsg('hello_user_to_place', ['hoatle', 'Vietnam']);
</code></pre>

<p>}</p>

<p>gadgets.util.registerOnLoadHandler(run);
```</p>

<p>You can test this sample app from any OpenSocial container. Happy coding :D.</p>

<p>P/S: We can use OpenSocial template for arguments binding with message bundle but it&rsquo;s currently
not fully supported by all containers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSDE - môi trường tuyệt vời cho các nhà phát triển ứng dụng OpenSocial]]></title>
    <link href="http://blog.hoatle.info/2009/02/22/osde-moi-truong-tuyet-voi-cho-cac-nha-phat-trien-ung-dung-opensocial/"/>
    <updated>2009-02-22T23:06:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/22/osde-moi-truong-tuyet-voi-cho-cac-nha-phat-trien-ung-dung-opensocial</id>
    <content type="html"><![CDATA[<p>Vừa chiều nay xong vào twitter search về opensocial, thấy mọi người đang rất quan tâm đến OpenSocia
weekendapps. Tự dưng thấy có cái link đến project này: OSDE &ndash; OpenSocial Development Environment và
yêu ngay tắp lự. Dự án là một module cho Eclipse để phát triển các ứng dụng OpenSocial trên môi
trường phát triển của các nhà phát triển.</p>

<p>Tớ vẫn còn nhớ cách đây hơn tháng vẫn code ứng dụng rồi test luôn trên các container thật như orkut,
hi5, myspace, friendster&hellip; nhưng rồi chẳng hiểu sao chỉ test được mỗi trên orkut :|. Khi đăng kí
trên các mạng này, để test ứng dụng của mình, bạn phải đăng kí, kết bạn [để test:)] và sau đó tiến
hành test và nhờ các friend-tester của mình test cho nhau :)).</p>

<p>Theo tớ đây là những bước nhàm chán và thực sự không phải cách pro trong phát triển ứng dụng. Bạn sẽ
test ứng dụng của mình như thế nào khi không có kết nối internet? OSDE chính là giải pháp hoàn hảo
và thực sự là module tuyệt vời cho Eclipse để phát triển các ứng dụng OpenSocial.</p>

<p>Bạn còn chờ gì nữa, project đó đây và hãy phát triển những ứng dụng OpenSocial tuyệt vời cho cộng
đồng nhé: <a href="http://www.eisbahn.jp/trac/osde/">http://www.eisbahn.jp/trac/osde/</a></p>

<p>Tuyệt vời, không thể nói gì hơn :). Thực sự có module này mình hào hứng hơn để phát triển các ứng
dụng OpenSocial. Code cho vui ý mà, hè hè ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSDE - great for OpenSocial developers]]></title>
    <link href="http://blog.hoatle.info/2009/02/22/osde-great-for-opensocial-developers/"/>
    <updated>2009-02-22T22:53:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/02/22/osde-great-for-opensocial-developers</id>
    <content type="html"><![CDATA[<p>This afternoon I just hit with this project: OSDE &ndash; OpenSocial Developement Environment and loved it
at first sight :). This project is awesome for OpenSocial developers to work on their own
environment. I remembered on the first days of developing app, registered all opensocial containers,
make friends [for test :)] and then test the app. Somehow boring steps and not the pro way of app
development. What if you can not have internet connnection but you still want to test you opensocial
app. OSDE &ndash; OpenSocial Developement Environment is our solution. This is a great module for
Eclipse :).</p>

<p>Click on this link and let&rsquo;s create great apps: <a href="http://www.eisbahn.jp/trac/osde/">http://www.eisbahn.jp/trac/osde/</a></p>

<p>Everything there is good enough to code, much more easier to have your app in development stage :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gửi ứng dụng cuộc thi OpenSocial Đông Nam Á]]></title>
    <link href="http://blog.hoatle.info/2009/01/12/gui-ung-dung-cuoc-thi-opensocial-dong-nam-a/"/>
    <updated>2009-01-12T17:29:00+00:00</updated>
    <id>http://blog.hoatle.info/2009/01/12/gui-ung-dung-cuoc-thi-opensocial-dong-nam-a</id>
    <content type="html"><![CDATA[<p>Vừa submit cái ứng dụng dự thi, nhưng mà không biết thế nào cả. Ứng dụng thì được test + develop ở
mỗi orkut, còn lại các container khác thì có nhiều vấn đề. Tức nhất là mình không test ngay ở eXo
Social, nếu mà chỉ cần chạy trên này là thỏa mãn điều kiện cuộc thi rồi. Chắc là người ta cũng cân
nhắc. Sau đây là một số hình chụp.</p>

<p>Khi Search + Preview + Download:</p>

<p><img class="center <a" src="href="http://farm4.static.flickr.com/3317/3183569511_9b56d9a977_o.png">http://farm4.static.flickr.com/3317/3183569511_9b56d9a977_o.png</a>" title="Khi Search + Preview + Download" ></p>

<p>Khi xem ở chế độ song detail:</p>

<p><img class="center <a" src="href="http://farm4.static.flickr.com/3126/3184221303_07c0df6e96.jpg?v=0">http://farm4.static.flickr.com/3126/3184221303_07c0df6e96.jpg?v=0</a>" title="Khi xem ở chế độ song detail" ></p>

<p>Viết lại cái này cho eXo Social, vừa vẽ vẽ vài cái layout, thật là pờ-zồ :), chả giống gì cái trên
cả. Kế thừa cái cũ + chính thức sang production.</p>
]]></content>
  </entry>
  
</feed>
